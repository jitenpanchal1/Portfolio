import{r as dm,g as hy,R as Lb,a as de,j as xn}from"./index-CE8-aVDd.js";var Bd={exports:{}},bs={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var fv;function Pb(){return fv||(fv=1,bs.ConcurrentRoot=1,bs.ContinuousEventPriority=8,bs.DefaultEventPriority=32,bs.DiscreteEventPriority=2,bs.IdleEventPriority=268435456,bs.LegacyRoot=0,bs.NoEventPriority=0),bs}var dv;function Ib(){return dv||(dv=1,Bd.exports=Pb()),Bd.exports}var zu=Ib();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Lh="179",Ob={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Bb={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},fy=0,Xp=1,dy=2,zb=3,py=0,Ph=1,bl=2,Xi=3,Ps=0,Yn=1,ns=2,Ns=0,ir=1,qp=2,Yp=3,Zp=4,my=5,la=100,gy=101,vy=102,_y=103,yy=104,xy=200,Sy=201,My=202,by=203,ku=204,Wu=205,Ey=206,Ty=207,Ay=208,Cy=209,wy=210,Ry=211,Dy=212,Uy=213,Ny=214,Xu=0,qu=1,Yu=2,rr=3,Zu=4,Ku=5,ju=6,Ju=7,Jl=0,Ly=1,Py=2,as=0,Iy=1,Oy=2,By=3,pm=4,zy=5,Fy=6,Hy=7,Kp="attached",Vy="detached",Ih=300,Is=301,ha=302,Pl=303,Il=304,Co=306,Ol=1e3,Li=1001,Bl=1002,Tn=1003,mm=1004,Fb=1004,co=1005,Hb=1005,fn=1006,El=1007,Vb=1007,is=1008,Gb=1008,Pi=1009,gm=1010,vm=1011,go=1012,Oh=1013,Os=1014,ni=1015,wo=1016,Bh=1017,zh=1018,vo=1020,_m=35902,ym=1021,xm=1022,Bn=1023,_o=1026,yo=1027,Fh=1028,Ql=1029,Sm=1030,Hh=1031,kb=1032,Vh=1033,Tl=33776,Al=33777,Cl=33778,wl=33779,Qu=35840,$u=35841,th=35842,eh=35843,nh=36196,ih=37492,sh=37496,ah=37808,rh=37809,oh=37810,lh=37811,ch=37812,uh=37813,hh=37814,fh=37815,dh=37816,ph=37817,mh=37818,gh=37819,vh=37820,_h=37821,Rl=36492,yh=36494,xh=36495,Mm=36283,Sh=36284,Mh=36285,bh=36286,Gy=2200,ky=2201,Wy=2202,zl=2300,Eh=2301,Fu=2302,tr=2400,er=2401,Fl=2402,Gh=2500,bm=2501,Wb=0,Xb=1,qb=2,Xy=3200,qy=3201,Yb=3202,Zb=3203,pa=0,Yy=1,Ds="",On="srgb",fa="srgb-linear",Hl="linear",Fe="srgb",Kb=0,Ja=7680,jb=7681,Jb=7682,Qb=7683,$b=34055,tE=34056,eE=5386,nE=512,iE=513,sE=514,aE=515,rE=516,oE=517,lE=518,jp=519,Zy=512,Ky=513,jy=514,Em=515,Jy=516,Qy=517,$y=518,tx=519,Vl=35044,cE=35048,uE=35040,hE=35045,fE=35049,dE=35041,pE=35046,mE=35050,gE=35042,vE="100",Jp="300 es",yi=2e3,xo=2001,_E={COMPUTE:"compute",RENDER:"render"},yE={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},xE={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class ls{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}}const Ln=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let pv=1234567;const sr=Math.PI/180,So=180/Math.PI;function xi(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Ln[s&255]+Ln[s>>8&255]+Ln[s>>16&255]+Ln[s>>24&255]+"-"+Ln[t&255]+Ln[t>>8&255]+"-"+Ln[t>>16&15|64]+Ln[t>>24&255]+"-"+Ln[e&63|128]+Ln[e>>8&255]+"-"+Ln[e>>16&255]+Ln[e>>24&255]+Ln[n&255]+Ln[n>>8&255]+Ln[n>>16&255]+Ln[n>>24&255]).toLowerCase()}function oe(s,t,e){return Math.max(t,Math.min(e,s))}function Tm(s,t){return(s%t+t)%t}function SE(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)}function ME(s,t,e){return s!==t?(e-s)/(t-s):0}function Dl(s,t,e){return(1-e)*s+e*t}function bE(s,t,e,n){return Dl(s,t,1-Math.exp(-e*n))}function EE(s,t=1){return t-Math.abs(Tm(s,t*2)-t)}function TE(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*(3-2*s))}function AE(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*s*(s*(s*6-15)+10))}function CE(s,t){return s+Math.floor(Math.random()*(t-s+1))}function wE(s,t){return s+Math.random()*(t-s)}function RE(s){return s*(.5-Math.random())}function DE(s){s!==void 0&&(pv=s);let t=pv+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function UE(s){return s*sr}function NE(s){return s*So}function LE(s){return(s&s-1)===0&&s!==0}function PE(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function IE(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function OE(s,t,e,n,i){const o=Math.cos,l=Math.sin,c=o(e/2),h=l(e/2),f=o((t+n)/2),p=l((t+n)/2),m=o((t-n)/2),g=l((t-n)/2),v=o((n-t)/2),x=l((n-t)/2);switch(i){case"XYX":s.set(c*p,h*m,h*g,c*f);break;case"YZY":s.set(h*g,c*p,h*m,c*f);break;case"ZXZ":s.set(h*m,h*g,c*p,c*f);break;case"XZX":s.set(c*p,h*x,h*v,c*f);break;case"YXY":s.set(h*v,c*p,h*x,c*f);break;case"ZYZ":s.set(h*x,h*v,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function qn(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function ve(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const BE={DEG2RAD:sr,RAD2DEG:So,generateUUID:xi,clamp:oe,euclideanModulo:Tm,mapLinear:SE,inverseLerp:ME,lerp:Dl,damp:bE,pingpong:EE,smoothstep:TE,smootherstep:AE,randInt:CE,randFloat:wE,randFloatSpread:RE,seededRandom:DE,degToRad:UE,radToDeg:NE,isPowerOfTwo:LE,ceilPowerOfTwo:PE,floorPowerOfTwo:IE,setQuaternionFromProperEuler:OE,normalize:ve,denormalize:qn};class dt{constructor(t=0,e=0){dt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=oe(this.x,t.x,e.x),this.y=oe(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=oe(this.x,t,e),this.y=oe(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(oe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(oe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),o=this.x-t.x,l=this.y-t.y;return this.x=o*n-l*i+t.x,this.y=o*i+l*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ii{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,o,l,c){let h=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=o[l+0],v=o[l+1],x=o[l+2],b=o[l+3];if(c===0){t[e+0]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=v,t[e+2]=x,t[e+3]=b;return}if(m!==b||h!==g||f!==v||p!==x){let S=1-c;const _=h*g+f*v+p*x+m*b,E=_>=0?1:-1,A=1-_*_;if(A>Number.EPSILON){const U=Math.sqrt(A),D=Math.atan2(U,_*E);S=Math.sin(S*D)/U,c=Math.sin(c*D)/U}const T=c*E;if(h=h*S+g*T,f=f*S+v*T,p=p*S+x*T,m=m*S+b*T,S===1-c){const U=1/Math.sqrt(h*h+f*f+p*p+m*m);h*=U,f*=U,p*=U,m*=U}}t[e]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,i,o,l){const c=n[i],h=n[i+1],f=n[i+2],p=n[i+3],m=o[l],g=o[l+1],v=o[l+2],x=o[l+3];return t[e]=c*x+p*m+h*v-f*g,t[e+1]=h*x+p*g+f*m-c*v,t[e+2]=f*x+p*v+c*g-h*m,t[e+3]=p*x-c*m-h*g-f*v,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,f=c(n/2),p=c(i/2),m=c(o/2),g=h(n/2),v=h(i/2),x=h(o/2);switch(l){case"XYZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"YXZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"ZXY":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"ZYX":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"YZX":this._x=g*p*m+f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m-g*v*x;break;case"XZY":this._x=g*p*m-f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],o=e[8],l=e[1],c=e[5],h=e[9],f=e[2],p=e[6],m=e[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(p-h)*v,this._y=(o-f)*v,this._z=(l-i)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(p-h)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(o+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(o-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(h+p)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-i)/v,this._x=(o+f)/v,this._y=(h+p)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(oe(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,o=t._z,l=t._w,c=e._x,h=e._y,f=e._z,p=e._w;return this._x=n*p+l*c+i*f-o*h,this._y=i*p+l*h+o*c-n*f,this._z=o*p+l*f+n*h-i*c,this._w=l*p-n*c-i*h-o*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,o=this._z,l=this._w;let c=l*t._w+n*t._x+i*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=i,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const v=1-e;return this._w=v*l+e*this._w,this._x=v*n+e*this._x,this._y=v*i+e*this._y,this._z=v*o+e*this._z,this.normalize(),this}const f=Math.sqrt(h),p=Math.atan2(f,c),m=Math.sin((1-e)*p)/f,g=Math.sin(e*p)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=o*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),o=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),o*Math.sin(e),o*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class O{constructor(t=0,e=0,n=0){O.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(mv.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(mv.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[3]*n+o[6]*i,this.y=o[1]*e+o[4]*n+o[7]*i,this.z=o[2]*e+o[5]*n+o[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=t.elements,l=1/(o[3]*e+o[7]*n+o[11]*i+o[15]);return this.x=(o[0]*e+o[4]*n+o[8]*i+o[12])*l,this.y=(o[1]*e+o[5]*n+o[9]*i+o[13])*l,this.z=(o[2]*e+o[6]*n+o[10]*i+o[14])*l,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,o=t.x,l=t.y,c=t.z,h=t.w,f=2*(l*i-c*n),p=2*(c*e-o*i),m=2*(o*n-l*e);return this.x=e+h*f+l*m-c*p,this.y=n+h*p+c*f-o*m,this.z=i+h*m+o*p-l*f,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i,this.y=o[1]*e+o[5]*n+o[9]*i,this.z=o[2]*e+o[6]*n+o[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=oe(this.x,t.x,e.x),this.y=oe(this.y,t.y,e.y),this.z=oe(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=oe(this.x,t,e),this.y=oe(this.y,t,e),this.z=oe(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(oe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,o=t.z,l=e.x,c=e.y,h=e.z;return this.x=i*h-o*c,this.y=o*l-n*h,this.z=n*c-i*l,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return zd.copy(this).projectOnVector(t),this.sub(zd)}reflect(t){return this.sub(zd.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(oe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const zd=new O,mv=new ii;class me{constructor(t,e,n,i,o,l,c,h,f){me.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f)}set(t,e,n,i,o,l,c,h,f){const p=this.elements;return p[0]=t,p[1]=i,p[2]=c,p[3]=e,p[4]=o,p[5]=h,p[6]=n,p[7]=l,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[3],h=n[6],f=n[1],p=n[4],m=n[7],g=n[2],v=n[5],x=n[8],b=i[0],S=i[3],_=i[6],E=i[1],A=i[4],T=i[7],U=i[2],D=i[5],P=i[8];return o[0]=l*b+c*E+h*U,o[3]=l*S+c*A+h*D,o[6]=l*_+c*T+h*P,o[1]=f*b+p*E+m*U,o[4]=f*S+p*A+m*D,o[7]=f*_+p*T+m*P,o[2]=g*b+v*E+x*U,o[5]=g*S+v*A+x*D,o[8]=g*_+v*T+x*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8];return e*l*p-e*c*f-n*o*p+n*c*h+i*o*f-i*l*h}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=p*l-c*f,g=c*h-p*o,v=f*o-l*h,x=e*m+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/x;return t[0]=m*b,t[1]=(i*f-p*n)*b,t[2]=(c*n-i*l)*b,t[3]=g*b,t[4]=(p*e-i*h)*b,t[5]=(i*o-c*e)*b,t[6]=v*b,t[7]=(n*h-f*e)*b,t[8]=(l*e-n*o)*b,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,o,l,c){const h=Math.cos(o),f=Math.sin(o);return this.set(n*h,n*f,-n*(h*l+f*c)+l+t,-i*f,i*h,-i*(-f*l+h*c)+c+e,0,0,1),this}scale(t,e){return this.premultiply(Fd.makeScale(t,e)),this}rotate(t){return this.premultiply(Fd.makeRotation(-t)),this}translate(t,e){return this.premultiply(Fd.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Fd=new me;function ex(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}const zE={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function uo(s,t){return new zE[s](t)}function Gl(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function nx(){const s=Gl("canvas");return s.style.display="block",s}const gv={};function po(s){s in gv||(gv[s]=!0,console.warn(s))}function FE(s,t,e){return new Promise(function(n,i){function o(){switch(s.clientWaitSync(t,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(o,e);break;default:n()}}setTimeout(o,e)})}const vv=new me().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),_v=new me().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function HE(){const s={enabled:!0,workingColorSpace:fa,spaces:{},convert:function(i,o,l){return this.enabled===!1||o===l||!o||!l||(this.spaces[o].transfer===Fe&&(i.r=Ls(i.r),i.g=Ls(i.g),i.b=Ls(i.b)),this.spaces[o].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[o].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===Fe&&(i.r=mo(i.r),i.g=mo(i.g),i.b=mo(i.b))),i},workingToColorSpace:function(i,o){return this.convert(i,this.workingColorSpace,o)},colorSpaceToWorking:function(i,o){return this.convert(i,o,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Ds?Hl:this.spaces[i].transfer},getLuminanceCoefficients:function(i,o=this.workingColorSpace){return i.fromArray(this.spaces[o].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,o,l){return i.copy(this.spaces[o].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,o){return po("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,o)},toWorkingColorSpace:function(i,o){return po("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,o)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[fa]:{primaries:t,whitePoint:n,transfer:Hl,toXYZ:vv,fromXYZ:_v,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:On},outputColorSpaceConfig:{drawingBufferColorSpace:On}},[On]:{primaries:t,whitePoint:n,transfer:Fe,toXYZ:vv,fromXYZ:_v,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:On}}}),s}const Ae=HE();function Ls(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function mo(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Fr;class ix{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{Fr===void 0&&(Fr=Gl("canvas")),Fr.width=t.width,Fr.height=t.height;const i=Fr.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=Fr}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Gl("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),o=i.data;for(let l=0;l<o.length;l++)o[l]=Ls(o[l]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Ls(e[n]/255)*255):e[n]=Ls(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let VE=0;class ua{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:VE++}),this.uuid=xi(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight,0):e instanceof VideoFrame?t.set(e.displayHeight,e.displayWidth,0):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let o;if(Array.isArray(i)){o=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?o.push(Hd(i[l].image)):o.push(Hd(i[l]))}else o=Hd(i);n.url=o}return e||(t.images[this.uuid]=n),n}}function Hd(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?ix.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let GE=0;const Vd=new O;class an extends ls{constructor(t=an.DEFAULT_IMAGE,e=an.DEFAULT_MAPPING,n=Li,i=Li,o=fn,l=is,c=Bn,h=Pi,f=an.DEFAULT_ANISOTROPY,p=Ds){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:GE++}),this.uuid=xi(),this.name="",this.source=new ua(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=o,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=h,this.offset=new dt(0,0),this.repeat=new dt(1,1),this.center=new dt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new me,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Vd).x}get height(){return this.source.getSize(Vd).y}get depth(){return this.source.getSize(Vd).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Ih)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Ol:t.x=t.x-Math.floor(t.x);break;case Li:t.x=t.x<0?0:1;break;case Bl:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Ol:t.y=t.y-Math.floor(t.y);break;case Li:t.y=t.y<0?0:1;break;case Bl:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}an.DEFAULT_IMAGE=null;an.DEFAULT_MAPPING=Ih;an.DEFAULT_ANISOTROPY=1;class Re{constructor(t=0,e=0,n=0,i=1){Re.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*i+l[12]*o,this.y=l[1]*e+l[5]*n+l[9]*i+l[13]*o,this.z=l[2]*e+l[6]*n+l[10]*i+l[14]*o,this.w=l[3]*e+l[7]*n+l[11]*i+l[15]*o,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,o;const h=t.elements,f=h[0],p=h[4],m=h[8],g=h[1],v=h[5],x=h[9],b=h[2],S=h[6],_=h[10];if(Math.abs(p-g)<.01&&Math.abs(m-b)<.01&&Math.abs(x-S)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+b)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const A=(f+1)/2,T=(v+1)/2,U=(_+1)/2,D=(p+g)/4,P=(m+b)/4,z=(x+S)/4;return A>T&&A>U?A<.01?(n=0,i=.707106781,o=.707106781):(n=Math.sqrt(A),i=D/n,o=P/n):T>U?T<.01?(n=.707106781,i=0,o=.707106781):(i=Math.sqrt(T),n=D/i,o=z/i):U<.01?(n=.707106781,i=.707106781,o=0):(o=Math.sqrt(U),n=P/o,i=z/o),this.set(n,i,o,e),this}let E=Math.sqrt((S-x)*(S-x)+(m-b)*(m-b)+(g-p)*(g-p));return Math.abs(E)<.001&&(E=1),this.x=(S-x)/E,this.y=(m-b)/E,this.z=(g-p)/E,this.w=Math.acos((f+v+_-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=oe(this.x,t.x,e.x),this.y=oe(this.y,t.y,e.y),this.z=oe(this.z,t.z,e.z),this.w=oe(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=oe(this.x,t,e),this.y=oe(this.y,t,e),this.z=oe(this.z,t,e),this.w=oe(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(oe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Am extends ls{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:fn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new Re(0,0,t,e),this.scissorTest=!1,this.viewport=new Re(0,0,t,e);const i={width:t,height:e,depth:n.depth},o=new an(i);this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=o.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:fn,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,o=this.textures.length;i<o;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new ua(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class os extends Am{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class kh extends an{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Tn,this.minFilter=Tn,this.wrapR=Li,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class kE extends os{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new kh(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Wh extends an{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Tn,this.minFilter=Tn,this.wrapR=Li,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class WE extends os{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Wh(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class zn{constructor(t=new O(1/0,1/0,1/0),e=new O(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Gi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Gi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Gi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const o=n.getAttribute("position");if(e===!0&&o!==void 0&&t.isInstancedMesh!==!0)for(let l=0,c=o.count;l<c;l++)t.isMesh===!0?t.getVertexPosition(l,Gi):Gi.fromBufferAttribute(o,l),Gi.applyMatrix4(t.matrixWorld),this.expandByPoint(Gi);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Xc.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Xc.copy(n.boundingBox)),Xc.applyMatrix4(t.matrixWorld),this.union(Xc)}const i=t.children;for(let o=0,l=i.length;o<l;o++)this.expandByObject(i[o],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Gi),Gi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ll),qc.subVectors(this.max,ll),Hr.subVectors(t.a,ll),Vr.subVectors(t.b,ll),Gr.subVectors(t.c,ll),ta.subVectors(Vr,Hr),ea.subVectors(Gr,Vr),Ba.subVectors(Hr,Gr);let e=[0,-ta.z,ta.y,0,-ea.z,ea.y,0,-Ba.z,Ba.y,ta.z,0,-ta.x,ea.z,0,-ea.x,Ba.z,0,-Ba.x,-ta.y,ta.x,0,-ea.y,ea.x,0,-Ba.y,Ba.x,0];return!Gd(e,Hr,Vr,Gr,qc)||(e=[1,0,0,0,1,0,0,0,1],!Gd(e,Hr,Vr,Gr,qc))?!1:(Yc.crossVectors(ta,ea),e=[Yc.x,Yc.y,Yc.z],Gd(e,Hr,Vr,Gr,qc))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Gi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Gi).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Es[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Es[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Es[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Es[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Es[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Es[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Es[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Es[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Es),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const Es=[new O,new O,new O,new O,new O,new O,new O,new O],Gi=new O,Xc=new zn,Hr=new O,Vr=new O,Gr=new O,ta=new O,ea=new O,Ba=new O,ll=new O,qc=new O,Yc=new O,za=new O;function Gd(s,t,e,n,i){for(let o=0,l=s.length-3;o<=l;o+=3){za.fromArray(s,o);const c=i.x*Math.abs(za.x)+i.y*Math.abs(za.y)+i.z*Math.abs(za.z),h=t.dot(za),f=e.dot(za),p=n.dot(za);if(Math.max(-Math.max(h,f,p),Math.min(h,f,p))>c)return!1}return!0}const XE=new zn,cl=new O,kd=new O;class An{constructor(t=new O,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):XE.setFromPoints(t).getCenter(n);let i=0;for(let o=0,l=t.length;o<l;o++)i=Math.max(i,n.distanceToSquared(t[o]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;cl.subVectors(t,this.center);const e=cl.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(cl,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(kd.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(cl.copy(t.center).add(kd)),this.expandByPoint(cl.copy(t.center).sub(kd))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const Ts=new O,Wd=new O,Zc=new O,na=new O,Xd=new O,Kc=new O,qd=new O;class Ro{constructor(t=new O,e=new O(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ts)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ts.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ts.copy(this.origin).addScaledVector(this.direction,e),Ts.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Wd.copy(t).add(e).multiplyScalar(.5),Zc.copy(e).sub(t).normalize(),na.copy(this.origin).sub(Wd);const o=t.distanceTo(e)*.5,l=-this.direction.dot(Zc),c=na.dot(this.direction),h=-na.dot(Zc),f=na.lengthSq(),p=Math.abs(1-l*l);let m,g,v,x;if(p>0)if(m=l*h-c,g=l*c-h,x=o*p,m>=0)if(g>=-x)if(g<=x){const b=1/p;m*=b,g*=b,v=m*(m+l*g+2*c)+g*(l*m+g+2*h)+f}else g=o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g=-o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g<=-x?(m=Math.max(0,-(-l*o+c)),g=m>0?-o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f):g<=x?(m=0,g=Math.min(Math.max(-o,-h),o),v=g*(g+2*h)+f):(m=Math.max(0,-(l*o+c)),g=m>0?o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f);else g=l>0?-o:o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(Wd).addScaledVector(Zc,g),v}intersectSphere(t,e){Ts.subVectors(t.center,this.origin);const n=Ts.dot(this.direction),i=Ts.dot(Ts)-n*n,o=t.radius*t.radius;if(i>o)return null;const l=Math.sqrt(o-i),c=n-l,h=n+l;return h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,o,l,c,h;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(t.min.x-g.x)*f,i=(t.max.x-g.x)*f):(n=(t.max.x-g.x)*f,i=(t.min.x-g.x)*f),p>=0?(o=(t.min.y-g.y)*p,l=(t.max.y-g.y)*p):(o=(t.max.y-g.y)*p,l=(t.min.y-g.y)*p),n>l||o>i||((o>n||isNaN(n))&&(n=o),(l<i||isNaN(i))&&(i=l),m>=0?(c=(t.min.z-g.z)*m,h=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,h=(t.min.z-g.z)*m),n>h||c>i)||((c>n||n!==n)&&(n=c),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Ts)!==null}intersectTriangle(t,e,n,i,o){Xd.subVectors(e,t),Kc.subVectors(n,t),qd.crossVectors(Xd,Kc);let l=this.direction.dot(qd),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;na.subVectors(this.origin,t);const h=c*this.direction.dot(Kc.crossVectors(na,Kc));if(h<0)return null;const f=c*this.direction.dot(Xd.cross(na));if(f<0||h+f>l)return null;const p=-c*na.dot(qd);return p<0?null:this.at(p/l,o)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ce{constructor(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){ce.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S)}set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=i,_[1]=o,_[5]=l,_[9]=c,_[13]=h,_[2]=f,_[6]=p,_[10]=m,_[14]=g,_[3]=v,_[7]=x,_[11]=b,_[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ce().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/kr.setFromMatrixColumn(t,0).length(),o=1/kr.setFromMatrixColumn(t,1).length(),l=1/kr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*o,e[5]=n[5]*o,e[6]=n[6]*o,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,o=t.z,l=Math.cos(n),c=Math.sin(n),h=Math.cos(i),f=Math.sin(i),p=Math.cos(o),m=Math.sin(o);if(t.order==="XYZ"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=-h*m,e[8]=f,e[1]=v+x*f,e[5]=g-b*f,e[9]=-c*h,e[2]=b-g*f,e[6]=x+v*f,e[10]=l*h}else if(t.order==="YXZ"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g+b*c,e[4]=x*c-v,e[8]=l*f,e[1]=l*m,e[5]=l*p,e[9]=-c,e[2]=v*c-x,e[6]=b+g*c,e[10]=l*h}else if(t.order==="ZXY"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g-b*c,e[4]=-l*m,e[8]=x+v*c,e[1]=v+x*c,e[5]=l*p,e[9]=b-g*c,e[2]=-l*f,e[6]=c,e[10]=l*h}else if(t.order==="ZYX"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=x*f-v,e[8]=g*f+b,e[1]=h*m,e[5]=b*f+g,e[9]=v*f-x,e[2]=-f,e[6]=c*h,e[10]=l*h}else if(t.order==="YZX"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=b-g*m,e[8]=x*m+v,e[1]=m,e[5]=l*p,e[9]=-c*p,e[2]=-f*p,e[6]=v*m+x,e[10]=g-b*m}else if(t.order==="XZY"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=-m,e[8]=f*p,e[1]=g*m+b,e[5]=l*p,e[9]=v*m-x,e[2]=x*m-v,e[6]=c*p,e[10]=b*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(qE,t,YE)}lookAt(t,e,n){const i=this.elements;return vi.subVectors(t,e),vi.lengthSq()===0&&(vi.z=1),vi.normalize(),ia.crossVectors(n,vi),ia.lengthSq()===0&&(Math.abs(n.z)===1?vi.x+=1e-4:vi.z+=1e-4,vi.normalize(),ia.crossVectors(n,vi)),ia.normalize(),jc.crossVectors(vi,ia),i[0]=ia.x,i[4]=jc.x,i[8]=vi.x,i[1]=ia.y,i[5]=jc.y,i[9]=vi.y,i[2]=ia.z,i[6]=jc.z,i[10]=vi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[4],h=n[8],f=n[12],p=n[1],m=n[5],g=n[9],v=n[13],x=n[2],b=n[6],S=n[10],_=n[14],E=n[3],A=n[7],T=n[11],U=n[15],D=i[0],P=i[4],z=i[8],w=i[12],C=i[1],I=i[5],$=i[9],q=i[13],K=i[2],at=i[6],F=i[10],X=i[14],G=i[3],nt=i[7],lt=i[11],mt=i[15];return o[0]=l*D+c*C+h*K+f*G,o[4]=l*P+c*I+h*at+f*nt,o[8]=l*z+c*$+h*F+f*lt,o[12]=l*w+c*q+h*X+f*mt,o[1]=p*D+m*C+g*K+v*G,o[5]=p*P+m*I+g*at+v*nt,o[9]=p*z+m*$+g*F+v*lt,o[13]=p*w+m*q+g*X+v*mt,o[2]=x*D+b*C+S*K+_*G,o[6]=x*P+b*I+S*at+_*nt,o[10]=x*z+b*$+S*F+_*lt,o[14]=x*w+b*q+S*X+_*mt,o[3]=E*D+A*C+T*K+U*G,o[7]=E*P+A*I+T*at+U*nt,o[11]=E*z+A*$+T*F+U*lt,o[15]=E*w+A*q+T*X+U*mt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],o=t[12],l=t[1],c=t[5],h=t[9],f=t[13],p=t[2],m=t[6],g=t[10],v=t[14],x=t[3],b=t[7],S=t[11],_=t[15];return x*(+o*h*m-i*f*m-o*c*g+n*f*g+i*c*v-n*h*v)+b*(+e*h*v-e*f*g+o*l*g-i*l*v+i*f*p-o*h*p)+S*(+e*f*m-e*c*v-o*l*m+n*l*v+o*c*p-n*f*p)+_*(-i*c*p-e*h*m+e*c*g+i*l*m-n*l*g+n*h*p)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=t[9],g=t[10],v=t[11],x=t[12],b=t[13],S=t[14],_=t[15],E=m*S*f-b*g*f+b*h*v-c*S*v-m*h*_+c*g*_,A=x*g*f-p*S*f-x*h*v+l*S*v+p*h*_-l*g*_,T=p*b*f-x*m*f+x*c*v-l*b*v-p*c*_+l*m*_,U=x*m*h-p*b*h-x*c*g+l*b*g+p*c*S-l*m*S,D=e*E+n*A+i*T+o*U;if(D===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/D;return t[0]=E*P,t[1]=(b*g*o-m*S*o-b*i*v+n*S*v+m*i*_-n*g*_)*P,t[2]=(c*S*o-b*h*o+b*i*f-n*S*f-c*i*_+n*h*_)*P,t[3]=(m*h*o-c*g*o-m*i*f+n*g*f+c*i*v-n*h*v)*P,t[4]=A*P,t[5]=(p*S*o-x*g*o+x*i*v-e*S*v-p*i*_+e*g*_)*P,t[6]=(x*h*o-l*S*o-x*i*f+e*S*f+l*i*_-e*h*_)*P,t[7]=(l*g*o-p*h*o+p*i*f-e*g*f-l*i*v+e*h*v)*P,t[8]=T*P,t[9]=(x*m*o-p*b*o-x*n*v+e*b*v+p*n*_-e*m*_)*P,t[10]=(l*b*o-x*c*o+x*n*f-e*b*f-l*n*_+e*c*_)*P,t[11]=(p*c*o-l*m*o-p*n*f+e*m*f+l*n*v-e*c*v)*P,t[12]=U*P,t[13]=(p*b*i-x*m*i+x*n*g-e*b*g-p*n*S+e*m*S)*P,t[14]=(x*c*i-l*b*i-x*n*h+e*b*h+l*n*S-e*c*S)*P,t[15]=(l*m*i-p*c*i+p*n*h-e*m*h-l*n*g+e*c*g)*P,this}scale(t){const e=this.elements,n=t.x,i=t.y,o=t.z;return e[0]*=n,e[4]*=i,e[8]*=o,e[1]*=n,e[5]*=i,e[9]*=o,e[2]*=n,e[6]*=i,e[10]*=o,e[3]*=n,e[7]*=i,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),o=1-n,l=t.x,c=t.y,h=t.z,f=o*l,p=o*c;return this.set(f*l+n,f*c-i*h,f*h+i*c,0,f*c+i*h,p*c+n,p*h-i*l,0,f*h-i*c,p*h+i*l,o*h*h+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,o,l){return this.set(1,n,o,0,t,1,l,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,o=e._x,l=e._y,c=e._z,h=e._w,f=o+o,p=l+l,m=c+c,g=o*f,v=o*p,x=o*m,b=l*p,S=l*m,_=c*m,E=h*f,A=h*p,T=h*m,U=n.x,D=n.y,P=n.z;return i[0]=(1-(b+_))*U,i[1]=(v+T)*U,i[2]=(x-A)*U,i[3]=0,i[4]=(v-T)*D,i[5]=(1-(g+_))*D,i[6]=(S+E)*D,i[7]=0,i[8]=(x+A)*P,i[9]=(S-E)*P,i[10]=(1-(g+b))*P,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let o=kr.set(i[0],i[1],i[2]).length();const l=kr.set(i[4],i[5],i[6]).length(),c=kr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(o=-o),t.x=i[12],t.y=i[13],t.z=i[14],ki.copy(this);const f=1/o,p=1/l,m=1/c;return ki.elements[0]*=f,ki.elements[1]*=f,ki.elements[2]*=f,ki.elements[4]*=p,ki.elements[5]*=p,ki.elements[6]*=p,ki.elements[8]*=m,ki.elements[9]*=m,ki.elements[10]*=m,e.setFromRotationMatrix(ki),n.x=o,n.y=l,n.z=c,this}makePerspective(t,e,n,i,o,l,c=yi,h=!1){const f=this.elements,p=2*o/(e-t),m=2*o/(n-i),g=(e+t)/(e-t),v=(n+i)/(n-i);let x,b;if(h)x=o/(l-o),b=l*o/(l-o);else if(c===yi)x=-(l+o)/(l-o),b=-2*l*o/(l-o);else if(c===xo)x=-l/(l-o),b=-l*o/(l-o);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return f[0]=p,f[4]=0,f[8]=g,f[12]=0,f[1]=0,f[5]=m,f[9]=v,f[13]=0,f[2]=0,f[6]=0,f[10]=x,f[14]=b,f[3]=0,f[7]=0,f[11]=-1,f[15]=0,this}makeOrthographic(t,e,n,i,o,l,c=yi,h=!1){const f=this.elements,p=2/(e-t),m=2/(n-i),g=-(e+t)/(e-t),v=-(n+i)/(n-i);let x,b;if(h)x=1/(l-o),b=l/(l-o);else if(c===yi)x=-2/(l-o),b=-(l+o)/(l-o);else if(c===xo)x=-1/(l-o),b=-o/(l-o);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return f[0]=p,f[4]=0,f[8]=0,f[12]=g,f[1]=0,f[5]=m,f[9]=0,f[13]=v,f[2]=0,f[6]=0,f[10]=x,f[14]=b,f[3]=0,f[7]=0,f[11]=0,f[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const kr=new O,ki=new ce,qE=new O(0,0,0),YE=new O(1,1,1),ia=new O,jc=new O,vi=new O,yv=new ce,xv=new ii;class Si{constructor(t=0,e=0,n=0,i=Si.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,o=i[0],l=i[4],c=i[8],h=i[1],f=i[5],p=i[9],m=i[2],g=i[6],v=i[10];switch(e){case"XYZ":this._y=Math.asin(oe(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,v),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-oe(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(oe(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-oe(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(oe(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-oe(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-p,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return yv.makeRotationFromQuaternion(t),this.setFromRotationMatrix(yv,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return xv.setFromEuler(this),this.setFromQuaternion(xv,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Si.DEFAULT_ORDER="XYZ";class Mo{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let ZE=0;const Sv=new O,Wr=new ii,As=new ce,Jc=new O,ul=new O,KE=new O,jE=new ii,Mv=new O(1,0,0),bv=new O(0,1,0),Ev=new O(0,0,1),Tv={type:"added"},JE={type:"removed"},Xr={type:"childadded",child:null},Yd={type:"childremoved",child:null};class De extends ls{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ZE++}),this.uuid=xi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=De.DEFAULT_UP.clone();const t=new O,e=new Si,n=new ii,i=new O(1,1,1);function o(){n.setFromEuler(e,!1)}function l(){e.setFromQuaternion(n,void 0,!1)}e._onChange(o),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ce},normalMatrix:{value:new me}}),this.matrix=new ce,this.matrixWorld=new ce,this.matrixAutoUpdate=De.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=De.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Mo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Wr.setFromAxisAngle(t,e),this.quaternion.multiply(Wr),this}rotateOnWorldAxis(t,e){return Wr.setFromAxisAngle(t,e),this.quaternion.premultiply(Wr),this}rotateX(t){return this.rotateOnAxis(Mv,t)}rotateY(t){return this.rotateOnAxis(bv,t)}rotateZ(t){return this.rotateOnAxis(Ev,t)}translateOnAxis(t,e){return Sv.copy(t).applyQuaternion(this.quaternion),this.position.add(Sv.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Mv,t)}translateY(t){return this.translateOnAxis(bv,t)}translateZ(t){return this.translateOnAxis(Ev,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(As.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Jc.copy(t):Jc.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ul.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?As.lookAt(ul,Jc,this.up):As.lookAt(Jc,ul,this.up),this.quaternion.setFromRotationMatrix(As),i&&(As.extractRotation(i.matrixWorld),Wr.setFromRotationMatrix(As),this.quaternion.premultiply(Wr.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Tv),Xr.child=t,this.dispatchEvent(Xr),Xr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(JE),Yd.child=t,this.dispatchEvent(Yd),Yd.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),As.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),As.multiply(t.parent.matrixWorld)),t.applyMatrix4(As),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Tv),Xr.child=t,this.dispatchEvent(Xr),Xr.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(t,e);if(l!==void 0)return l}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ul,t,KE),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ul,jE,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?c.boundingBox.toJSON():void 0,boundingSphere:c.boundingSphere?c.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(c=>({...c})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function o(c,h){return c[h.uuid]===void 0&&(c[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=o(t.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const h=c.shapes;if(Array.isArray(h))for(let f=0,p=h.length;f<p;f++){const m=h[f];o(t.shapes,m)}else o(t.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let h=0,f=this.material.length;h<f;h++)c.push(o(t.materials,this.material[h]));i.material=c}else i.material=o(t.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const h=this.animations[c];i.animations.push(o(t.animations,h))}}if(e){const c=l(t.geometries),h=l(t.materials),f=l(t.textures),p=l(t.images),m=l(t.shapes),g=l(t.skeletons),v=l(t.animations),x=l(t.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const h=[];for(const f in c){const p=c[f];delete p.metadata,h.push(p)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}De.DEFAULT_UP=new O(0,1,0);De.DEFAULT_MATRIX_AUTO_UPDATE=!0;De.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Wi=new O,Cs=new O,Zd=new O,ws=new O,qr=new O,Yr=new O,Av=new O,Kd=new O,jd=new O,Jd=new O,Qd=new Re,$d=new Re,tp=new Re;class ei{constructor(t=new O,e=new O,n=new O){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Wi.subVectors(t,e),i.cross(Wi);const o=i.lengthSq();return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,0)}static getBarycoord(t,e,n,i,o){Wi.subVectors(i,e),Cs.subVectors(n,e),Zd.subVectors(t,e);const l=Wi.dot(Wi),c=Wi.dot(Cs),h=Wi.dot(Zd),f=Cs.dot(Cs),p=Cs.dot(Zd),m=l*f-c*c;if(m===0)return o.set(0,0,0),null;const g=1/m,v=(f*h-c*p)*g,x=(l*p-c*h)*g;return o.set(1-v-x,x,v)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,ws)===null?!1:ws.x>=0&&ws.y>=0&&ws.x+ws.y<=1}static getInterpolation(t,e,n,i,o,l,c,h){return this.getBarycoord(t,e,n,i,ws)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(o,ws.x),h.addScaledVector(l,ws.y),h.addScaledVector(c,ws.z),h)}static getInterpolatedAttribute(t,e,n,i,o,l){return Qd.setScalar(0),$d.setScalar(0),tp.setScalar(0),Qd.fromBufferAttribute(t,e),$d.fromBufferAttribute(t,n),tp.fromBufferAttribute(t,i),l.setScalar(0),l.addScaledVector(Qd,o.x),l.addScaledVector($d,o.y),l.addScaledVector(tp,o.z),l}static isFrontFacing(t,e,n,i){return Wi.subVectors(n,e),Cs.subVectors(t,e),Wi.cross(Cs).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Wi.subVectors(this.c,this.b),Cs.subVectors(this.a,this.b),Wi.cross(Cs).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ei.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ei.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,o){return ei.getInterpolation(t,this.a,this.b,this.c,e,n,i,o)}containsPoint(t){return ei.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ei.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,o=this.c;let l,c;qr.subVectors(i,n),Yr.subVectors(o,n),Kd.subVectors(t,n);const h=qr.dot(Kd),f=Yr.dot(Kd);if(h<=0&&f<=0)return e.copy(n);jd.subVectors(t,i);const p=qr.dot(jd),m=Yr.dot(jd);if(p>=0&&m<=p)return e.copy(i);const g=h*m-p*f;if(g<=0&&h>=0&&p<=0)return l=h/(h-p),e.copy(n).addScaledVector(qr,l);Jd.subVectors(t,o);const v=qr.dot(Jd),x=Yr.dot(Jd);if(x>=0&&v<=x)return e.copy(o);const b=v*f-h*x;if(b<=0&&f>=0&&x<=0)return c=f/(f-x),e.copy(n).addScaledVector(Yr,c);const S=p*x-v*m;if(S<=0&&m-p>=0&&v-x>=0)return Av.subVectors(o,i),c=(m-p)/(m-p+(v-x)),e.copy(i).addScaledVector(Av,c);const _=1/(S+b+g);return l=b*_,c=g*_,e.copy(n).addScaledVector(qr,l).addScaledVector(Yr,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const sx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},sa={h:0,s:0,l:0},Qc={h:0,s:0,l:0};function ep(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}class Bt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=On){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Ae.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=Ae.workingColorSpace){return this.r=t,this.g=e,this.b=n,Ae.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=Ae.workingColorSpace){if(t=Tm(t,1),e=oe(e,0,1),n=oe(n,0,1),e===0)this.r=this.g=this.b=n;else{const o=n<=.5?n*(1+e):n+e-n*e,l=2*n-o;this.r=ep(l,o,t+1/3),this.g=ep(l,o,t),this.b=ep(l,o,t-1/3)}return Ae.colorSpaceToWorking(this,i),this}setStyle(t,e=On){function n(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let o;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(255,parseInt(o[1],10))/255,Math.min(255,parseInt(o[2],10))/255,Math.min(255,parseInt(o[3],10))/255,e);if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(100,parseInt(o[1],10))/100,Math.min(100,parseInt(o[2],10))/100,Math.min(100,parseInt(o[3],10))/100,e);break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setHSL(parseFloat(o[1])/360,parseFloat(o[2])/100,parseFloat(o[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const o=i[1],l=o.length;if(l===3)return this.setRGB(parseInt(o.charAt(0),16)/15,parseInt(o.charAt(1),16)/15,parseInt(o.charAt(2),16)/15,e);if(l===6)return this.setHex(parseInt(o,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=On){const n=sx[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ls(t.r),this.g=Ls(t.g),this.b=Ls(t.b),this}copyLinearToSRGB(t){return this.r=mo(t.r),this.g=mo(t.g),this.b=mo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=On){return Ae.workingToColorSpace(Pn.copy(this),t),Math.round(oe(Pn.r*255,0,255))*65536+Math.round(oe(Pn.g*255,0,255))*256+Math.round(oe(Pn.b*255,0,255))}getHexString(t=On){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ae.workingColorSpace){Ae.workingToColorSpace(Pn.copy(this),e);const n=Pn.r,i=Pn.g,o=Pn.b,l=Math.max(n,i,o),c=Math.min(n,i,o);let h,f;const p=(c+l)/2;if(c===l)h=0,f=0;else{const m=l-c;switch(f=p<=.5?m/(l+c):m/(2-l-c),l){case n:h=(i-o)/m+(i<o?6:0);break;case i:h=(o-n)/m+2;break;case o:h=(n-i)/m+4;break}h/=6}return t.h=h,t.s=f,t.l=p,t}getRGB(t,e=Ae.workingColorSpace){return Ae.workingToColorSpace(Pn.copy(this),e),t.r=Pn.r,t.g=Pn.g,t.b=Pn.b,t}getStyle(t=On){Ae.workingToColorSpace(Pn.copy(this),t);const e=Pn.r,n=Pn.g,i=Pn.b;return t!==On?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(sa),this.setHSL(sa.h+t,sa.s+e,sa.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(sa),t.getHSL(Qc);const n=Dl(sa.h,Qc.h,e),i=Dl(sa.s,Qc.s,e),o=Dl(sa.l,Qc.l,e);return this.setHSL(n,i,o),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,o=t.elements;return this.r=o[0]*e+o[3]*n+o[6]*i,this.g=o[1]*e+o[4]*n+o[7]*i,this.b=o[2]*e+o[5]*n+o[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Pn=new Bt;Bt.NAMES=sx;let QE=0;class Fn extends ls{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:QE++}),this.uuid=xi(),this.name="",this.type="Material",this.blending=ir,this.side=Ps,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ku,this.blendDst=Wu,this.blendEquation=la,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Bt(0,0,0),this.blendAlpha=0,this.depthFunc=rr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=jp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ja,this.stencilZFail=Ja,this.stencilZPass=Ja,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ir&&(n.blending=this.blending),this.side!==Ps&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==ku&&(n.blendSrc=this.blendSrc),this.blendDst!==Wu&&(n.blendDst=this.blendDst),this.blendEquation!==la&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==rr&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==jp&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ja&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Ja&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Ja&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}if(e){const o=i(t.textures),l=i(t.images);o.length>0&&(n.textures=o),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let o=0;o!==i;++o)n[o]=e[o].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class ma extends Fn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Bt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Si,this.combine=Jl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Us=$E();function $E(){const s=new ArrayBuffer(4),t=new Float32Array(s),e=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let h=0;h<256;++h){const f=h-127;f<-27?(n[h]=0,n[h|256]=32768,i[h]=24,i[h|256]=24):f<-14?(n[h]=1024>>-f-14,n[h|256]=1024>>-f-14|32768,i[h]=-f-1,i[h|256]=-f-1):f<=15?(n[h]=f+15<<10,n[h|256]=f+15<<10|32768,i[h]=13,i[h|256]=13):f<128?(n[h]=31744,n[h|256]=64512,i[h]=24,i[h|256]=24):(n[h]=31744,n[h|256]=64512,i[h]=13,i[h|256]=13)}const o=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let h=1;h<1024;++h){let f=h<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,o[h]=f|p}for(let h=1024;h<2048;++h)o[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)l[h]=h<<23;l[31]=1199570944,l[32]=2147483648;for(let h=33;h<63;++h)l[h]=2147483648+(h-32<<23);l[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(c[h]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:o,exponentTable:l,offsetTable:c}}function $n(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=oe(s,-65504,65504),Us.floatView[0]=s;const t=Us.uint32View[0],e=t>>23&511;return Us.baseTable[e]+((t&8388607)>>Us.shiftTable[e])}function xl(s){const t=s>>10;return Us.uint32View[0]=Us.mantissaTable[Us.offsetTable[t]+(s&1023)]+Us.exponentTable[t],Us.floatView[0]}class t1{static toHalfFloat(t){return $n(t)}static fromHalfFloat(t){return xl(t)}}const cn=new O,$c=new dt;let e1=0;class ke{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:e1++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Vl,this.updateRanges=[],this.gpuType=ni,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,o=this.itemSize;i<o;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)$c.fromBufferAttribute(this,e),$c.applyMatrix3(t),this.setXY(e,$c.x,$c.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.applyMatrix3(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.applyMatrix4(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.applyNormalMatrix(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)cn.fromBufferAttribute(this,e),cn.transformDirection(t),this.setXYZ(e,cn.x,cn.y,cn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=qn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ve(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=qn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=qn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=qn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=qn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array),o=ve(o,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Vl&&(t.usage=this.usage),t}}class n1 extends ke{constructor(t,e,n){super(new Int8Array(t),e,n)}}class i1 extends ke{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class s1 extends ke{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class a1 extends ke{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Cm extends ke{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class r1 extends ke{constructor(t,e,n){super(new Int32Array(t),e,n)}}class wm extends ke{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class o1 extends ke{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=xl(this.array[t*this.itemSize]);return this.normalized&&(e=qn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize]=$n(e),this}getY(t){let e=xl(this.array[t*this.itemSize+1]);return this.normalized&&(e=qn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+1]=$n(e),this}getZ(t){let e=xl(this.array[t*this.itemSize+2]);return this.normalized&&(e=qn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+2]=$n(e),this}getW(t){let e=xl(this.array[t*this.itemSize+3]);return this.normalized&&(e=qn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ve(e,this.array)),this.array[t*this.itemSize+3]=$n(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array)),this.array[t+0]=$n(e),this.array[t+1]=$n(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array)),this.array[t+0]=$n(e),this.array[t+1]=$n(n),this.array[t+2]=$n(i),this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array),o=ve(o,this.array)),this.array[t+0]=$n(e),this.array[t+1]=$n(n),this.array[t+2]=$n(i),this.array[t+3]=$n(o),this}}class Xt extends ke{constructor(t,e,n){super(new Float32Array(t),e,n)}}let l1=0;const Ni=new ce,np=new De,Zr=new O,_i=new zn,hl=new zn,yn=new O;class _e extends ls{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:l1++}),this.uuid=xi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(ex(t)?wm:Cm)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const o=new me().getNormalMatrix(t);n.applyNormalMatrix(o),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ni.makeRotationFromQuaternion(t),this.applyMatrix4(Ni),this}rotateX(t){return Ni.makeRotationX(t),this.applyMatrix4(Ni),this}rotateY(t){return Ni.makeRotationY(t),this.applyMatrix4(Ni),this}rotateZ(t){return Ni.makeRotationZ(t),this.applyMatrix4(Ni),this}translate(t,e,n){return Ni.makeTranslation(t,e,n),this.applyMatrix4(Ni),this}scale(t,e,n){return Ni.makeScale(t,e,n),this.applyMatrix4(Ni),this}lookAt(t){return np.lookAt(t),np.updateMatrix(),this.applyMatrix4(np.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Zr).negate(),this.translate(Zr.x,Zr.y,Zr.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,o=t.length;i<o;i++){const l=t[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new Xt(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const o=t[i];e.setXYZ(i,o.x,o.y,o.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new O(-1/0,-1/0,-1/0),new O(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const o=e[n];_i.setFromBufferAttribute(o),this.morphTargetsRelative?(yn.addVectors(this.boundingBox.min,_i.min),this.boundingBox.expandByPoint(yn),yn.addVectors(this.boundingBox.max,_i.max),this.boundingBox.expandByPoint(yn)):(this.boundingBox.expandByPoint(_i.min),this.boundingBox.expandByPoint(_i.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new O,1/0);return}if(t){const n=this.boundingSphere.center;if(_i.setFromBufferAttribute(t),e)for(let o=0,l=e.length;o<l;o++){const c=e[o];hl.setFromBufferAttribute(c),this.morphTargetsRelative?(yn.addVectors(_i.min,hl.min),_i.expandByPoint(yn),yn.addVectors(_i.max,hl.max),_i.expandByPoint(yn)):(_i.expandByPoint(hl.min),_i.expandByPoint(hl.max))}_i.getCenter(n);let i=0;for(let o=0,l=t.count;o<l;o++)yn.fromBufferAttribute(t,o),i=Math.max(i,n.distanceToSquared(yn));if(e)for(let o=0,l=e.length;o<l;o++){const c=e[o],h=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)yn.fromBufferAttribute(c,f),h&&(Zr.fromBufferAttribute(t,f),yn.add(Zr)),i=Math.max(i,n.distanceToSquared(yn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,o=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ke(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let z=0;z<n.count;z++)c[z]=new O,h[z]=new O;const f=new O,p=new O,m=new O,g=new dt,v=new dt,x=new dt,b=new O,S=new O;function _(z,w,C){f.fromBufferAttribute(n,z),p.fromBufferAttribute(n,w),m.fromBufferAttribute(n,C),g.fromBufferAttribute(o,z),v.fromBufferAttribute(o,w),x.fromBufferAttribute(o,C),p.sub(f),m.sub(f),v.sub(g),x.sub(g);const I=1/(v.x*x.y-x.x*v.y);isFinite(I)&&(b.copy(p).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(I),S.copy(m).multiplyScalar(v.x).addScaledVector(p,-x.x).multiplyScalar(I),c[z].add(b),c[w].add(b),c[C].add(b),h[z].add(S),h[w].add(S),h[C].add(S))}let E=this.groups;E.length===0&&(E=[{start:0,count:t.count}]);for(let z=0,w=E.length;z<w;++z){const C=E[z],I=C.start,$=C.count;for(let q=I,K=I+$;q<K;q+=3)_(t.getX(q+0),t.getX(q+1),t.getX(q+2))}const A=new O,T=new O,U=new O,D=new O;function P(z){U.fromBufferAttribute(i,z),D.copy(U);const w=c[z];A.copy(w),A.sub(U.multiplyScalar(U.dot(w))).normalize(),T.crossVectors(D,w);const I=T.dot(h[z])<0?-1:1;l.setXYZW(z,A.x,A.y,A.z,I)}for(let z=0,w=E.length;z<w;++z){const C=E[z],I=C.start,$=C.count;for(let q=I,K=I+$;q<K;q+=3)P(t.getX(q+0)),P(t.getX(q+1)),P(t.getX(q+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ke(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new O,o=new O,l=new O,c=new O,h=new O,f=new O,p=new O,m=new O;if(t)for(let g=0,v=t.count;g<v;g+=3){const x=t.getX(g+0),b=t.getX(g+1),S=t.getX(g+2);i.fromBufferAttribute(e,x),o.fromBufferAttribute(e,b),l.fromBufferAttribute(e,S),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),c.fromBufferAttribute(n,x),h.fromBufferAttribute(n,b),f.fromBufferAttribute(n,S),c.add(p),h.add(p),f.add(p),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(b,h.x,h.y,h.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=e.count;g<v;g+=3)i.fromBufferAttribute(e,g+0),o.fromBufferAttribute(e,g+1),l.fromBufferAttribute(e,g+2),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)yn.fromBufferAttribute(t,e),yn.normalize(),t.setXYZ(e,yn.x,yn.y,yn.z)}toNonIndexed(){function t(c,h){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(h.length*p);let v=0,x=0;for(let b=0,S=h.length;b<S;b++){c.isInterleavedBufferAttribute?v=h[b]*c.data.stride+c.offset:v=h[b]*p;for(let _=0;_<p;_++)g[x++]=f[v++]}return new ke(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new _e,n=this.index.array,i=this.attributes;for(const c in i){const h=i[c],f=t(h,n);e.setAttribute(c,f)}const o=this.morphAttributes;for(const c in o){const h=[],f=o[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=t(g,n);h.push(v)}e.morphAttributes[c]=h}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,h=l.length;c<h;c++){const f=l[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(t[f]=h[f]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const h in n){const f=n[h];t.data.attributes[h]=f.toJSON(t.data)}const i={};let o=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];p.push(v.toJSON(t.data))}p.length>0&&(i[h]=p,o=!0)}o&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(t.data.boundingSphere=c.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const i=t.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(e))}const o=t.morphAttributes;for(const f in o){const p=[],m=o[f];for(let g=0,v=m.length;g<v;g++)p.push(m[g].clone(e));this.morphAttributes[f]=p}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let f=0,p=l.length;f<p;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Cv=new ce,Fa=new Ro,tu=new An,wv=new O,eu=new O,nu=new O,iu=new O,ip=new O,su=new O,Rv=new O,au=new O;class un extends De{constructor(t=new _e,e=new ma){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const c=this.morphTargetInfluences;if(o&&c){su.set(0,0,0);for(let h=0,f=o.length;h<f;h++){const p=c[h],m=o[h];p!==0&&(ip.fromBufferAttribute(m,t),l?su.addScaledVector(ip,p):su.addScaledVector(ip.sub(e),p))}e.add(su)}return e}raycast(t,e){const n=this.geometry,i=this.material,o=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),tu.copy(n.boundingSphere),tu.applyMatrix4(o),Fa.copy(t.ray).recast(t.near),!(tu.containsPoint(Fa.origin)===!1&&(Fa.intersectSphere(tu,wv)===null||Fa.origin.distanceToSquared(wv)>(t.far-t.near)**2))&&(Cv.copy(o).invert(),Fa.copy(t.ray).applyMatrix4(Cv),!(n.boundingBox!==null&&Fa.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Fa)))}_computeIntersections(t,e,n){let i;const o=this.geometry,l=this.material,c=o.index,h=o.attributes.position,f=o.attributes.uv,p=o.attributes.uv1,m=o.attributes.normal,g=o.groups,v=o.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,U=A;T<U;T+=3){const D=c.getX(T),P=c.getX(T+1),z=c.getX(T+2);i=ru(this,_,t,n,f,p,m,D,P,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(c.count,v.start+v.count);for(let S=x,_=b;S<_;S+=3){const E=c.getX(S),A=c.getX(S+1),T=c.getX(S+2);i=ru(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}else if(h!==void 0)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),A=Math.min(h.count,Math.min(S.start+S.count,v.start+v.count));for(let T=E,U=A;T<U;T+=3){const D=T,P=T+1,z=T+2;i=ru(this,_,t,n,f,p,m,D,P,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(h.count,v.start+v.count);for(let S=x,_=b;S<_;S+=3){const E=S,A=S+1,T=S+2;i=ru(this,l,t,n,f,p,m,E,A,T),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}}}function c1(s,t,e,n,i,o,l,c){let h;if(t.side===Yn?h=n.intersectTriangle(l,o,i,!0,c):h=n.intersectTriangle(i,o,l,t.side===Ps,c),h===null)return null;au.copy(c),au.applyMatrix4(s.matrixWorld);const f=e.ray.origin.distanceTo(au);return f<e.near||f>e.far?null:{distance:f,point:au.clone(),object:s}}function ru(s,t,e,n,i,o,l,c,h,f){s.getVertexPosition(c,eu),s.getVertexPosition(h,nu),s.getVertexPosition(f,iu);const p=c1(s,t,e,n,eu,nu,iu,Rv);if(p){const m=new O;ei.getBarycoord(Rv,eu,nu,iu,m),i&&(p.uv=ei.getInterpolatedAttribute(i,c,h,f,m,new dt)),o&&(p.uv1=ei.getInterpolatedAttribute(o,c,h,f,m,new dt)),l&&(p.normal=ei.getInterpolatedAttribute(l,c,h,f,m,new O),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:h,c:f,normal:new O,materialIndex:0};ei.getNormal(eu,nu,iu,g.normal),p.face=g,p.barycoord=m}return p}class ur extends _e{constructor(t=1,e=1,n=1,i=1,o=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:o,depthSegments:l};const c=this;i=Math.floor(i),o=Math.floor(o),l=Math.floor(l);const h=[],f=[],p=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,e,t,l,o,0),x("z","y","x",1,-1,n,e,-t,l,o,1),x("x","z","y",1,1,t,n,e,i,l,2),x("x","z","y",1,-1,t,n,-e,i,l,3),x("x","y","z",1,-1,t,e,n,i,o,4),x("x","y","z",-1,-1,t,e,-n,i,o,5),this.setIndex(h),this.setAttribute("position",new Xt(f,3)),this.setAttribute("normal",new Xt(p,3)),this.setAttribute("uv",new Xt(m,2));function x(b,S,_,E,A,T,U,D,P,z,w){const C=T/P,I=U/z,$=T/2,q=U/2,K=D/2,at=P+1,F=z+1;let X=0,G=0;const nt=new O;for(let lt=0;lt<F;lt++){const mt=lt*I-q;for(let Nt=0;Nt<at;Nt++){const Jt=Nt*C-$;nt[b]=Jt*E,nt[S]=mt*A,nt[_]=K,f.push(nt.x,nt.y,nt.z),nt[b]=0,nt[S]=0,nt[_]=D>0?1:-1,p.push(nt.x,nt.y,nt.z),m.push(Nt/P),m.push(1-lt/z),X+=1}}for(let lt=0;lt<z;lt++)for(let mt=0;mt<P;mt++){const Nt=g+mt+at*lt,Jt=g+mt+at*(lt+1),zt=g+(mt+1)+at*(lt+1),st=g+(mt+1)+at*lt;h.push(Nt,Jt,st),h.push(Jt,zt,st),G+=6}c.addGroup(v,G,w),v+=G,g+=X}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ur(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function bo(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Xn(s){const t={};for(let e=0;e<s.length;e++){const n=bo(s[e]);for(const i in n)t[i]=n[i]}return t}function u1(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}function ax(s){const t=s.getRenderTarget();return t===null?s.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:Ae.workingColorSpace}const rx={clone:bo,merge:Xn};var h1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,f1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Zi extends Fn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=h1,this.fragmentShader=f1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=bo(t.uniforms),this.uniformsGroups=u1(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?e.uniforms[i]={type:"t",value:l.toJSON(t).uuid}:l&&l.isColor?e.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?e.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?e.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?e.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?e.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?e.uniforms[i]={type:"m4",value:l.toArray()}:e.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class Xh extends De{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ce,this.projectionMatrix=new ce,this.projectionMatrixInverse=new ce,this.coordinateSystem=yi,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const aa=new O,Dv=new dt,Uv=new dt;class Sn extends Xh{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=So*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(sr*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return So*2*Math.atan(Math.tan(sr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){aa.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(aa.x,aa.y).multiplyScalar(-t/aa.z),aa.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(aa.x,aa.y).multiplyScalar(-t/aa.z)}getViewSize(t,e){return this.getViewBounds(t,Dv,Uv),e.subVectors(Uv,Dv)}setViewOffset(t,e,n,i,o,l){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(sr*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,o=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const h=l.fullWidth,f=l.fullHeight;o+=l.offsetX*i/h,e-=l.offsetY*n/f,i*=l.width/h,n*=l.height/f}const c=this.filmOffset;c!==0&&(o+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+i,e,e-n,t,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const Kr=-90,jr=1;class ox extends De{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Sn(Kr,jr,t,e);i.layers=this.layers,this.add(i);const o=new Sn(Kr,jr,t,e);o.layers=this.layers,this.add(o);const l=new Sn(Kr,jr,t,e);l.layers=this.layers,this.add(l);const c=new Sn(Kr,jr,t,e);c.layers=this.layers,this.add(c);const h=new Sn(Kr,jr,t,e);h.layers=this.layers,this.add(h);const f=new Sn(Kr,jr,t,e);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,o,l,c,h]=e;for(const f of e)this.remove(f);if(t===yi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===xo)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const f of e)this.add(f),f.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[o,l,c,h,f,p]=this.children,m=t.getRenderTarget(),g=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.xr.enabled;t.xr.enabled=!1;const b=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,o),t.setRenderTarget(n,1,i),t.render(e,l),t.setRenderTarget(n,2,i),t.render(e,c),t.setRenderTarget(n,3,i),t.render(e,h),t.setRenderTarget(n,4,i),t.render(e,f),n.texture.generateMipmaps=b,t.setRenderTarget(n,5,i),t.render(e,p),t.setRenderTarget(m,g,v),t.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class $l extends an{constructor(t=[],e=Is,n,i,o,l,c,h,f,p){super(t,e,n,i,o,l,c,h,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class lx extends os{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new $l(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ur(5,5,5),o=new Zi({name:"CubemapFromEquirect",uniforms:bo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Yn,blending:Ns});o.uniforms.tEquirect.value=e;const l=new un(i,o),c=e.minFilter;return e.minFilter===is&&(e.minFilter=fn),new ox(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const o=t.getRenderTarget();for(let l=0;l<6;l++)t.setRenderTarget(this,l),t.clear(e,n,i);t.setRenderTarget(o)}}class ho extends De{constructor(){super(),this.isGroup=!0,this.type="Group"}}const d1={type:"move"};class Hu{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ho,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ho,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new O,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new O),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ho,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new O,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new O),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,o=null,l=null;const c=this._targetRay,h=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){l=!0;for(const b of t.hand.values()){const S=e.getJointPose(b,n),_=this._getHandJoint(f,b);S!==null&&(_.matrix.fromArray(S.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=S.radius),_.visible=S!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(o=e.getPose(t.gripSpace,n),o!==null&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));c!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&o!==null&&(i=o),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(d1)))}return c!==null&&(c.visible=i!==null),h!==null&&(h.visible=o!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new ho;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class qh{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new Bt(t),this.density=e}clone(){return new qh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Yh{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new Bt(t),this.near=e,this.far=n}clone(){return new Yh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Rm extends De{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Si,this.environmentIntensity=1,this.environmentRotation=new Si,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class Zh{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Vl,this.updateRanges=[],this.version=0,this.uuid=xi()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,o=this.stride;i<o;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=xi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=xi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Wn=new O;class or{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Wn.fromBufferAttribute(this,e),Wn.applyMatrix4(t),this.setXYZ(e,Wn.x,Wn.y,Wn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Wn.fromBufferAttribute(this,e),Wn.applyNormalMatrix(t),this.setXYZ(e,Wn.x,Wn.y,Wn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Wn.fromBufferAttribute(this,e),Wn.transformDirection(t),this.setXYZ(e,Wn.x,Wn.y,Wn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=qn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ve(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=ve(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=ve(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=ve(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=ve(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=qn(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=qn(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=qn(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=qn(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t=t*this.data.stride+this.offset,this.normalized&&(e=ve(e,this.array),n=ve(n,this.array),i=ve(i,this.array),o=ve(o,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=o,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return new ke(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new or(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Dm extends Fn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Bt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let Jr;const fl=new O,Qr=new O,$r=new O,to=new dt,dl=new dt,cx=new ce,ou=new O,pl=new O,lu=new O,Nv=new dt,sp=new dt,Lv=new dt;class ux extends De{constructor(t=new Dm){if(super(),this.isSprite=!0,this.type="Sprite",Jr===void 0){Jr=new _e;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Zh(e,5);Jr.setIndex([0,1,2,0,2,3]),Jr.setAttribute("position",new or(n,3,0,!1)),Jr.setAttribute("uv",new or(n,2,3,!1))}this.geometry=Jr,this.material=t,this.center=new dt(.5,.5),this.count=1}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Qr.setFromMatrixScale(this.matrixWorld),cx.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),$r.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Qr.multiplyScalar(-$r.z);const n=this.material.rotation;let i,o;n!==0&&(o=Math.cos(n),i=Math.sin(n));const l=this.center;cu(ou.set(-.5,-.5,0),$r,l,Qr,i,o),cu(pl.set(.5,-.5,0),$r,l,Qr,i,o),cu(lu.set(.5,.5,0),$r,l,Qr,i,o),Nv.set(0,0),sp.set(1,0),Lv.set(1,1);let c=t.ray.intersectTriangle(ou,pl,lu,!1,fl);if(c===null&&(cu(pl.set(-.5,.5,0),$r,l,Qr,i,o),sp.set(0,1),c=t.ray.intersectTriangle(ou,lu,pl,!1,fl),c===null))return;const h=t.ray.origin.distanceTo(fl);h<t.near||h>t.far||e.push({distance:h,point:fl.clone(),uv:ei.getInterpolation(fl,ou,pl,lu,Nv,sp,Lv,new dt),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function cu(s,t,e,n,i,o){to.subVectors(s,e).addScalar(.5).multiply(n),i!==void 0?(dl.x=o*to.x-i*to.y,dl.y=i*to.x+o*to.y):dl.copy(to),s.copy(t),s.x+=dl.x,s.y+=dl.y,s.applyMatrix4(cx)}const uu=new O,Pv=new O;class hx extends De{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const o=e[n];this.addLevel(o.object.clone(),o.distance,o.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let o;for(o=0;o<i.length&&!(e<i[o].distance);o++);return i.splice(o,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let o=e[n].distance;if(e[n].object.visible&&(o-=o*e[n].hysteresis),t<o)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){uu.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(uu);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){uu.setFromMatrixPosition(t.matrixWorld),Pv.setFromMatrixPosition(this.matrixWorld);const n=uu.distanceTo(Pv)/t.zoom;e[0].object.visible=!0;let i,o;for(i=1,o=e.length;i<o;i++){let l=e[i].distance;if(e[i].object.visible&&(l-=l*e[i].hysteresis),n>=l)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<o;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,o=n.length;i<o;i++){const l=n[i];e.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return e}}const Iv=new O,Ov=new Re,Bv=new Re,p1=new O,zv=new ce,hu=new O,ap=new An,Fv=new ce,rp=new Ro;class fx extends un{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Kp,this.bindMatrix=new ce,this.bindMatrixInverse=new ce,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new zn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,hu),this.boundingBox.expandByPoint(hu)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new An),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,hu),this.boundingSphere.expandByPoint(hu)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ap.copy(this.boundingSphere),ap.applyMatrix4(i),t.ray.intersectsSphere(ap)!==!1&&(Fv.copy(i).invert(),rp.copy(t.ray).applyMatrix4(Fv),!(this.boundingBox!==null&&rp.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,rp)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Re,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const o=1/t.manhattanLength();o!==1/0?t.multiplyScalar(o):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===Kp?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Vy?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Ov.fromBufferAttribute(i.attributes.skinIndex,t),Bv.fromBufferAttribute(i.attributes.skinWeight,t),Iv.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let o=0;o<4;o++){const l=Bv.getComponent(o);if(l!==0){const c=Ov.getComponent(o);zv.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),e.addScaledVector(p1.copy(Iv).applyMatrix4(zv),l)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Um extends De{constructor(){super(),this.isBone=!0,this.type="Bone"}}class rs extends an{constructor(t=null,e=1,n=1,i,o,l,c,h,f=Tn,p=Tn,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Hv=new ce,m1=new ce;class Kh{constructor(t=[],e=[]){this.uuid=xi(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ce)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new ce;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let o=0,l=t.length;o<l;o++){const c=t[o]?t[o].matrixWorld:m1;Hv.multiplyMatrices(c,e[o]),Hv.toArray(n,o*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Kh(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new rs(e,t,t,Bn,ni);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const o=t.bones[n];let l=e[o];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",o),l=new Um),this.bones.push(l),this.boneInverses.push(new ce().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,o=e.length;i<o;i++){const l=e[i];t.bones.push(l.uuid);const c=n[i];t.boneInverses.push(c.toArray())}return t}}class Eo extends ke{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const eo=new ce,Vv=new ce,fu=[],Gv=new zn,g1=new ce,ml=new un,gl=new An;class dx extends un{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Eo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,g1)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new zn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,eo),Gv.copy(t.boundingBox).applyMatrix4(eo),this.boundingBox.union(Gv)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new An),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,eo),gl.copy(t.boundingSphere).applyMatrix4(eo),this.boundingSphere.union(gl)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,o=n.length+1,l=t*o+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(ml.geometry=this.geometry,ml.material=this.material,ml.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),gl.copy(this.boundingSphere),gl.applyMatrix4(n),t.ray.intersectsSphere(gl)!==!1))for(let o=0;o<i;o++){this.getMatrixAt(o,eo),Vv.multiplyMatrices(n,eo),ml.matrixWorld=Vv,ml.raycast(t,fu);for(let l=0,c=fu.length;l<c;l++){const h=fu[l];h.instanceId=o,h.object=this,e.push(h)}fu.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new Eo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new rs(new Float32Array(i*this.count),i,this.count,Fh,ni));const o=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,h=i*t;o[h]=c,o.set(n,h+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const op=new O,v1=new O,_1=new me;class oa{constructor(t=new O(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=op.subVectors(n,e).cross(v1.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(op),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const o=-(t.start.dot(this.normal)+this.constant)/i;return o<0||o>1?null:e.copy(t.start).addScaledVector(n,o)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||_1.getNormalMatrix(t),i=this.coplanarPoint(op).applyMatrix4(t),o=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ha=new An,y1=new dt(.5,.5),du=new O;class Do{constructor(t=new oa,e=new oa,n=new oa,i=new oa,o=new oa,l=new oa){this.planes=[t,e,n,i,o,l]}set(t,e,n,i,o,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(i),c[4].copy(o),c[5].copy(l),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=yi,n=!1){const i=this.planes,o=t.elements,l=o[0],c=o[1],h=o[2],f=o[3],p=o[4],m=o[5],g=o[6],v=o[7],x=o[8],b=o[9],S=o[10],_=o[11],E=o[12],A=o[13],T=o[14],U=o[15];if(i[0].setComponents(f-l,v-p,_-x,U-E).normalize(),i[1].setComponents(f+l,v+p,_+x,U+E).normalize(),i[2].setComponents(f+c,v+m,_+b,U+A).normalize(),i[3].setComponents(f-c,v-m,_-b,U-A).normalize(),n)i[4].setComponents(h,g,S,T).normalize(),i[5].setComponents(f-h,v-g,_-S,U-T).normalize();else if(i[4].setComponents(f-h,v-g,_-S,U-T).normalize(),e===yi)i[5].setComponents(f+h,v+g,_+S,U+T).normalize();else if(e===xo)i[5].setComponents(h,g,S,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Ha.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Ha.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Ha)}intersectsSprite(t){Ha.center.set(0,0,0);const e=y1.distanceTo(t.center);return Ha.radius=.7071067811865476+e,Ha.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ha)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let o=0;o<6;o++)if(e[o].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(du.x=i.normal.x>0?t.max.x:t.min.x,du.y=i.normal.y>0?t.max.y:t.min.y,du.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(du)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const ts=new ce,es=new Do;class jh{constructor(){this.coordinateSystem=yi}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ts.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),es.setFromProjectionMatrix(ts,i.coordinateSystem,i.reversedDepth),es.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ts.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),es.setFromProjectionMatrix(ts,i.coordinateSystem,i.reversedDepth),es.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ts.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),es.setFromProjectionMatrix(ts,i.coordinateSystem,i.reversedDepth),es.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ts.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),es.setFromProjectionMatrix(ts,i.coordinateSystem,i.reversedDepth),es.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(ts.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),es.setFromProjectionMatrix(ts,i.coordinateSystem,i.reversedDepth),es.containsPoint(t))return!0}return!1}clone(){return new jh}}function lp(s,t){return s-t}function x1(s,t){return s.z-t.z}function S1(s,t){return t.z-s.z}class M1{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const o=this.pool,l=this.list;this.index>=o.length&&o.push({start:-1,count:-1,z:-1,index:-1});const c=o[this.index];l.push(c),this.index++,c.start=t,c.count=e,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const Qn=new ce,b1=new Bt(1,1,1),kv=new Do,E1=new jh,pu=new zn,Va=new An,vl=new O,Wv=new O,T1=new O,cp=new M1,In=new un,mu=[];function A1(s,t,e=0){const n=t.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==t.array.constructor){const i=s.count;for(let o=0;o<i;o++)for(let l=0;l<n;l++)t.setComponent(o+e,l,s.getComponent(o,l))}else t.array.set(s.array,e*n);t.needsUpdate=!0}function Ga(s,t){if(s.constructor!==t.constructor){const e=Math.min(s.length,t.length);for(let n=0;n<e;n++)t[n]=s[n]}else{const e=Math.min(s.length,t.length);t.set(new s.constructor(s.buffer,0,e))}}class px extends un{constructor(t,e,n=e*2,i){super(new _e,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new rs(e,t,t,Bn,ni);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new rs(e,t,t,Ql,Os);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new rs(e,t,t,Bn,ni);n.colorSpace=Ae.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in t.attributes){const l=t.getAttribute(o),{array:c,itemSize:h,normalized:f}=l,p=new c.constructor(n*h),m=new ke(p,h,f);e.setAttribute(o,m)}if(t.getIndex()!==null){const o=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new ke(o,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),o=e.getAttribute(n);if(i.itemSize!==o.itemSize||i.normalized!==o.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zn);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,Qn),this.getBoundingBoxAt(o,pu).applyMatrix4(Qn),t.union(pu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,Qn),this.getBoundingSphereAt(o,Va).applyMatrix4(Qn),t.union(Va)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(lp),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const o=this._matricesTexture;Qn.identity().toArray(o.image.data,i*16),o.needsUpdate=!0;const l=this._colorsTexture;return l&&(b1.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},o=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const l=t.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let h;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(lp),h=this._availableGeometryIds.shift(),o[h]=i):(h=this._geometryCount,this._geometryCount++,o.push(i)),this.setGeometryAt(h,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,h}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,o=n.getIndex(),l=e.getIndex(),c=this._geometryInfo[t];if(i&&l.count>c.reservedIndexCount||e.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const h=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=e.getAttribute("position").count;for(const p in n.attributes){const m=e.getAttribute(p),g=n.getAttribute(p);A1(m,g,h);const v=m.itemSize;for(let x=m.count,b=f;x<b;x++){const S=h+x;for(let _=0;_<v;_++)g.setComponent(S,_,0)}g.needsUpdate=!0,g.addUpdateRange(h*v,f*v)}if(i){const p=c.indexStart,m=c.reservedIndexCount;c.indexCount=e.getIndex().count;for(let g=0;g<l.count;g++)o.setX(p+g,h+l.getX(g));for(let g=l.count,v=m;g<v;g++)o.setX(p+g,h);o.needsUpdate=!0,o.addUpdateRange(p,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,e.boundingBox!==null&&(c.boundingBox=e.boundingBox.clone()),c.boundingSphere=null,e.boundingSphere!==null&&(c.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,o=n.length;i<o;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),o=this.geometry;for(let l=0,c=n.length;l<c;l++){const h=i[l],f=n[h];if(f.active!==!1){if(o.index!==null){if(f.indexStart!==e){const{indexStart:p,vertexStart:m,reservedIndexCount:g}=f,v=o.index,x=v.array,b=t-m;for(let S=p;S<p+g;S++)x[S]=x[S]+b;v.array.copyWithin(e,p,p+g),v.addUpdateRange(e,g),f.indexStart=e}e+=f.reservedIndexCount}if(f.vertexStart!==t){const{vertexStart:p,reservedVertexCount:m}=f,g=o.attributes;for(const v in g){const x=g[v],{array:b,itemSize:S}=x;b.copyWithin(t*S,p*S,(p+m)*S),x.addUpdateRange(t*S,m*S)}f.vertexStart=t}t+=f.reservedVertexCount,f.start=o.index?f.indexStart:f.vertexStart,this._nextIndexStart=o.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const o=new zn,l=n.index,c=n.attributes.position;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),o.expandByPoint(vl.fromBufferAttribute(c,p))}i.boundingBox=o}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const o=new An;this.getBoundingBoxAt(t,pu),pu.getCenter(o.center);const l=n.index,c=n.attributes.position;let h=0;for(let f=i.start,p=i.start+i.count;f<p;f++){let m=f;l&&(m=l.getX(m)),vl.fromBufferAttribute(c,m),h=Math.max(h,o.center.distanceToSquared(vl))}o.radius=Math.sqrt(h),i.boundingSphere=o}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(lp);e[e.length-1]===n.length-1;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),o=new Int32Array(t);Ga(this._multiDrawCounts,i),Ga(this._multiDrawStarts,o),this._multiDrawCounts=i,this._multiDrawStarts=o,this._maxInstanceCount=t;const l=this._indirectTexture,c=this._matricesTexture,h=this._colorsTexture;l.dispose(),this._initIndirectTexture(),Ga(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),Ga(c.image.data,this._matricesTexture.image.data),h&&(h.dispose(),this._initColorsTexture(),Ga(h.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(h=>h.indexStart+h.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const o=this.geometry;o.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new _e,this._initializeGeometry(o));const l=this.geometry;o.index&&Ga(o.index.array,l.index.array);for(const c in o.attributes)Ga(o.attributes[c].array,l.attributes[c].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,o=this.matrixWorld,l=this.geometry;In.material=this.material,In.geometry.index=l.index,In.geometry.attributes=l.attributes,In.geometry.boundingBox===null&&(In.geometry.boundingBox=new zn),In.geometry.boundingSphere===null&&(In.geometry.boundingSphere=new An);for(let c=0,h=n.length;c<h;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,p=i[f];In.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(c,In.matrixWorld).premultiply(o),this.getBoundingBoxAt(f,In.geometry.boundingBox),this.getBoundingSphereAt(f,In.geometry.boundingSphere),In.raycast(t,mu);for(let m=0,g=mu.length;m<g;m++){const v=mu[m];v.object=this,v.batchId=c,e.push(v)}mu.length=0}In.material=null,In.geometry.index=null,In.geometry.attributes={},In.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,o){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,h=this._instanceInfo,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data,b=n.isArrayCamera?E1:kv;g&&!n.isArrayCamera&&(Qn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),kv.setFromProjectionMatrix(Qn,n.coordinateSystem,n.reversedDepth));let S=0;if(this.sortObjects){Qn.copy(this.matrixWorld).invert(),vl.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Qn),Wv.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Qn);for(let A=0,T=h.length;A<T;A++)if(h[A].visible&&h[A].active){const U=h[A].geometryIndex;this.getMatrixAt(A,Qn),this.getBoundingSphereAt(U,Va).applyMatrix4(Qn);let D=!1;if(g&&(D=!b.intersectsSphere(Va,n)),!D){const P=m[U],z=T1.subVectors(Va.center,vl).dot(Wv);cp.push(P.start,P.count,z,A)}}const _=cp.list,E=this.customSort;E===null?_.sort(o.transparent?S1:x1):E.call(this,_,n);for(let A=0,T=_.length;A<T;A++){const U=_[A];f[S]=U.start*c,p[S]=U.count,x[S]=U.index,S++}cp.reset()}else for(let _=0,E=h.length;_<E;_++)if(h[_].visible&&h[_].active){const A=h[_].geometryIndex;let T=!1;if(g&&(this.getMatrixAt(_,Qn),this.getBoundingSphereAt(A,Va).applyMatrix4(Qn),T=!b.intersectsSphere(Va,n)),!T){const U=m[A];f[S]=U.start*c,p[S]=U.count,x[S]=_,S++}}v.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,o,l){this.onBeforeRender(t,null,i,o,l)}}class Zn extends Fn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Bt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Th=new O,Ah=new O,Xv=new ce,_l=new Ro,gu=new An,up=new O,qv=new O;class da extends De{constructor(t=new _e,e=new Zn){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,o=e.count;i<o;i++)Th.fromBufferAttribute(e,i-1),Ah.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Th.distanceTo(Ah);t.setAttribute("lineDistance",new Xt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),gu.copy(n.boundingSphere),gu.applyMatrix4(i),gu.radius+=o,t.ray.intersectsSphere(gu)===!1)return;Xv.copy(i).invert(),_l.copy(t.ray).applyMatrix4(Xv);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,l.start),x=Math.min(p.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const _=p.getX(b),E=p.getX(b+1),A=vu(this,t,_l,h,_,E,b);A&&e.push(A)}if(this.isLineLoop){const b=p.getX(x-1),S=p.getX(v),_=vu(this,t,_l,h,b,S,x-1);_&&e.push(_)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const _=vu(this,t,_l,h,b,b+1,b);_&&e.push(_)}if(this.isLineLoop){const b=vu(this,t,_l,h,x-1,v,x-1);b&&e.push(b)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function vu(s,t,e,n,i,o,l){const c=s.geometry.attributes.position;if(Th.fromBufferAttribute(c,i),Ah.fromBufferAttribute(c,o),e.distanceSqToSegment(Th,Ah,up,qv)>n)return;up.applyMatrix4(s.matrixWorld);const f=t.ray.origin.distanceTo(up);if(!(f<t.near||f>t.far))return{distance:f,point:qv.clone().applyMatrix4(s.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:s}}const Yv=new O,Zv=new O;class cs extends da{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,o=e.count;i<o;i+=2)Yv.fromBufferAttribute(e,i),Zv.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Yv.distanceTo(Zv);t.setAttribute("lineDistance",new Xt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class mx extends da{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Nm extends Fn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Bt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Kv=new ce,Qp=new Ro,_u=new An,yu=new O;class gx extends De{constructor(t=new _e,e=new Nm){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),_u.copy(n.boundingSphere),_u.applyMatrix4(i),_u.radius+=o,t.ray.intersectsSphere(_u)===!1)return;Kv.copy(i).invert(),Qp.copy(t.ray).applyMatrix4(Kv);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,b=v;x<b;x++){const S=f.getX(x);yu.fromBufferAttribute(m,S),jv(yu,S,h,i,t,e,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,b=v;x<b;x++)yu.fromBufferAttribute(m,x),jv(yu,x,h,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function jv(s,t,e,n,i,o,l){const c=Qp.distanceSqToPoint(s);if(c<e){const h=new O;Qp.closestPointToPoint(s,h),h.applyMatrix4(n);const f=i.ray.origin.distanceTo(h);if(f<i.near||f>i.far)return;o.push({distance:f,distanceToRay:Math.sqrt(c),point:h,index:t,face:null,faceIndex:null,barycoord:null,object:l})}}class vx extends an{constructor(t,e,n,i,o=fn,l=fn,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const p=this;function m(){p.needsUpdate=!0,p._requestVideoFrameCallbackId=t.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in t&&(this._requestVideoFrameCallbackId=t.requestVideoFrameCallback(m))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){this._requestVideoFrameCallbackId!==0&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class C1 extends vx{constructor(t,e,n,i,o,l,c,h){super({},t,e,n,i,o,l,c,h),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class w1 extends an{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Tn,this.minFilter=Tn,this.generateMipmaps=!1,this.needsUpdate=!0}}class Jh extends an{constructor(t,e,n,i,o,l,c,h,f,p,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class R1 extends Jh{constructor(t,e,n,i,o,l){super(t,e,n,o,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Li,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class D1 extends Jh{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Is),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class U1 extends an{constructor(t,e,n,i,o,l,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Lm extends an{constructor(t,e,n=Os,i,o,l,c=Tn,h=Tn,f,p=_o,m=1){if(p!==_o&&p!==yo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const g={width:t,height:e,depth:m};super(g,i,o,l,c,h,p,n,f),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new ua(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class Qh extends _e{constructor(t=1,e=1,n=4,i=8,o=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:o},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),o=Math.max(1,Math.floor(o));const l=[],c=[],h=[],f=[],p=e/2,m=Math.PI/2*t,g=e,v=2*m+g,x=n*2+o,b=i+1,S=new O,_=new O;for(let E=0;E<=x;E++){let A=0,T=0,U=0,D=0;if(E<=n){const w=E/n,C=w*Math.PI/2;T=-p-t*Math.cos(C),U=t*Math.sin(C),D=-t*Math.cos(C),A=w*m}else if(E<=n+o){const w=(E-n)/o;T=-p+w*e,U=t,D=0,A=m+w*g}else{const w=(E-n-o)/n,C=w*Math.PI/2;T=p+t*Math.sin(C),U=t*Math.cos(C),D=t*Math.sin(C),A=m+g+w*m}const P=Math.max(0,Math.min(1,A/v));let z=0;E===0?z=.5/i:E===x&&(z=-.5/i);for(let w=0;w<=i;w++){const C=w/i,I=C*Math.PI*2,$=Math.sin(I),q=Math.cos(I);_.x=-U*q,_.y=T,_.z=U*$,c.push(_.x,_.y,_.z),S.set(-U*q,D,U*$),S.normalize(),h.push(S.x,S.y,S.z),f.push(C+z,P)}if(E>0){const w=(E-1)*b;for(let C=0;C<i;C++){const I=w+C,$=w+C+1,q=E*b+C,K=E*b+C+1;l.push(I,$,q),l.push($,K,q)}}}this.setIndex(l),this.setAttribute("position",new Xt(c,3)),this.setAttribute("normal",new Xt(h,3)),this.setAttribute("uv",new Xt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Qh(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class $h extends _e{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const o=[],l=[],c=[],h=[],f=new O,p=new dt;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let m=0,g=3;m<=e;m++,g+=3){const v=n+m/e*i;f.x=t*Math.cos(v),f.y=t*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(l[g]/t+1)/2,p.y=(l[g+1]/t+1)/2,h.push(p.x,p.y)}for(let m=1;m<=e;m++)o.push(m,m+1,0);this.setIndex(o),this.setAttribute("position",new Xt(l,3)),this.setAttribute("normal",new Xt(c,3)),this.setAttribute("uv",new Xt(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new $h(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class tc extends _e{constructor(t=1,e=1,n=1,i=32,o=1,l=!1,c=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:o,openEnded:l,thetaStart:c,thetaLength:h};const f=this;i=Math.floor(i),o=Math.floor(o);const p=[],m=[],g=[],v=[];let x=0;const b=[],S=n/2;let _=0;E(),l===!1&&(t>0&&A(!0),e>0&&A(!1)),this.setIndex(p),this.setAttribute("position",new Xt(m,3)),this.setAttribute("normal",new Xt(g,3)),this.setAttribute("uv",new Xt(v,2));function E(){const T=new O,U=new O;let D=0;const P=(e-t)/n;for(let z=0;z<=o;z++){const w=[],C=z/o,I=C*(e-t)+t;for(let $=0;$<=i;$++){const q=$/i,K=q*h+c,at=Math.sin(K),F=Math.cos(K);U.x=I*at,U.y=-C*n+S,U.z=I*F,m.push(U.x,U.y,U.z),T.set(at,P,F).normalize(),g.push(T.x,T.y,T.z),v.push(q,1-C),w.push(x++)}b.push(w)}for(let z=0;z<i;z++)for(let w=0;w<o;w++){const C=b[w][z],I=b[w+1][z],$=b[w+1][z+1],q=b[w][z+1];(t>0||w!==0)&&(p.push(C,I,q),D+=3),(e>0||w!==o-1)&&(p.push(I,$,q),D+=3)}f.addGroup(_,D,0),_+=D}function A(T){const U=x,D=new dt,P=new O;let z=0;const w=T===!0?t:e,C=T===!0?1:-1;for(let $=1;$<=i;$++)m.push(0,S*C,0),g.push(0,C,0),v.push(.5,.5),x++;const I=x;for(let $=0;$<=i;$++){const K=$/i*h+c,at=Math.cos(K),F=Math.sin(K);P.x=w*F,P.y=S*C,P.z=w*at,m.push(P.x,P.y,P.z),g.push(0,C,0),D.x=at*.5+.5,D.y=F*.5*C+.5,v.push(D.x,D.y),x++}for(let $=0;$<i;$++){const q=U+$,K=I+$;T===!0?p.push(K,K+1,q):p.push(K+1,K,q),z+=3}f.addGroup(_,z,T===!0?1:2),_+=z}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new tc(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class ec extends tc{constructor(t=1,e=1,n=32,i=1,o=!1,l=0,c=Math.PI*2){super(0,t,e,n,i,o,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:l,thetaLength:c}}static fromJSON(t){return new ec(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class ga extends _e{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const o=[],l=[];c(i),f(n),p(),this.setAttribute("position",new Xt(o,3)),this.setAttribute("normal",new Xt(o.slice(),3)),this.setAttribute("uv",new Xt(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const A=new O,T=new O,U=new O;for(let D=0;D<e.length;D+=3)v(e[D+0],A),v(e[D+1],T),v(e[D+2],U),h(A,T,U,E)}function h(E,A,T,U){const D=U+1,P=[];for(let z=0;z<=D;z++){P[z]=[];const w=E.clone().lerp(T,z/D),C=A.clone().lerp(T,z/D),I=D-z;for(let $=0;$<=I;$++)$===0&&z===D?P[z][$]=w:P[z][$]=w.clone().lerp(C,$/I)}for(let z=0;z<D;z++)for(let w=0;w<2*(D-z)-1;w++){const C=Math.floor(w/2);w%2===0?(g(P[z][C+1]),g(P[z+1][C]),g(P[z][C])):(g(P[z][C+1]),g(P[z+1][C+1]),g(P[z+1][C]))}}function f(E){const A=new O;for(let T=0;T<o.length;T+=3)A.x=o[T+0],A.y=o[T+1],A.z=o[T+2],A.normalize().multiplyScalar(E),o[T+0]=A.x,o[T+1]=A.y,o[T+2]=A.z}function p(){const E=new O;for(let A=0;A<o.length;A+=3){E.x=o[A+0],E.y=o[A+1],E.z=o[A+2];const T=S(E)/2/Math.PI+.5,U=_(E)/Math.PI+.5;l.push(T,1-U)}x(),m()}function m(){for(let E=0;E<l.length;E+=6){const A=l[E+0],T=l[E+2],U=l[E+4],D=Math.max(A,T,U),P=Math.min(A,T,U);D>.9&&P<.1&&(A<.2&&(l[E+0]+=1),T<.2&&(l[E+2]+=1),U<.2&&(l[E+4]+=1))}}function g(E){o.push(E.x,E.y,E.z)}function v(E,A){const T=E*3;A.x=t[T+0],A.y=t[T+1],A.z=t[T+2]}function x(){const E=new O,A=new O,T=new O,U=new O,D=new dt,P=new dt,z=new dt;for(let w=0,C=0;w<o.length;w+=9,C+=6){E.set(o[w+0],o[w+1],o[w+2]),A.set(o[w+3],o[w+4],o[w+5]),T.set(o[w+6],o[w+7],o[w+8]),D.set(l[C+0],l[C+1]),P.set(l[C+2],l[C+3]),z.set(l[C+4],l[C+5]),U.copy(E).add(A).add(T).divideScalar(3);const I=S(U);b(D,C+0,E,I),b(P,C+2,A,I),b(z,C+4,T,I)}}function b(E,A,T,U){U<0&&E.x===1&&(l[A]=E.x-1),T.x===0&&T.z===0&&(l[A]=U/2/Math.PI+.5)}function S(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ga(t.vertices,t.indices,t.radius,t.details)}}class tf extends ga{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,o=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(o,l,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new tf(t.radius,t.detail)}}const xu=new O,Su=new O,hp=new O,Mu=new ei;class _x extends _e{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),o=Math.cos(sr*e),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<h;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:b,b:S,c:_}=Mu;if(b.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),_.fromBufferAttribute(c,f[2]),Mu.getNormal(hp),m[0]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,m[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,m[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let E=0;E<3;E++){const A=(E+1)%3,T=m[E],U=m[A],D=Mu[p[E]],P=Mu[p[A]],z=`${T}_${U}`,w=`${U}_${T}`;w in g&&g[w]?(hp.dot(g[w].normal)<=o&&(v.push(D.x,D.y,D.z),v.push(P.x,P.y,P.z)),g[w]=null):z in g||(g[z]={index0:f[E],index1:f[A],normal:hp.clone()})}}for(const x in g)if(g[x]){const{index0:b,index1:S}=g[x];xu.fromBufferAttribute(c,b),Su.fromBufferAttribute(c,S),v.push(xu.x,xu.y,xu.z),v.push(Su.x,Su.y,Su.z)}this.setAttribute("position",new Xt(v,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Ki{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),o=0;e.push(0);for(let l=1;l<=t;l++)n=this.getPoint(l/t),o+=n.distanceTo(i),e.push(o),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const o=n.length;let l;e?l=e:l=t*n[o-1];let c=0,h=o-1,f;for(;c<=h;)if(i=Math.floor(c+(h-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)h=i-1;else{h=i;break}if(i=h,n[i]===l)return i/(o-1);const p=n[i],g=n[i+1]-p,v=(l-p)/g;return(i+v)/(o-1)}getTangent(t,e){let i=t-1e-4,o=t+1e-4;i<0&&(i=0),o>1&&(o=1);const l=this.getPoint(i),c=this.getPoint(o),h=e||(l.isVector2?new dt:new O);return h.copy(c).sub(l).normalize(),h}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new O,i=[],o=[],l=[],c=new O,h=new ce;for(let v=0;v<=t;v++){const x=v/t;i[v]=this.getTangentAt(x,new O)}o[0]=new O,l[0]=new O;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),o[0].crossVectors(i[0],c),l[0].crossVectors(i[0],o[0]);for(let v=1;v<=t;v++){if(o[v]=o[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(oe(i[v-1].dot(i[v]),-1,1));o[v].applyMatrix4(h.makeRotationAxis(c,x))}l[v].crossVectors(i[v],o[v])}if(e===!0){let v=Math.acos(oe(o[0].dot(o[t]),-1,1));v/=t,i[0].dot(c.crossVectors(o[0],o[t]))>0&&(v=-v);for(let x=1;x<=t;x++)o[x].applyMatrix4(h.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],o[x])}return{tangents:i,normals:o,binormals:l}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class ef extends Ki{constructor(t=0,e=0,n=1,i=1,o=0,l=Math.PI*2,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e=new dt){const n=e,i=Math.PI*2;let o=this.aEndAngle-this.aStartAngle;const l=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=i;for(;o>i;)o-=i;o<Number.EPSILON&&(l?o=0:o=i),this.aClockwise===!0&&!l&&(o===i?o=-i:o=o-i);const c=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=h-this.aX,v=f-this.aY;h=g*p-v*m+this.aX,f=g*m+v*p+this.aY}return n.set(h,f)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class yx extends ef{constructor(t,e,n,i,o,l){super(t,e,n,n,i,o,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Pm(){let s=0,t=0,e=0,n=0;function i(o,l,c,h){s=o,t=c,e=-3*o+3*l-2*c-h,n=2*o-2*l+c+h}return{initCatmullRom:function(o,l,c,h,f){i(l,c,f*(c-o),f*(h-l))},initNonuniformCatmullRom:function(o,l,c,h,f,p,m){let g=(l-o)/f-(c-o)/(f+p)+(c-l)/p,v=(c-l)/p-(h-l)/(p+m)+(h-c)/m;g*=p,v*=p,i(l,c,g,v)},calc:function(o){const l=o*o,c=l*o;return s+t*o+e*l+n*c}}}const bu=new O,fp=new Pm,dp=new Pm,pp=new Pm;class xx extends Ki{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new O){const n=e,i=this.points,o=i.length,l=(o-(this.closed?0:1))*t;let c=Math.floor(l),h=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/o)+1)*o:h===0&&c===o-1&&(c=o-2,h=1);let f,p;this.closed||c>0?f=i[(c-1)%o]:(bu.subVectors(i[0],i[1]).add(i[0]),f=bu);const m=i[c%o],g=i[(c+1)%o];if(this.closed||c+2<o?p=i[(c+2)%o]:(bu.subVectors(i[o-1],i[o-2]).add(i[o-1]),p=bu),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),b=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(p),v);b<1e-4&&(b=1),x<1e-4&&(x=b),S<1e-4&&(S=b),fp.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,x,b,S),dp.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,x,b,S),pp.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,x,b,S)}else this.curveType==="catmullrom"&&(fp.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),dp.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),pp.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(fp.calc(h),dp.calc(h),pp.calc(h)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new O().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Jv(s,t,e,n,i){const o=(n-t)*.5,l=(i-e)*.5,c=s*s,h=s*c;return(2*e-2*n+o+l)*h+(-3*e+3*n-2*o-l)*c+o*s+e}function N1(s,t){const e=1-s;return e*e*t}function L1(s,t){return 2*(1-s)*s*t}function P1(s,t){return s*s*t}function Ul(s,t,e,n){return N1(s,t)+L1(s,e)+P1(s,n)}function I1(s,t){const e=1-s;return e*e*e*t}function O1(s,t){const e=1-s;return 3*e*e*s*t}function B1(s,t){return 3*(1-s)*s*s*t}function z1(s,t){return s*s*s*t}function Nl(s,t,e,n,i){return I1(s,t)+O1(s,e)+B1(s,n)+z1(s,i)}class Im extends Ki{constructor(t=new dt,e=new dt,n=new dt,i=new dt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new dt){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Nl(t,i.x,o.x,l.x,c.x),Nl(t,i.y,o.y,l.y,c.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Sx extends Ki{constructor(t=new O,e=new O,n=new O,i=new O){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new O){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(Nl(t,i.x,o.x,l.x,c.x),Nl(t,i.y,o.y,l.y,c.y),Nl(t,i.z,o.z,l.z,c.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Om extends Ki{constructor(t=new dt,e=new dt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new dt){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new dt){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Mx extends Ki{constructor(t=new O,e=new O){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new O){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new O){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Bm extends Ki{constructor(t=new dt,e=new dt,n=new dt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new dt){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Ul(t,i.x,o.x,l.x),Ul(t,i.y,o.y,l.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class zm extends Ki{constructor(t=new O,e=new O,n=new O){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new O){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Ul(t,i.x,o.x,l.x),Ul(t,i.y,o.y,l.y),Ul(t,i.z,o.z,l.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Fm extends Ki{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new dt){const n=e,i=this.points,o=(i.length-1)*t,l=Math.floor(o),c=o-l,h=i[l===0?l:l-1],f=i[l],p=i[l>i.length-2?i.length-1:l+1],m=i[l>i.length-3?i.length-1:l+2];return n.set(Jv(c,h.x,f.x,p.x,m.x),Jv(c,h.y,f.y,p.y,m.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new dt().fromArray(i))}return this}}var Ch=Object.freeze({__proto__:null,ArcCurve:yx,CatmullRomCurve3:xx,CubicBezierCurve:Im,CubicBezierCurve3:Sx,EllipseCurve:ef,LineCurve:Om,LineCurve3:Mx,QuadraticBezierCurve:Bm,QuadraticBezierCurve3:zm,SplineCurve:Fm});class bx extends Ki{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Ch[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let o=0;for(;o<i.length;){if(i[o]>=n){const l=i[o]-n,c=this.curves[o],h=c.getLength(),f=h===0?0:1-l/h;return c.getPointAt(f,e)}o++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,o=this.curves;i<o.length;i++){const l=o[i],c=l.isEllipseCurve?t*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,h=l.getPoints(c);for(let f=0;f<h.length;f++){const p=h[f];n&&n.equals(p)||(e.push(p),n=p)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Ch[i.type]().fromJSON(i))}return this}}class wh extends bx{constructor(t){super(),this.type="Path",this.currentPoint=new dt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Om(this.currentPoint.clone(),new dt(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const o=new Bm(this.currentPoint.clone(),new dt(t,e),new dt(n,i));return this.curves.push(o),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,o,l){const c=new Im(this.currentPoint.clone(),new dt(t,e),new dt(n,i),new dt(o,l));return this.curves.push(c),this.currentPoint.set(o,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Fm(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,i,o,l),this}absarc(t,e,n,i,o,l){return this.absellipse(t,e,n,n,i,o,l),this}ellipse(t,e,n,i,o,l,c,h){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(t+f,e+p,n,i,o,l,c,h),this}absellipse(t,e,n,i,o,l,c,h){const f=new ef(t,e,n,i,o,l,c,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class ar extends wh{constructor(t){super(t),this.uuid=xi(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new wh().fromJSON(i))}return this}}function F1(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let o=Ex(s,0,i,e,!0);const l=[];if(!o||o.next===o.prev)return l;let c,h,f;if(n&&(o=W1(s,t,o,e)),s.length>80*e){c=1/0,h=1/0;let p=-1/0,m=-1/0;for(let g=e;g<i;g+=e){const v=s[g],x=s[g+1];v<c&&(c=v),x<h&&(h=x),v>p&&(p=v),x>m&&(m=x)}f=Math.max(p-c,m-h),f=f!==0?32767/f:0}return kl(o,l,e,c,h,f,0),l}function Ex(s,t,e,n,i){let o;if(i===eT(s,t,e,n)>0)for(let l=t;l<e;l+=n)o=Qv(l/n|0,s[l],s[l+1],o);else for(let l=e-n;l>=t;l-=n)o=Qv(l/n|0,s[l],s[l+1],o);return o&&To(o,o.next)&&(Xl(o),o=o.next),o}function lr(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(To(e,e.next)||$e(e.prev,e,e.next)===0)){if(Xl(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function kl(s,t,e,n,i,o,l){if(!s)return;!l&&o&&K1(s,n,i,o);let c=s;for(;s.prev!==s.next;){const h=s.prev,f=s.next;if(o?V1(s,n,i,o):H1(s)){t.push(h.i,s.i,f.i),Xl(s),s=f.next,c=f.next;continue}if(s=f,s===c){l?l===1?(s=G1(lr(s),t),kl(s,t,e,n,i,o,2)):l===2&&k1(s,t,e,n,i,o):kl(lr(s),t,e,n,i,o,1);break}}}function H1(s){const t=s.prev,e=s,n=s.next;if($e(t,e,n)>=0)return!1;const i=t.x,o=e.x,l=n.x,c=t.y,h=e.y,f=n.y,p=Math.min(i,o,l),m=Math.min(c,h,f),g=Math.max(i,o,l),v=Math.max(c,h,f);let x=n.next;for(;x!==t;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=v&&Sl(i,c,o,h,l,f,x.x,x.y)&&$e(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function V1(s,t,e,n){const i=s.prev,o=s,l=s.next;if($e(i,o,l)>=0)return!1;const c=i.x,h=o.x,f=l.x,p=i.y,m=o.y,g=l.y,v=Math.min(c,h,f),x=Math.min(p,m,g),b=Math.max(c,h,f),S=Math.max(p,m,g),_=$p(v,x,t,e,n),E=$p(b,S,t,e,n);let A=s.prevZ,T=s.nextZ;for(;A&&A.z>=_&&T&&T.z<=E;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Sl(c,p,h,m,f,g,A.x,A.y)&&$e(A.prev,A,A.next)>=0||(A=A.prevZ,T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Sl(c,p,h,m,f,g,T.x,T.y)&&$e(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;A&&A.z>=_;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Sl(c,p,h,m,f,g,A.x,A.y)&&$e(A.prev,A,A.next)>=0)return!1;A=A.prevZ}for(;T&&T.z<=E;){if(T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Sl(c,p,h,m,f,g,T.x,T.y)&&$e(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function G1(s,t){let e=s;do{const n=e.prev,i=e.next.next;!To(n,i)&&Ax(n,e,e.next,i)&&Wl(n,i)&&Wl(i,n)&&(t.push(n.i,e.i,i.i),Xl(e),Xl(e.next),e=s=i),e=e.next}while(e!==s);return lr(e)}function k1(s,t,e,n,i,o){let l=s;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&Q1(l,c)){let h=Cx(l,c);l=lr(l,l.next),h=lr(h,h.next),kl(l,t,e,n,i,o,0),kl(h,t,e,n,i,o,0);return}c=c.next}l=l.next}while(l!==s)}function W1(s,t,e,n){const i=[];for(let o=0,l=t.length;o<l;o++){const c=t[o]*n,h=o<l-1?t[o+1]*n:s.length,f=Ex(s,c,h,n,!1);f===f.next&&(f.steiner=!0),i.push(J1(f))}i.sort(X1);for(let o=0;o<i.length;o++)e=q1(i[o],e);return e}function X1(s,t){let e=s.x-t.x;if(e===0&&(e=s.y-t.y,e===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(t.next.y-t.y)/(t.next.x-t.x);e=n-i}return e}function q1(s,t){const e=Y1(s,t);if(!e)return t;const n=Cx(e,s);return lr(n,n.next),lr(e,e.next)}function Y1(s,t){let e=t;const n=s.x,i=s.y;let o=-1/0,l;if(To(s,e))return e;do{if(To(s,e.next))return e.next;if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const m=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(m<=n&&m>o&&(o=m,l=e.x<e.next.x?e:e.next,m===n))return l}e=e.next}while(e!==t);if(!l)return null;const c=l,h=l.x,f=l.y;let p=1/0;e=l;do{if(n>=e.x&&e.x>=h&&n!==e.x&&Tx(i<f?n:o,i,h,f,i<f?o:n,i,e.x,e.y)){const m=Math.abs(i-e.y)/(n-e.x);Wl(e,s)&&(m<p||m===p&&(e.x>l.x||e.x===l.x&&Z1(l,e)))&&(l=e,p=m)}e=e.next}while(e!==c);return l}function Z1(s,t){return $e(s.prev,s,t.prev)<0&&$e(t.next,s,s.next)<0}function K1(s,t,e,n){let i=s;do i.z===0&&(i.z=$p(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,j1(i)}function j1(s){let t,e=1;do{let n=s,i;s=null;let o=null;for(t=0;n;){t++;let l=n,c=0;for(let f=0;f<e&&(c++,l=l.nextZ,!!l);f++);let h=e;for(;c>0||h>0&&l;)c!==0&&(h===0||!l||n.z<=l.z)?(i=n,n=n.nextZ,c--):(i=l,l=l.nextZ,h--),o?o.nextZ=i:s=i,i.prevZ=o,o=i;n=l}o.nextZ=null,e*=2}while(t>1);return s}function $p(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function J1(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function Tx(s,t,e,n,i,o,l,c){return(i-l)*(t-c)>=(s-l)*(o-c)&&(s-l)*(n-c)>=(e-l)*(t-c)&&(e-l)*(o-c)>=(i-l)*(n-c)}function Sl(s,t,e,n,i,o,l,c){return!(s===l&&t===c)&&Tx(s,t,e,n,i,o,l,c)}function Q1(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!$1(s,t)&&(Wl(s,t)&&Wl(t,s)&&tT(s,t)&&($e(s.prev,s,t.prev)||$e(s,t.prev,t))||To(s,t)&&$e(s.prev,s,s.next)>0&&$e(t.prev,t,t.next)>0)}function $e(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function To(s,t){return s.x===t.x&&s.y===t.y}function Ax(s,t,e,n){const i=Tu($e(s,t,e)),o=Tu($e(s,t,n)),l=Tu($e(e,n,s)),c=Tu($e(e,n,t));return!!(i!==o&&l!==c||i===0&&Eu(s,e,t)||o===0&&Eu(s,n,t)||l===0&&Eu(e,s,n)||c===0&&Eu(e,t,n))}function Eu(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function Tu(s){return s>0?1:s<0?-1:0}function $1(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&Ax(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function Wl(s,t){return $e(s.prev,s,s.next)<0?$e(s,t,s.next)>=0&&$e(s,s.prev,t)>=0:$e(s,t,s.prev)<0||$e(s,s.next,t)<0}function tT(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,o=(s.y+t.y)/2;do e.y>o!=e.next.y>o&&e.next.y!==e.y&&i<(e.next.x-e.x)*(o-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function Cx(s,t){const e=tm(s.i,s.x,s.y),n=tm(t.i,t.x,t.y),i=s.next,o=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,o.next=n,n.prev=o,n}function Qv(s,t,e,n){const i=tm(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Xl(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function tm(s,t,e){return{i:s,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function eT(s,t,e,n){let i=0;for(let o=t,l=e-n;o<e;o+=n)i+=(s[l]-s[o])*(s[o+1]+s[l+1]),l=o;return i}class nT{static triangulate(t,e,n=2){return F1(t,e,n)}}class Yi{static area(t){const e=t.length;let n=0;for(let i=e-1,o=0;o<e;i=o++)n+=t[i].x*t[o].y-t[o].x*t[i].y;return n*.5}static isClockWise(t){return Yi.area(t)<0}static triangulateShape(t,e){const n=[],i=[],o=[];$v(t),t_(n,t);let l=t.length;e.forEach($v);for(let h=0;h<e.length;h++)i.push(l),l+=e[h].length,t_(n,e[h]);const c=nT.triangulate(n,i);for(let h=0;h<c.length;h+=3)o.push(c.slice(h,h+3));return o}}function $v(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function t_(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class nf extends _e{constructor(t=new ar([new dt(.5,.5),new dt(-.5,.5),new dt(-.5,-.5),new dt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],o=[];for(let c=0,h=t.length;c<h;c++){const f=t[c];l(f)}this.setAttribute("position",new Xt(i,3)),this.setAttribute("uv",new Xt(o,2)),this.computeVertexNormals();function l(c){const h=[],f=e.curveSegments!==void 0?e.curveSegments:12,p=e.steps!==void 0?e.steps:1,m=e.depth!==void 0?e.depth:1;let g=e.bevelEnabled!==void 0?e.bevelEnabled:!0,v=e.bevelThickness!==void 0?e.bevelThickness:.2,x=e.bevelSize!==void 0?e.bevelSize:v-.1,b=e.bevelOffset!==void 0?e.bevelOffset:0,S=e.bevelSegments!==void 0?e.bevelSegments:3;const _=e.extrudePath,E=e.UVGenerator!==void 0?e.UVGenerator:iT;let A,T=!1,U,D,P,z;_&&(A=_.getSpacedPoints(p),T=!0,g=!1,U=_.computeFrenetFrames(p,!1),D=new O,P=new O,z=new O),g||(S=0,v=0,x=0,b=0);const w=c.extractPoints(f);let C=w.shape;const I=w.holes;if(!Yi.isClockWise(C)){C=C.reverse();for(let pt=0,ct=I.length;pt<ct;pt++){const vt=I[pt];Yi.isClockWise(vt)&&(I[pt]=vt.reverse())}}function q(pt){const vt=10000000000000001e-36;let ht=pt[0];for(let Rt=1;Rt<=pt.length;Rt++){const _t=Rt%pt.length,Et=pt[_t],se=Et.x-ht.x,ue=Et.y-ht.y,B=se*se+ue*ue,R=Math.max(Math.abs(Et.x),Math.abs(Et.y),Math.abs(ht.x),Math.abs(ht.y)),J=vt*R*R;if(B<=J){pt.splice(_t,1),Rt--;continue}ht=Et}}q(C),I.forEach(q);const K=I.length,at=C;for(let pt=0;pt<K;pt++){const ct=I[pt];C=C.concat(ct)}function F(pt,ct,vt){return ct||console.error("THREE.ExtrudeGeometry: vec does not exist"),pt.clone().addScaledVector(ct,vt)}const X=C.length;function G(pt,ct,vt){let ht,Rt,_t;const Et=pt.x-ct.x,se=pt.y-ct.y,ue=vt.x-pt.x,B=vt.y-pt.y,R=Et*Et+se*se,J=Et*B-se*ue;if(Math.abs(J)>Number.EPSILON){const rt=Math.sqrt(R),gt=Math.sqrt(ue*ue+B*B),ot=ct.x-se/rt,Zt=ct.y+Et/rt,Ct=vt.x-B/gt,kt=vt.y+ue/gt,Wt=((Ct-ot)*B-(kt-Zt)*ue)/(Et*B-se*ue);ht=ot+Et*Wt-pt.x,Rt=Zt+se*Wt-pt.y;const yt=ht*ht+Rt*Rt;if(yt<=2)return new dt(ht,Rt);_t=Math.sqrt(yt/2)}else{let rt=!1;Et>Number.EPSILON?ue>Number.EPSILON&&(rt=!0):Et<-Number.EPSILON?ue<-Number.EPSILON&&(rt=!0):Math.sign(se)===Math.sign(B)&&(rt=!0),rt?(ht=-se,Rt=Et,_t=Math.sqrt(R)):(ht=Et,Rt=se,_t=Math.sqrt(R/2))}return new dt(ht/_t,Rt/_t)}const nt=[];for(let pt=0,ct=at.length,vt=ct-1,ht=pt+1;pt<ct;pt++,vt++,ht++)vt===ct&&(vt=0),ht===ct&&(ht=0),nt[pt]=G(at[pt],at[vt],at[ht]);const lt=[];let mt,Nt=nt.concat();for(let pt=0,ct=K;pt<ct;pt++){const vt=I[pt];mt=[];for(let ht=0,Rt=vt.length,_t=Rt-1,Et=ht+1;ht<Rt;ht++,_t++,Et++)_t===Rt&&(_t=0),Et===Rt&&(Et=0),mt[ht]=G(vt[ht],vt[_t],vt[Et]);lt.push(mt),Nt=Nt.concat(mt)}let Jt;if(S===0)Jt=Yi.triangulateShape(at,I);else{const pt=[],ct=[];for(let vt=0;vt<S;vt++){const ht=vt/S,Rt=v*Math.cos(ht*Math.PI/2),_t=x*Math.sin(ht*Math.PI/2)+b;for(let Et=0,se=at.length;Et<se;Et++){const ue=F(at[Et],nt[Et],_t);Yt(ue.x,ue.y,-Rt),ht===0&&pt.push(ue)}for(let Et=0,se=K;Et<se;Et++){const ue=I[Et];mt=lt[Et];const B=[];for(let R=0,J=ue.length;R<J;R++){const rt=F(ue[R],mt[R],_t);Yt(rt.x,rt.y,-Rt),ht===0&&B.push(rt)}ht===0&&ct.push(B)}}Jt=Yi.triangulateShape(pt,ct)}const zt=Jt.length,st=x+b;for(let pt=0;pt<X;pt++){const ct=g?F(C[pt],Nt[pt],st):C[pt];T?(P.copy(U.normals[0]).multiplyScalar(ct.x),D.copy(U.binormals[0]).multiplyScalar(ct.y),z.copy(A[0]).add(P).add(D),Yt(z.x,z.y,z.z)):Yt(ct.x,ct.y,0)}for(let pt=1;pt<=p;pt++)for(let ct=0;ct<X;ct++){const vt=g?F(C[ct],Nt[ct],st):C[ct];T?(P.copy(U.normals[pt]).multiplyScalar(vt.x),D.copy(U.binormals[pt]).multiplyScalar(vt.y),z.copy(A[pt]).add(P).add(D),Yt(z.x,z.y,z.z)):Yt(vt.x,vt.y,m/p*pt)}for(let pt=S-1;pt>=0;pt--){const ct=pt/S,vt=v*Math.cos(ct*Math.PI/2),ht=x*Math.sin(ct*Math.PI/2)+b;for(let Rt=0,_t=at.length;Rt<_t;Rt++){const Et=F(at[Rt],nt[Rt],ht);Yt(Et.x,Et.y,m+vt)}for(let Rt=0,_t=I.length;Rt<_t;Rt++){const Et=I[Rt];mt=lt[Rt];for(let se=0,ue=Et.length;se<ue;se++){const B=F(Et[se],mt[se],ht);T?Yt(B.x,B.y+A[p-1].y,A[p-1].x+vt):Yt(B.x,B.y,m+vt)}}}Dt(),Tt();function Dt(){const pt=i.length/3;if(g){let ct=0,vt=X*ct;for(let ht=0;ht<zt;ht++){const Rt=Jt[ht];ie(Rt[2]+vt,Rt[1]+vt,Rt[0]+vt)}ct=p+S*2,vt=X*ct;for(let ht=0;ht<zt;ht++){const Rt=Jt[ht];ie(Rt[0]+vt,Rt[1]+vt,Rt[2]+vt)}}else{for(let ct=0;ct<zt;ct++){const vt=Jt[ct];ie(vt[2],vt[1],vt[0])}for(let ct=0;ct<zt;ct++){const vt=Jt[ct];ie(vt[0]+X*p,vt[1]+X*p,vt[2]+X*p)}}n.addGroup(pt,i.length/3-pt,0)}function Tt(){const pt=i.length/3;let ct=0;jt(at,ct),ct+=at.length;for(let vt=0,ht=I.length;vt<ht;vt++){const Rt=I[vt];jt(Rt,ct),ct+=Rt.length}n.addGroup(pt,i.length/3-pt,1)}function jt(pt,ct){let vt=pt.length;for(;--vt>=0;){const ht=vt;let Rt=vt-1;Rt<0&&(Rt=pt.length-1);for(let _t=0,Et=p+S*2;_t<Et;_t++){const se=X*_t,ue=X*(_t+1),B=ct+ht+se,R=ct+Rt+se,J=ct+Rt+ue,rt=ct+ht+ue;Be(B,R,J,rt)}}}function Yt(pt,ct,vt){h.push(pt),h.push(ct),h.push(vt)}function ie(pt,ct,vt){re(pt),re(ct),re(vt);const ht=i.length/3,Rt=E.generateTopUV(n,i,ht-3,ht-2,ht-1);H(Rt[0]),H(Rt[1]),H(Rt[2])}function Be(pt,ct,vt,ht){re(pt),re(ct),re(ht),re(ct),re(vt),re(ht);const Rt=i.length/3,_t=E.generateSideWallUV(n,i,Rt-6,Rt-3,Rt-2,Rt-1);H(_t[0]),H(_t[1]),H(_t[3]),H(_t[1]),H(_t[2]),H(_t[3])}function re(pt){i.push(h[pt*3+0]),i.push(h[pt*3+1]),i.push(h[pt*3+2])}function H(pt){o.push(pt.x),o.push(pt.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return sT(e,n,t)}static fromJSON(t,e){const n=[];for(let o=0,l=t.shapes.length;o<l;o++){const c=e[t.shapes[o]];n.push(c)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Ch[i.type]().fromJSON(i)),new nf(n,t.options)}}const iT={generateTopUV:function(s,t,e,n,i){const o=t[e*3],l=t[e*3+1],c=t[n*3],h=t[n*3+1],f=t[i*3],p=t[i*3+1];return[new dt(o,l),new dt(c,h),new dt(f,p)]},generateSideWallUV:function(s,t,e,n,i,o){const l=t[e*3],c=t[e*3+1],h=t[e*3+2],f=t[n*3],p=t[n*3+1],m=t[n*3+2],g=t[i*3],v=t[i*3+1],x=t[i*3+2],b=t[o*3],S=t[o*3+1],_=t[o*3+2];return Math.abs(c-p)<Math.abs(l-f)?[new dt(l,1-h),new dt(f,1-m),new dt(g,1-x),new dt(b,1-_)]:[new dt(c,1-h),new dt(p,1-m),new dt(v,1-x),new dt(S,1-_)]}};function sT(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const o=s[n];e.shapes.push(o.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class sf extends ga{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],o=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,o,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new sf(t.radius,t.detail)}}class af extends _e{constructor(t=[new dt(0,-.5),new dt(.5,0),new dt(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=oe(i,0,Math.PI*2);const o=[],l=[],c=[],h=[],f=[],p=1/e,m=new O,g=new dt,v=new O,x=new O,b=new O;let S=0,_=0;for(let E=0;E<=t.length-1;E++)switch(E){case 0:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,b.copy(v),v.normalize(),h.push(v.x,v.y,v.z);break;case t.length-1:h.push(b.x,b.y,b.z);break;default:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,x.copy(v),v.x+=b.x,v.y+=b.y,v.z+=b.z,v.normalize(),h.push(v.x,v.y,v.z),b.copy(x)}for(let E=0;E<=e;E++){const A=n+E*p*i,T=Math.sin(A),U=Math.cos(A);for(let D=0;D<=t.length-1;D++){m.x=t[D].x*T,m.y=t[D].y,m.z=t[D].x*U,l.push(m.x,m.y,m.z),g.x=E/e,g.y=D/(t.length-1),c.push(g.x,g.y);const P=h[3*D+0]*T,z=h[3*D+1],w=h[3*D+0]*U;f.push(P,z,w)}}for(let E=0;E<e;E++)for(let A=0;A<t.length-1;A++){const T=A+E*t.length,U=T,D=T+t.length,P=T+t.length+1,z=T+1;o.push(U,D,z),o.push(P,z,D)}this.setIndex(o),this.setAttribute("position",new Xt(l,3)),this.setAttribute("uv",new Xt(c,2)),this.setAttribute("normal",new Xt(f,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new af(t.points,t.segments,t.phiStart,t.phiLength)}}class nc extends ga{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new nc(t.radius,t.detail)}}class Uo extends _e{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const o=t/2,l=e/2,c=Math.floor(n),h=Math.floor(i),f=c+1,p=h+1,m=t/c,g=e/h,v=[],x=[],b=[],S=[];for(let _=0;_<p;_++){const E=_*g-l;for(let A=0;A<f;A++){const T=A*m-o;x.push(T,-E,0),b.push(0,0,1),S.push(A/c),S.push(1-_/h)}}for(let _=0;_<h;_++)for(let E=0;E<c;E++){const A=E+f*_,T=E+f*(_+1),U=E+1+f*(_+1),D=E+1+f*_;v.push(A,T,D),v.push(T,U,D)}this.setIndex(v),this.setAttribute("position",new Xt(x,3)),this.setAttribute("normal",new Xt(b,3)),this.setAttribute("uv",new Xt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Uo(t.width,t.height,t.widthSegments,t.heightSegments)}}class rf extends _e{constructor(t=.5,e=1,n=32,i=1,o=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:o,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],h=[],f=[],p=[];let m=t;const g=(e-t)/i,v=new O,x=new dt;for(let b=0;b<=i;b++){for(let S=0;S<=n;S++){const _=o+S/n*l;v.x=m*Math.cos(_),v.y=m*Math.sin(_),h.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/e+1)/2,x.y=(v.y/e+1)/2,p.push(x.x,x.y)}m+=g}for(let b=0;b<i;b++){const S=b*(n+1);for(let _=0;_<n;_++){const E=_+S,A=E,T=E+n+1,U=E+n+2,D=E+1;c.push(A,T,D),c.push(T,U,D)}}this.setIndex(c),this.setAttribute("position",new Xt(h,3)),this.setAttribute("normal",new Xt(f,3)),this.setAttribute("uv",new Xt(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new rf(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class of extends _e{constructor(t=new ar([new dt(0,.5),new dt(-.5,-.5),new dt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],o=[],l=[];let c=0,h=0;if(Array.isArray(t)===!1)f(t);else for(let p=0;p<t.length;p++)f(t[p]),this.addGroup(c,h,p),c+=h,h=0;this.setIndex(n),this.setAttribute("position",new Xt(i,3)),this.setAttribute("normal",new Xt(o,3)),this.setAttribute("uv",new Xt(l,2));function f(p){const m=i.length/3,g=p.extractPoints(e);let v=g.shape;const x=g.holes;Yi.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,_=x.length;S<_;S++){const E=x[S];Yi.isClockWise(E)===!0&&(x[S]=E.reverse())}const b=Yi.triangulateShape(v,x);for(let S=0,_=x.length;S<_;S++){const E=x[S];v=v.concat(E)}for(let S=0,_=v.length;S<_;S++){const E=v[S];i.push(E.x,E.y,0),o.push(0,0,1),l.push(E.x,E.y)}for(let S=0,_=b.length;S<_;S++){const E=b[S],A=E[0]+m,T=E[1]+m,U=E[2]+m;n.push(A,T,U),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return aT(e,t)}static fromJSON(t,e){const n=[];for(let i=0,o=t.shapes.length;i<o;i++){const l=e[t.shapes[i]];n.push(l)}return new of(n,t.curveSegments)}}function aT(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class ic extends _e{constructor(t=1,e=32,n=16,i=0,o=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:o,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let f=0;const p=[],m=new O,g=new O,v=[],x=[],b=[],S=[];for(let _=0;_<=n;_++){const E=[],A=_/n;let T=0;_===0&&l===0?T=.5/e:_===n&&h===Math.PI&&(T=-.5/e);for(let U=0;U<=e;U++){const D=U/e;m.x=-t*Math.cos(i+D*o)*Math.sin(l+A*c),m.y=t*Math.cos(l+A*c),m.z=t*Math.sin(i+D*o)*Math.sin(l+A*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),b.push(g.x,g.y,g.z),S.push(D+T,1-A),E.push(f++)}p.push(E)}for(let _=0;_<n;_++)for(let E=0;E<e;E++){const A=p[_][E+1],T=p[_][E],U=p[_+1][E],D=p[_+1][E+1];(_!==0||l>0)&&v.push(A,T,D),(_!==n-1||h<Math.PI)&&v.push(T,U,D)}this.setIndex(v),this.setAttribute("position",new Xt(x,3)),this.setAttribute("normal",new Xt(b,3)),this.setAttribute("uv",new Xt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ic(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class lf extends ga{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new lf(t.radius,t.detail)}}class cf extends _e{constructor(t=1,e=.4,n=12,i=48,o=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:o},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],h=[],f=[],p=new O,m=new O,g=new O;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const b=x/i*o,S=v/n*Math.PI*2;m.x=(t+e*Math.cos(S))*Math.cos(b),m.y=(t+e*Math.cos(S))*Math.sin(b),m.z=e*Math.sin(S),c.push(m.x,m.y,m.z),p.x=t*Math.cos(b),p.y=t*Math.sin(b),g.subVectors(m,p).normalize(),h.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const b=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,_=(i+1)*(v-1)+x,E=(i+1)*v+x;l.push(b,S,E),l.push(S,_,E)}this.setIndex(l),this.setAttribute("position",new Xt(c,3)),this.setAttribute("normal",new Xt(h,3)),this.setAttribute("uv",new Xt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new cf(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class uf extends _e{constructor(t=1,e=.4,n=64,i=8,o=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:o,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],h=[],f=[],p=[],m=new O,g=new O,v=new O,x=new O,b=new O,S=new O,_=new O;for(let A=0;A<=n;++A){const T=A/n*o*Math.PI*2;E(T,o,l,t,v),E(T+.01,o,l,t,x),S.subVectors(x,v),_.addVectors(x,v),b.crossVectors(S,_),_.crossVectors(b,S),b.normalize(),_.normalize();for(let U=0;U<=i;++U){const D=U/i*Math.PI*2,P=-e*Math.cos(D),z=e*Math.sin(D);m.x=v.x+(P*_.x+z*b.x),m.y=v.y+(P*_.y+z*b.y),m.z=v.z+(P*_.z+z*b.z),h.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),p.push(A/n),p.push(U/i)}}for(let A=1;A<=n;A++)for(let T=1;T<=i;T++){const U=(i+1)*(A-1)+(T-1),D=(i+1)*A+(T-1),P=(i+1)*A+T,z=(i+1)*(A-1)+T;c.push(U,D,z),c.push(D,P,z)}this.setIndex(c),this.setAttribute("position",new Xt(h,3)),this.setAttribute("normal",new Xt(f,3)),this.setAttribute("uv",new Xt(p,2));function E(A,T,U,D,P){const z=Math.cos(A),w=Math.sin(A),C=U/T*A,I=Math.cos(C);P.x=D*(2+I)*.5*z,P.y=D*(2+I)*w*.5,P.z=D*Math.sin(C)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new uf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class hf extends _e{constructor(t=new zm(new O(-1,-1,0),new O(-1,1,0),new O(1,1,0)),e=64,n=1,i=8,o=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:o};const l=t.computeFrenetFrames(e,o);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new O,h=new O,f=new dt;let p=new O;const m=[],g=[],v=[],x=[];b(),this.setIndex(x),this.setAttribute("position",new Xt(m,3)),this.setAttribute("normal",new Xt(g,3)),this.setAttribute("uv",new Xt(v,2));function b(){for(let A=0;A<e;A++)S(A);S(o===!1?e:0),E(),_()}function S(A){p=t.getPointAt(A/e,p);const T=l.normals[A],U=l.binormals[A];for(let D=0;D<=i;D++){const P=D/i*Math.PI*2,z=Math.sin(P),w=-Math.cos(P);h.x=w*T.x+z*U.x,h.y=w*T.y+z*U.y,h.z=w*T.z+z*U.z,h.normalize(),g.push(h.x,h.y,h.z),c.x=p.x+n*h.x,c.y=p.y+n*h.y,c.z=p.z+n*h.z,m.push(c.x,c.y,c.z)}}function _(){for(let A=1;A<=e;A++)for(let T=1;T<=i;T++){const U=(i+1)*(A-1)+(T-1),D=(i+1)*A+(T-1),P=(i+1)*A+T,z=(i+1)*(A-1)+T;x.push(U,D,z),x.push(D,P,z)}}function E(){for(let A=0;A<=e;A++)for(let T=0;T<=i;T++)f.x=A/e,f.y=T/i,v.push(f.x,f.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new hf(new Ch[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class wx extends _e{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new O,o=new O;if(t.index!==null){const l=t.attributes.position,c=t.index;let h=t.groups;h.length===0&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=h.length;f<p;++f){const m=h[f],g=m.start,v=m.count;for(let x=g,b=g+v;x<b;x+=3)for(let S=0;S<3;S++){const _=c.getX(x+S),E=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,_),o.fromBufferAttribute(l,E),e_(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}}else{const l=t.attributes.position;for(let c=0,h=l.count/3;c<h;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(l,p),o.fromBufferAttribute(l,m),e_(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}this.setAttribute("position",new Xt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function e_(s,t,e){const n=`${s.x},${s.y},${s.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${s.x},${s.y},${s.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var n_=Object.freeze({__proto__:null,BoxGeometry:ur,CapsuleGeometry:Qh,CircleGeometry:$h,ConeGeometry:ec,CylinderGeometry:tc,DodecahedronGeometry:tf,EdgesGeometry:_x,ExtrudeGeometry:nf,IcosahedronGeometry:sf,LatheGeometry:af,OctahedronGeometry:nc,PlaneGeometry:Uo,PolyhedronGeometry:ga,RingGeometry:rf,ShapeGeometry:of,SphereGeometry:ic,TetrahedronGeometry:lf,TorusGeometry:cf,TorusKnotGeometry:uf,TubeGeometry:hf,WireframeGeometry:wx});class Rx extends Fn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Bt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Dx extends Zi{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Hm extends Fn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Bt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Si,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Ux extends Hm{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new dt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return oe(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Bt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Bt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Bt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Nx extends Fn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Bt(16777215),this.specular=new Bt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Si,this.combine=Jl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Lx extends Fn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Bt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Px extends Fn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Ix extends Fn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Bt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Si,this.combine=Jl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Vm extends Fn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Xy,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Gm extends Fn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class Ox extends Fn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Bt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=pa,this.normalScale=new dt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Bx extends Zn{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function nr(s,t){return!s||s.constructor===t?s:typeof t.BYTES_PER_ELEMENT=="number"?new t(s):Array.prototype.slice.call(s)}function zx(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function Fx(s){function t(i,o){return s[i]-s[o]}const e=s.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function em(s,t,e){const n=s.length,i=new s.constructor(n);for(let o=0,l=0;l!==n;++o){const c=e[o]*t;for(let h=0;h!==t;++h)i[l++]=s[c+h]}return i}function km(s,t,e,n){let i=1,o=s[0];for(;o!==void 0&&o[n]===void 0;)o=s[i++];if(o===void 0)return;let l=o[n];if(l!==void 0)if(Array.isArray(l))do l=o[n],l!==void 0&&(t.push(o.time),e.push(...l)),o=s[i++];while(o!==void 0);else if(l.toArray!==void 0)do l=o[n],l!==void 0&&(t.push(o.time),l.toArray(e,e.length)),o=s[i++];while(o!==void 0);else do l=o[n],l!==void 0&&(t.push(o.time),e.push(l)),o=s[i++];while(o!==void 0)}function rT(s,t,e,n,i=30){const o=s.clone();o.name=t;const l=[];for(let h=0;h<o.tracks.length;++h){const f=o.tracks[h],p=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<e||x>=n)){m.push(f.times[v]);for(let b=0;b<p;++b)g.push(f.values[v*p+b])}}m.length!==0&&(f.times=nr(m,f.times.constructor),f.values=nr(g,f.values.constructor),l.push(f))}o.tracks=l;let c=1/0;for(let h=0;h<o.tracks.length;++h)c>o.tracks[h].times[0]&&(c=o.tracks[h].times[0]);for(let h=0;h<o.tracks.length;++h)o.tracks[h].shift(-1*c);return o.resetDuration(),o}function oT(s,t=0,e=s,n=30){n<=0&&(n=30);const i=e.tracks.length,o=t/n;for(let l=0;l<i;++l){const c=e.tracks[l],h=c.ValueTypeName;if(h==="bool"||h==="string")continue;const f=s.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===h});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let b;if(o<=c.times[0]){const _=p,E=m-p;b=c.values.slice(_,E)}else if(o>=c.times[x]){const _=x*m+p,E=_+m-p;b=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=p,A=m-p;_.evaluate(o),b=_.resultBuffer.slice(E,A)}h==="quaternion"&&new ii().fromArray(b).normalize().conjugate().toArray(b);const S=f.times.length;for(let _=0;_<S;++_){const E=_*v+g;if(h==="quaternion")ii.multiplyQuaternionsFlat(f.values,E,b,0,f.values,E);else{const A=v-g*2;for(let T=0;T<A;++T)f.values[E+T]-=b[T]}}}return s.blendMode=bm,s}class lT{static convertArray(t,e){return nr(t,e)}static isTypedArray(t){return zx(t)}static getKeyframeOrder(t){return Fx(t)}static sortedArray(t,e,n){return em(t,e,n)}static flattenJSON(t,e,n,i){km(t,e,n,i)}static subclip(t,e,n,i,o=30){return rT(t,e,n,i,o)}static makeClipAdditive(t,e=0,n=t,i=30){return oT(t,e,n,i)}}class sc{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],o=e[n-1];t:{e:{let l;n:{i:if(!(t<i)){for(let c=n+2;;){if(i===void 0){if(t<o)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(o=i,i=e[++n],t<i)break e}l=e.length;break n}if(!(t>=o)){const c=e[1];t<c&&(n=2,o=c);for(let h=n-2;;){if(o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===h)break;if(i=o,o=e[--n-1],t>=o)break e}l=n,n=0;break n}break t}for(;n<l;){const c=n+l>>>1;t<e[c]?l=c:n=c+1}if(i=e[n],o=e[n-1],o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,o,i)}return this.interpolate_(n,o,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,o=t*i;for(let l=0;l!==i;++l)e[l]=n[o+l];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Hx extends sc{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:tr,endingEnd:tr}}intervalChanged_(t,e,n){const i=this.parameterPositions;let o=t-2,l=t+1,c=i[o],h=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case er:o=t,c=2*e-n;break;case Fl:o=i.length-2,c=e+i[o]-i[o+1];break;default:o=t,c=n}if(h===void 0)switch(this.getSettings_().endingEnd){case er:l=t,h=2*n-e;break;case Fl:l=1,h=n+i[1]-i[0];break;default:l=t-1,h=e}const f=(n-e)*.5,p=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(h-n),this._offsetPrev=o*p,this._offsetNext=l*p}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-e)/(i-e),b=x*x,S=b*x,_=-g*S+2*g*b-g*x,E=(1+g)*S+(-1.5-2*g)*b+(-.5+g)*x+1,A=(-1-v)*S+(1.5+v)*b+.5*x,T=v*S-v*b;for(let U=0;U!==c;++U)o[U]=_*l[p+U]+E*l[f+U]+A*l[h+U]+T*l[m+U];return o}}class Wm extends sc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=(n-e)/(i-e),m=1-p;for(let g=0;g!==c;++g)o[g]=l[f+g]*m+l[h+g]*p;return o}}class Vx extends sc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Ii{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=nr(e,this.TimeBufferType),this.values=nr(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:nr(t.times,Array),values:nr(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Vx(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Wm(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Hx(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case zl:e=this.InterpolantFactoryMethodDiscrete;break;case Eh:e=this.InterpolantFactoryMethodLinear;break;case Fu:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return zl;case this.InterpolantFactoryMethodLinear:return Eh;case this.InterpolantFactoryMethodSmooth:return Fu}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let o=0,l=i-1;for(;o!==i&&n[o]<t;)++o;for(;l!==-1&&n[l]>e;)--l;if(++l,o!==0||l!==i){o>=l&&(l=Math.max(l,1),o=l-1);const c=this.getValueSize();this.times=n.slice(o,l),this.values=this.values.slice(o*c,l*c)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,o=n.length;o===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let c=0;c!==o;c++){const h=n[c];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,h),t=!1;break}if(l!==null&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,h,l),t=!1;break}l=h}if(i!==void 0&&zx(i))for(let c=0,h=i.length;c!==h;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Fu,o=t.length-1;let l=1;for(let c=1;c<o;++c){let h=!1;const f=t[c],p=t[c+1];if(f!==p&&(c!==1||f!==t[0]))if(i)h=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const b=e[m+x];if(b!==e[g+x]||b!==e[v+x]){h=!0;break}}}if(h){if(c!==l){t[l]=t[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)e[g+v]=e[m+v]}++l}}if(o>0){t[l]=t[o];for(let c=o*n,h=l*n,f=0;f!==n;++f)e[h+f]=e[c+f];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=e.slice(0,l*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}Ii.prototype.ValueTypeName="";Ii.prototype.TimeBufferType=Float32Array;Ii.prototype.ValueBufferType=Float32Array;Ii.prototype.DefaultInterpolation=Eh;class hr extends Ii{constructor(t,e,n){super(t,e,n)}}hr.prototype.ValueTypeName="bool";hr.prototype.ValueBufferType=Array;hr.prototype.DefaultInterpolation=zl;hr.prototype.InterpolantFactoryMethodLinear=void 0;hr.prototype.InterpolantFactoryMethodSmooth=void 0;class Xm extends Ii{constructor(t,e,n,i){super(t,e,n,i)}}Xm.prototype.ValueTypeName="color";class ql extends Ii{constructor(t,e,n,i){super(t,e,n,i)}}ql.prototype.ValueTypeName="number";class Gx extends sc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(i-e);let f=t*c;for(let p=f+c;f!==p;f+=4)ii.slerpFlat(o,0,l,f-c,l,f,h);return o}}class ac extends Ii{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new Gx(this.times,this.values,this.getValueSize(),t)}}ac.prototype.ValueTypeName="quaternion";ac.prototype.InterpolantFactoryMethodSmooth=void 0;class fr extends Ii{constructor(t,e,n){super(t,e,n)}}fr.prototype.ValueTypeName="string";fr.prototype.ValueBufferType=Array;fr.prototype.DefaultInterpolation=zl;fr.prototype.InterpolantFactoryMethodLinear=void 0;fr.prototype.InterpolantFactoryMethodSmooth=void 0;class Yl extends Ii{constructor(t,e,n,i){super(t,e,n,i)}}Yl.prototype.ValueTypeName="vector";class Zl{constructor(t="",e=-1,n=[],i=Gh){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=xi(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let l=0,c=n.length;l!==c;++l)e.push(uT(n[l]).scale(i));const o=new this(t.name,t.duration,e,t.blendMode);return o.uuid=t.uuid,o}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let o=0,l=n.length;o!==l;++o)e.push(Ii.toJSON(n[o]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const o=e.length,l=[];for(let c=0;c<o;c++){let h=[],f=[];h.push((c+o-1)%o,c,(c+1)%o),f.push(0,1,0);const p=Fx(h);h=em(h,1,p),f=em(f,1,p),!i&&h[0]===0&&(h.push(o),f.push(f[0])),l.push(new ql(".morphTargetInfluences["+e[c].name+"]",h,f).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},o=/^([\w-]*?)([\d]+)$/;for(let c=0,h=t.length;c<h;c++){const f=t[c],p=f.name.match(o);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],e,n));return l}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,b){if(v.length!==0){const S=[],_=[];km(v,S,_,x),S.length!==0&&b.push(new m(g,S,_))}},i=[],o=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const f=t.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let b=0;b<g[x].morphTargets.length;b++)v[g[x].morphTargets[b]]=-1;for(const b in v){const S=[],_=[];for(let E=0;E!==g[x].morphTargets.length;++E){const A=g[x];S.push(A.time),_.push(A.morphTarget===b?1:0)}i.push(new ql(".morphTargetInfluence["+b+"]",S,_))}h=v.length*l}else{const v=".bones["+e[m].name+"]";n(Yl,v+".position",g,"pos",i),n(ac,v+".quaternion",g,"rot",i),n(Yl,v+".scale",g,"scl",i)}}return i.length===0?null:new this(o,h,i,c)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const o=this.tracks[n];e=Math.max(e,o.times[o.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function cT(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ql;case"vector":case"vector2":case"vector3":case"vector4":return Yl;case"color":return Xm;case"quaternion":return ac;case"bool":case"boolean":return hr;case"string":return fr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function uT(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=cT(s.type);if(s.times===void 0){const e=[],n=[];km(s.keys,e,n,"value"),s.times=e,s.values=n}return t.parse!==void 0?t.parse(s):new t(s.name,s.times,s.values,s.interpolation)}const ss={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class qm{constructor(t,e,n){const i=this;let o=!1,l=0,c=0,h;const f=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.abortController=new AbortController,this.itemStart=function(p){c++,o===!1&&i.onStart!==void 0&&i.onStart(p,l,c),o=!0},this.itemEnd=function(p){l++,i.onProgress!==void 0&&i.onProgress(p,l,c),l===c&&(o=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(p))return x}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const kx=new qm;class si{constructor(t){this.manager=t!==void 0?t:kx,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,o){n.load(t,i,e,o)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}abort(){return this}}si.DEFAULT_MATERIAL_NAME="__DEFAULT";const Rs={};class hT extends Error{constructor(t,e){super(t),this.response=e}}class Bs extends si{constructor(t){super(t),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=ss.get(`file:${t}`);if(o!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(o),this.manager.itemEnd(t)},0),o;if(Rs[t]!==void 0){Rs[t].push({onLoad:e,onProgress:n,onError:i});return}Rs[t]=[],Rs[t].push({onLoad:e,onProgress:n,onError:i});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),c=this.mimeType,h=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=Rs[t],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let b=0;const S=new ReadableStream({start(_){E();function E(){m.read().then(({done:A,value:T})=>{if(A)_.close();else{b+=T.byteLength;const U=new ProgressEvent("progress",{lengthComputable:x,loaded:b,total:v});for(let D=0,P=p.length;D<P;D++){const z=p[D];z.onProgress&&z.onProgress(U)}_.enqueue(T),E()}},A=>{_.error(A)})}}});return new Response(S)}else throw new hT(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c==="")return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{ss.add(`file:${t}`,f);const p=Rs[t];delete Rs[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const p=Rs[t];if(p===void 0)throw this.manager.itemError(t),f;delete Rs[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onError&&v.onError(f)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class fT extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Bs(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=Zl.parse(t[n]);e.push(i)}return e}}class dT extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=[],c=new Jh,h=new Bs(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(o.withCredentials);let f=0;function p(m){h.load(t[m],function(g){const v=o.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=fn),c.image=l,c.format=v.format,c.needsUpdate=!0,e&&e(c))},n,i)}if(Array.isArray(t))for(let m=0,g=t.length;m<g;++m)p(m);else h.load(t,function(m){const g=o.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let b=0;b<g.mipmapCount;b++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+b]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=fn),c.format=g.format,c.needsUpdate=!0,e&&e(c)},n,i);return c}}const no=new WeakMap;class Kl extends si{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=ss.get(`image:${t}`);if(l!==void 0){if(l.complete===!0)o.manager.itemStart(t),setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0);else{let m=no.get(l);m===void 0&&(m=[],no.set(l,m)),m.push({onLoad:e,onError:i})}return l}const c=Gl("img");function h(){p(),e&&e(this);const m=no.get(this)||[];for(let g=0;g<m.length;g++){const v=m[g];v.onLoad&&v.onLoad(this)}no.delete(this),o.manager.itemEnd(t)}function f(m){p(),i&&i(m),ss.remove(`image:${t}`);const g=no.get(this)||[];for(let v=0;v<g.length;v++){const x=g[v];x.onError&&x.onError(m)}no.delete(this),o.manager.itemError(t),o.manager.itemEnd(t)}function p(){c.removeEventListener("load",h,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",h,!1),c.addEventListener("error",f,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),ss.add(`image:${t}`,c),o.manager.itemStart(t),c.src=t,c}}class pT extends si{constructor(t){super(t)}load(t,e,n,i){const o=new $l;o.colorSpace=On;const l=new Kl(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(f){l.load(t[f],function(p){o.images[f]=p,c++,c===6&&(o.needsUpdate=!0,e&&e(o))},void 0,i)}for(let f=0;f<t.length;++f)h(f);return o}}class mT extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new rs,c=new Bs(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(o.withCredentials),c.load(t,function(h){let f;try{f=o.parse(h)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Li,l.wrapT=f.wrapT!==void 0?f.wrapT:Li,l.magFilter=f.magFilter!==void 0?f.magFilter:fn,l.minFilter=f.minFilter!==void 0?f.minFilter:fn,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=is),f.mipmapCount===1&&(l.minFilter=fn),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,e&&e(l,f)},n,i),l}}class gT extends si{constructor(t){super(t)}load(t,e,n,i){const o=new an,l=new Kl(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,function(c){o.image=c,o.needsUpdate=!0,e!==void 0&&e(o)},n,i),o}}class va extends De{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Bt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class Wx extends va{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(De.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Bt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const mp=new ce,i_=new O,s_=new O;class Ym{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new dt(512,512),this.mapType=Pi,this.map=null,this.mapPass=null,this.matrix=new ce,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Do,this._frameExtents=new dt(1,1),this._viewportCount=1,this._viewports=[new Re(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;i_.setFromMatrixPosition(t.matrixWorld),e.position.copy(i_),s_.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(s_),e.updateMatrixWorld(),mp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(mp,e.coordinateSystem,e.reversedDepth),e.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(mp)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class vT extends Ym{constructor(){super(new Sn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=So*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,o=t.distance||e.far;(n!==e.fov||i!==e.aspect||o!==e.far)&&(e.fov=n,e.aspect=i,e.far=o,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class Xx extends va{constructor(t,e,n=0,i=Math.PI/3,o=0,l=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(De.DEFAULT_UP),this.updateMatrix(),this.target=new De,this.distance=n,this.angle=i,this.penumbra=o,this.decay=l,this.map=null,this.shadow=new vT}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const a_=new ce,yl=new O,gp=new O;class _T extends Ym{constructor(){super(new Sn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new dt(4,2),this._viewportCount=6,this._viewports=[new Re(2,1,1,1),new Re(0,1,1,1),new Re(3,1,1,1),new Re(1,1,1,1),new Re(3,0,1,1),new Re(1,0,1,1)],this._cubeDirections=[new O(1,0,0),new O(-1,0,0),new O(0,0,1),new O(0,0,-1),new O(0,1,0),new O(0,-1,0)],this._cubeUps=[new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,0,1),new O(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,o=t.distance||n.far;o!==n.far&&(n.far=o,n.updateProjectionMatrix()),yl.setFromMatrixPosition(t.matrixWorld),n.position.copy(yl),gp.copy(n.position),gp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(gp),n.updateMatrixWorld(),i.makeTranslation(-yl.x,-yl.y,-yl.z),a_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a_,n.coordinateSystem,n.reversedDepth)}}class qx extends va{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new _T}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class rc extends Xh{constructor(t=-1,e=1,n=1,i=-1,o=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=o,this.far=l,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,o,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let o=n-t,l=n+t,c=i+e,h=i-e;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=f*this.view.offsetX,l=o+f*this.view.width,c-=p*this.view.offsetY,h=c-p*this.view.height}this.projectionMatrix.makeOrthographic(o,l,c,h,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class yT extends Ym{constructor(){super(new rc(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Yx extends va{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(De.DEFAULT_UP),this.updateMatrix(),this.target=new De,this.shadow=new yT}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Zx extends va{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Kx extends va{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class jx{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new O)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*i),e.addScaledVector(l[2],.488603*o),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],1.092548*(n*i)),e.addScaledVector(l[5],1.092548*(i*o)),e.addScaledVector(l[6],.315392*(3*o*o-1)),e.addScaledVector(l[7],1.092548*(n*o)),e.addScaledVector(l[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],2*.511664*i),e.addScaledVector(l[2],2*.511664*o),e.addScaledVector(l[3],2*.511664*n),e.addScaledVector(l[4],2*.429043*n*i),e.addScaledVector(l[5],2*.429043*i*o),e.addScaledVector(l[6],.743125*o*o-.247708),e.addScaledVector(l[7],2*.429043*n*o),e.addScaledVector(l[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,o=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*o,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*o,e[6]=.315392*(3*o*o-1),e[7]=1.092548*n*o,e[8]=.546274*(n*n-i*i)}}class Jx extends va{constructor(t=new jx,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class ff extends si{constructor(t){super(t),this.textures={}}load(t,e,n,i){const o=this,l=new Bs(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(o){return e[o]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",o),e[o]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new Bt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const o in t.uniforms){const l=t.uniforms[o];switch(i.uniforms[o]={},l.type){case"t":i.uniforms[o].value=n(l.value);break;case"c":i.uniforms[o].value=new Bt().setHex(l.value);break;case"v2":i.uniforms[o].value=new dt().fromArray(l.value);break;case"v3":i.uniforms[o].value=new O().fromArray(l.value);break;case"v4":i.uniforms[o].value=new Re().fromArray(l.value);break;case"m3":i.uniforms[o].value=new me().fromArray(l.value);break;case"m4":i.uniforms[o].value=new ce().fromArray(l.value);break;default:i.uniforms[o].value=l.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const o in t.extensions)i.extensions[o]=t.extensions[o];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let o=t.normalScale;Array.isArray(o)===!1&&(o=[o,o]),i.normalScale=new dt().fromArray(o)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new dt().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return ff.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:Rx,SpriteMaterial:Dm,RawShaderMaterial:Dx,ShaderMaterial:Zi,PointsMaterial:Nm,MeshPhysicalMaterial:Ux,MeshStandardMaterial:Hm,MeshPhongMaterial:Nx,MeshToonMaterial:Lx,MeshNormalMaterial:Px,MeshLambertMaterial:Ix,MeshDepthMaterial:Vm,MeshDistanceMaterial:Gm,MeshBasicMaterial:ma,MeshMatcapMaterial:Ox,LineDashedMaterial:Bx,LineBasicMaterial:Zn,Material:Fn};return new e[t]}}class nm{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Qx extends _e{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class $x extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Bs(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(v,x){if(e[x]!==void 0)return e[x];const S=v.interleavedBuffers[x],_=o(v,S.buffer),E=uo(S.type,_),A=new Zh(E,S.stride);return A.uuid=S.uuid,e[x]=A,A}function o(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],_=new Uint32Array(S).buffer;return n[x]=_,_}const l=t.isInstancedBufferGeometry?new Qx:new _e,c=t.data.index;if(c!==void 0){const v=uo(c.type,c.array);l.setIndex(new ke(v,1))}const h=t.data.attributes;for(const v in h){const x=h[v];let b;if(x.isInterleavedBufferAttribute){const S=i(t.data,x.data);b=new or(S,x.itemSize,x.offset,x.normalized)}else{const S=uo(x.type,x.array),_=x.isInstancedBufferAttribute?Eo:ke;b=new _(S,x.itemSize,x.normalized)}x.name!==void 0&&(b.name=x.name),x.usage!==void 0&&b.setUsage(x.usage),l.setAttribute(v,b)}const f=t.data.morphAttributes;if(f)for(const v in f){const x=f[v],b=[];for(let S=0,_=x.length;S<_;S++){const E=x[S];let A;if(E.isInterleavedBufferAttribute){const T=i(t.data,E.data);A=new or(T,E.itemSize,E.offset,E.normalized)}else{const T=uo(E.type,E.array);A=new ke(T,E.itemSize,E.normalized)}E.name!==void 0&&(A.name=E.name),b.push(A)}l.morphAttributes[v]=b}t.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const b=m[v];l.addGroup(b.start,b.count,b.materialIndex)}const g=t.data.boundingSphere;return g!==void 0&&(l.boundingSphere=new An().fromJSON(g)),t.name&&(l.name=t.name),t.userData&&(l.userData=t.userData),l}}class xT extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=this.path===""?nm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||l;const c=new Bs(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(t,function(h){let f=null;try{f=JSON.parse(h)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+t+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}o.parse(f,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?nm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const o=new Bs(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials);const l=await o.loadAsync(t,e),c=JSON.parse(l),h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(c)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),o=this.parseGeometries(t.geometries,i),l=this.parseImages(t.images,function(){e!==void 0&&e(f)}),c=this.parseTextures(t.textures,l),h=this.parseMaterials(t.materials,c),f=this.parseObject(t.object,o,h,c,n),p=this.parseSkeletons(t.skeletons,f);if(this.bindSkeletons(f,p),this.bindLightTargets(f),e!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&e(f)}return f}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),o=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,o),c=this.parseMaterials(t.materials,l),h=this.parseObject(t.object,i,c,l,e),f=this.parseSkeletons(t.skeletons,h);return this.bindSkeletons(h,f),this.bindLightTargets(h),h}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const o=new ar().fromJSON(t[n]);e[o.uuid]=o}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(o){o.isBone&&(i[o.uuid]=o)}),t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=new Kh().fromJSON(t[o],i);n[c.uuid]=c}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new $x;for(let o=0,l=t.length;o<l;o++){let c;const h=t[o];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(h);break;default:h.type in n_?c=n_[h.type].fromJSON(h,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}c.uuid=h.uuid,h.name!==void 0&&(c.name=h.name),h.userData!==void 0&&(c.userData=h.userData),n[h.uuid]=c}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const o=new ff;o.setTextures(e);for(let l=0,c=t.length;l<c;l++){const h=t[l];n[h.uuid]===void 0&&(n[h.uuid]=o.parse(h)),i[h.uuid]=n[h.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],o=Zl.parse(i);e[o.uuid]=o}return e}parseImages(t,e){const n=this,i={};let o;function l(h){return n.manager.itemStart(h),o.load(h,function(){n.manager.itemEnd(h)},void 0,function(){n.manager.itemError(h),n.manager.itemEnd(h)})}function c(h){if(typeof h=="string"){const f=h,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(p)}else return h.data?{data:uo(h.type,h.data),width:h.width,height:h.height}:null}if(t!==void 0&&t.length>0){const h=new qm(e);o=new Kl(h),o.setCrossOrigin(this.crossOrigin);for(let f=0,p=t.length;f<p;f++){const m=t[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x],_=c(S);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new rs(_.data,_.width,_.height)))}i[m.uuid]=new ua(v)}else{const v=c(m.url);i[m.uuid]=new ua(v)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function o(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:e.resourcePath+c;return await i.loadAsync(h)}else return l.data?{data:uo(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){i=new Kl(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const h=t[l],f=h.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await o(v);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new rs(x.data,x.width,x.height)))}n[h.uuid]=new ua(p)}else{const p=await o(h.url);n[h.uuid]=new ua(p)}}}return n}parseTextures(t,e){function n(o,l){return typeof o=="number"?o:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",o),l[o])}const i={};if(t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=t[o];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),e[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const h=e[c.image],f=h.data;let p;Array.isArray(f)?(p=new $l,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new rs:p=new an,f&&(p.needsUpdate=!0)),p.source=h,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,ST)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],r_),p.wrapT=n(c.wrap[1],r_)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,o_)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,o_)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(t,e,n,i,o){let l;function c(g){return e[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),e[g]}function h(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let p,m;switch(t.type){case"Scene":l=new Rm,t.background!==void 0&&(Number.isInteger(t.background)?l.background=new Bt(t.background):l.background=f(t.background)),t.environment!==void 0&&(l.environment=f(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?l.fog=new Yh(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(l.fog=new qh(t.fog.color,t.fog.density)),t.fog.name!==""&&(l.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(l.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(l.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&l.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":l=new Sn(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(l.focus=t.focus),t.zoom!==void 0&&(l.zoom=t.zoom),t.filmGauge!==void 0&&(l.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(l.filmOffset=t.filmOffset),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new rc(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(l.zoom=t.zoom),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new Zx(t.color,t.intensity);break;case"DirectionalLight":l=new Yx(t.color,t.intensity),l.target=t.target||"";break;case"PointLight":l=new qx(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new Kx(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new Xx(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),l.target=t.target||"";break;case"HemisphereLight":l=new Wx(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=new Jx().fromJSON(t);break;case"SkinnedMesh":p=c(t.geometry),m=h(t.material),l=new fx(p,m),t.bindMode!==void 0&&(l.bindMode=t.bindMode),t.bindMatrix!==void 0&&l.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(l.skeleton=t.skeleton);break;case"Mesh":p=c(t.geometry),m=h(t.material),l=new un(p,m);break;case"InstancedMesh":p=c(t.geometry),m=h(t.material);const g=t.count,v=t.instanceMatrix,x=t.instanceColor;l=new dx(p,m,g),l.instanceMatrix=new Eo(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new Eo(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":p=c(t.geometry),m=h(t.material),l=new px(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,m),l.geometry=p,l.perObjectFrustumCulled=t.perObjectFrustumCulled,l.sortObjects=t.sortObjects,l._drawRanges=t.drawRanges,l._reservedRanges=t.reservedRanges,l._geometryInfo=t.geometryInfo.map(b=>{let S=null,_=null;return b.boundingBox!==void 0&&(S=new zn().fromJSON(b.boundingBox)),b.boundingSphere!==void 0&&(_=new An().fromJSON(b.boundingSphere)),{...b,boundingBox:S,boundingSphere:_}}),l._instanceInfo=t.instanceInfo,l._availableInstanceIds=t._availableInstanceIds,l._availableGeometryIds=t._availableGeometryIds,l._nextIndexStart=t.nextIndexStart,l._nextVertexStart=t.nextVertexStart,l._geometryCount=t.geometryCount,l._maxInstanceCount=t.maxInstanceCount,l._maxVertexCount=t.maxVertexCount,l._maxIndexCount=t.maxIndexCount,l._geometryInitialized=t.geometryInitialized,l._matricesTexture=f(t.matricesTexture.uuid),l._indirectTexture=f(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(l._colorsTexture=f(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(l.boundingSphere=new An().fromJSON(t.boundingSphere)),t.boundingBox!==void 0&&(l.boundingBox=new zn().fromJSON(t.boundingBox));break;case"LOD":l=new hx;break;case"Line":l=new da(c(t.geometry),h(t.material));break;case"LineLoop":l=new mx(c(t.geometry),h(t.material));break;case"LineSegments":l=new cs(c(t.geometry),h(t.material));break;case"PointCloud":case"Points":l=new gx(c(t.geometry),h(t.material));break;case"Sprite":l=new ux(h(t.material));break;case"Group":l=new ho;break;case"Bone":l=new Um;break;default:l=new De}if(l.uuid=t.uuid,t.name!==void 0&&(l.name=t.name),t.matrix!==void 0?(l.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(t.position!==void 0&&l.position.fromArray(t.position),t.rotation!==void 0&&l.rotation.fromArray(t.rotation),t.quaternion!==void 0&&l.quaternion.fromArray(t.quaternion),t.scale!==void 0&&l.scale.fromArray(t.scale)),t.up!==void 0&&l.up.fromArray(t.up),t.castShadow!==void 0&&(l.castShadow=t.castShadow),t.receiveShadow!==void 0&&(l.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(l.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(l.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(l.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(l.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(l.visible=t.visible),t.frustumCulled!==void 0&&(l.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(l.renderOrder=t.renderOrder),t.userData!==void 0&&(l.userData=t.userData),t.layers!==void 0&&(l.layers.mask=t.layers),t.children!==void 0){const g=t.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],e,n,i,o))}if(t.animations!==void 0){const g=t.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(o[x])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(l.autoUpdate=t.autoUpdate);const g=t.levels;for(let v=0;v<g.length;v++){const x=g[v],b=l.getObjectByProperty("uuid",x.object);b!==void 0&&l.addLevel(b,x.distance,x.hysteresis)}}return l}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new De}})}}const ST={UVMapping:Ih,CubeReflectionMapping:Is,CubeRefractionMapping:ha,EquirectangularReflectionMapping:Pl,EquirectangularRefractionMapping:Il,CubeUVReflectionMapping:Co},r_={RepeatWrapping:Ol,ClampToEdgeWrapping:Li,MirroredRepeatWrapping:Bl},o_={NearestFilter:Tn,NearestMipmapNearestFilter:mm,NearestMipmapLinearFilter:co,LinearFilter:fn,LinearMipmapNearestFilter:El,LinearMipmapLinearFilter:is},vp=new WeakMap;class MT extends si{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=ss.get(`image-bitmap:${t}`);if(l!==void 0){if(o.manager.itemStart(t),l.then){l.then(f=>{if(vp.has(l)===!0)i&&i(vp.get(l)),o.manager.itemError(t),o.manager.itemEnd(t);else return e&&e(f),o.manager.itemEnd(t),f});return}return setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,c.signal=typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const h=fetch(t,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(o.options,{colorSpaceConversion:"none"}))}).then(function(f){return ss.add(`image-bitmap:${t}`,f),e&&e(f),o.manager.itemEnd(t),f}).catch(function(f){i&&i(f),vp.set(h,f),ss.remove(`image-bitmap:${t}`),o.manager.itemError(t),o.manager.itemEnd(t)});ss.add(`image-bitmap:${t}`,h),o.manager.itemStart(t)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let Au;class Zm{static getContext(){return Au===void 0&&(Au=new(window.AudioContext||window.webkitAudioContext)),Au}static setContext(t){Au=t}}class bT extends si{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Bs(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(h){try{const f=h.slice(0);Zm.getContext().decodeAudioData(f,function(m){e(m)}).catch(c)}catch(f){c(f)}},n,i);function c(h){i?i(h):console.error(h),o.manager.itemError(t)}}}const l_=new ce,c_=new ce,ka=new ce;class ET{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Sn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Sn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,ka.copy(t.projectionMatrix);const i=e.eyeSep/2,o=i*e.near/e.focus,l=e.near*Math.tan(sr*e.fov*.5)/e.zoom;let c,h;c_.elements[12]=-i,l_.elements[12]=i,c=-l*e.aspect+o,h=l*e.aspect+o,ka.elements[0]=2*e.near/(h-c),ka.elements[8]=(h+c)/(h-c),this.cameraL.projectionMatrix.copy(ka),c=-l*e.aspect-o,h=l*e.aspect-o,ka.elements[0]=2*e.near/(h-c),ka.elements[8]=(h+c)/(h-c),this.cameraR.projectionMatrix.copy(ka)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(c_),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(l_)}}class tS extends Sn{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class Km{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const Wa=new O,_p=new ii,TT=new O,Xa=new O,qa=new O;class AT extends De{constructor(){super(),this.type="AudioListener",this.context=Zm.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Km}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Wa,_p,TT),Xa.set(0,0,-1).applyQuaternion(_p),qa.set(0,1,0).applyQuaternion(_p),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Wa.x,n),e.positionY.linearRampToValueAtTime(Wa.y,n),e.positionZ.linearRampToValueAtTime(Wa.z,n),e.forwardX.linearRampToValueAtTime(Xa.x,n),e.forwardY.linearRampToValueAtTime(Xa.y,n),e.forwardZ.linearRampToValueAtTime(Xa.z,n),e.upX.linearRampToValueAtTime(qa.x,n),e.upY.linearRampToValueAtTime(qa.y,n),e.upZ.linearRampToValueAtTime(qa.z,n)}else e.setPosition(Wa.x,Wa.y,Wa.z),e.setOrientation(Xa.x,Xa.y,Xa.z,qa.x,qa.y,qa.z)}}class eS extends De{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const Ya=new O,u_=new ii,CT=new O,Za=new O;class wT extends eS{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ya,u_,CT),Za.set(0,0,1).applyQuaternion(u_);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Ya.x,n),e.positionY.linearRampToValueAtTime(Ya.y,n),e.positionZ.linearRampToValueAtTime(Ya.z,n),e.orientationX.linearRampToValueAtTime(Za.x,n),e.orientationY.linearRampToValueAtTime(Za.y,n),e.orientationZ.linearRampToValueAtTime(Za.z,n)}else e.setPosition(Ya.x,Ya.y,Ya.z),e.setOrientation(Za.x,Za.y,Za.z)}}class RT{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class nS{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,o,l;switch(e){case"quaternion":i=this._slerp,o=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,o=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,o=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=o,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,o=t*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[o+c]=n[c];l=e}else{l+=e;const c=e/l;this._mixBufferRegion(n,o,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,o=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const h=e*this._origIndex;this._mixBufferRegion(n,i,h,1-o,e)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let h=e,f=e+e;h!==f;++h)if(n[h]!==n[h+e]){c.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let o=n,l=i;o!==l;++o)e[o]=e[i+o%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,o){if(i>=.5)for(let l=0;l!==o;++l)t[e+l]=t[n+l]}_slerp(t,e,n,i){ii.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,o){const l=this._workIndex*o;ii.multiplyQuaternionsFlat(t,l,t,e,t,n),ii.slerpFlat(t,e,t,e,t,l,i)}_lerp(t,e,n,i,o){const l=1-i;for(let c=0;c!==o;++c){const h=e+c;t[h]=t[h]*l+t[n+c]*i}}_lerpAdditive(t,e,n,i,o){for(let l=0;l!==o;++l){const c=e+l;t[c]=t[c]+t[n+l]*i}}}const jm="\\[\\]\\.:\\/",DT=new RegExp("["+jm+"]","g"),Jm="[^"+jm+"]",UT="[^"+jm.replace("\\.","")+"]",NT=/((?:WC+[\/:])*)/.source.replace("WC",Jm),LT=/(WCOD+)?/.source.replace("WCOD",UT),PT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Jm),IT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Jm),OT=new RegExp("^"+NT+LT+PT+IT+"$"),BT=["material","materials","bones","map"];class zT{constructor(t,e,n){const i=n||we.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,o=n.length;i!==o;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class we{constructor(t,e,n){this.path=e,this.parsedPath=n||we.parseTrackName(e),this.node=we.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new we.Composite(t,e,n):new we(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(DT,"")}static parseTrackName(t){const e=OT.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const o=n.nodeName.substring(i+1);BT.indexOf(o)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=o)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(o){for(let l=0;l<o.length;l++){const c=o[l];if(c.name===e||c.uuid===e)return c;const h=n(c.children);if(h)return h}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let o=e.propertyIndex;if(t||(t=we.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let p=0;p<t.length;p++)if(t[p].name===f){f=p;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}const l=t[i];if(l===void 0){const f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?c=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(o!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[o]!==void 0&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=o}else l.fromArray!==void 0&&l.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}we.Composite=zT;we.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};we.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};we.prototype.GetterByBindingType=[we.prototype._getValue_direct,we.prototype._getValue_array,we.prototype._getValue_arrayElement,we.prototype._getValue_toArray];we.prototype.SetterByBindingTypeAndVersioning=[[we.prototype._setValue_direct,we.prototype._setValue_direct_setNeedsUpdate,we.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[we.prototype._setValue_array,we.prototype._setValue_array_setNeedsUpdate,we.prototype._setValue_array_setMatrixWorldNeedsUpdate],[we.prototype._setValue_arrayElement,we.prototype._setValue_arrayElement_setNeedsUpdate,we.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[we.prototype._setValue_fromArray,we.prototype._setValue_fromArray_setNeedsUpdate,we.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class FT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=xi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,o=this._bindings,l=o.length;let c,h=t.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],v=g.uuid;let x=e[v];if(x===void 0){x=h++,e[v]=x,t.push(g);for(let b=0,S=l;b!==S;++b)o[b].push(new we(g,n[b],i[b]))}else if(x<f){c=t[x];const b=--f,S=t[b];e[S.uuid]=x,t[x]=S,e[v]=b,t[b]=g;for(let _=0,E=l;_!==E;++_){const A=o[_],T=A[b];let U=A[x];A[x]=T,U===void 0&&(U=new we(g,n[_],i[_])),A[b]=U}}else t[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const h=arguments[l],f=h.uuid,p=e[f];if(p!==void 0&&p>=o){const m=o++,g=t[m];e[g.uuid]=p,t[p]=g,e[f]=m,t[m]=h;for(let v=0,x=i;v!==x;++v){const b=n[v],S=b[m],_=b[p];b[p]=S,b[m]=_}}}this.nCachedObjects_=o}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_,l=t.length;for(let c=0,h=arguments.length;c!==h;++c){const f=arguments[c],p=f.uuid,m=e[p];if(m!==void 0)if(delete e[p],m<o){const g=--o,v=t[g],x=--l,b=t[x];e[v.uuid]=m,t[m]=v,e[b.uuid]=g,t[g]=b,t.pop();for(let S=0,_=i;S!==_;++S){const E=n[S],A=E[g],T=E[x];E[m]=A,E[g]=T,E.pop()}}else{const g=--l,v=t[g];g>0&&(e[v.uuid]=m),t[m]=v,t.pop();for(let x=0,b=i;x!==b;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=o}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const o=this._bindings;if(i!==void 0)return o[i];const l=this._paths,c=this._parsedPaths,h=this._objects,f=h.length,p=this.nCachedObjects_,m=new Array(f);i=o.length,n[t]=i,l.push(t),c.push(e),o.push(m);for(let g=p,v=h.length;g!==v;++g){const x=h[g];m[g]=new we(x,t,e)}return m}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,o=this._parsedPaths,l=this._bindings,c=l.length-1,h=l[c],f=t[c];e[f]=n,l[n]=h,l.pop(),o[n]=o[c],o.pop(),i[n]=i[c],i.pop()}}}class iS{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const o=e.tracks,l=o.length,c=new Array(l),h={endingStart:tr,endingEnd:tr};for(let f=0;f!==l;++f){const p=o[f].createInterpolant(null);c[f]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ky,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const i=this._clip.duration,o=t._clip.duration,l=o/i,c=i/o;t.warp(1,l,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,o=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,f=c.sampleValues;return h[0]=o,h[1]=o+n,f[0]=t/l,f[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const o=this._startTime;if(o!==null){const h=(t-o)*n;h<0||n===0?e=0:(this._startTime=null,e=n*h)}e*=this._updateTimeScale(t);const l=this._updateTime(e),c=this._updateWeight(t);if(c>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case bm:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulateAdditive(c);break;case Gh:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulate(i,c)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,o=this._loopCount;const l=n===Wy;if(t===0)return o===-1?i:l&&(o&1)===1?e-i:i;if(n===Gy){o===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(o===-1&&(t>=0?(o=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=e||i<0){const c=Math.floor(i/e);i-=e*c,o+=Math.abs(c);const h=this.repetitions-o;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(h===1){const f=t<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=o,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(o&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=er,i.endingEnd=er):(t?i.endingStart=this.zeroSlopeAtStart?er:tr:i.endingStart=Fl,e?i.endingEnd=this.zeroSlopeAtEnd?er:tr:i.endingEnd=Fl)}_scheduleFading(t,e,n){const i=this._mixer,o=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=o,h[0]=e,c[1]=o+t,h[1]=n,this}}const HT=new Float32Array(1);class VT extends ls{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,o=i.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let p=f[h];p===void 0&&(p={},f[h]=p);for(let m=0;m!==o;++m){const g=i[m],v=g.name;let x=p[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,h,v));continue}const b=e&&e._propertyBindings[m].binding.parsedPath;x=new nS(we.create(n,v,b),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,h,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,o=this._actionsByClip[i];this._bindAction(t,o&&o.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];o.useCount++===0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.useCount===0&&(o.restoreOriginalState(),this._takeBackBinding(o))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,o=this._actionsByClip;let l=o[e];if(l===void 0)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[e]=l;else{const c=l.knownActions;t._byClipCacheIndex=c.length,c.push(t)}t._cacheIndex=i.length,i.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const o=t._clip.uuid,l=this._actionsByClip,c=l[o],h=c.knownActions,f=h[h.length-1],p=t._byClipCacheIndex;f._byClipCacheIndex=p,h[p]=f,h.pop(),t._byClipCacheIndex=null;const m=c.actionByRoot,g=(t._localRoot||this._root).uuid;delete m[g],h.length===0&&delete l[o],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.referenceCount===0&&this._removeInactiveBinding(o)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,o=this._bindings;let l=i[e];l===void 0&&(l={},i[e]=l),l[n]=t,t._cacheIndex=o.length,o.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,o=n.path,l=this._bindingsByRootAndName,c=l[i],h=e[e.length-1],f=t._cacheIndex;h._cacheIndex=f,e[f]=h,e.pop(),delete c[o],Object.keys(c).length===0&&delete l[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new Wm(new Float32Array(2),new Float32Array(2),1,HT),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,o=e[i];t.__cacheIndex=i,e[i]=t,o.__cacheIndex=n,e[n]=o}clipAction(t,e,n){const i=e||this._root,o=i.uuid;let l=typeof t=="string"?Zl.findByName(i,t):t;const c=l!==null?l.uuid:t,h=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=Gh),h!==void 0){const m=h.actionByRoot[o];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const p=new iS(this,l,e,n);return this._bindAction(p,f),this._addInactiveAction(p,c,o),p}existingAction(t,e){const n=e||this._root,i=n.uuid,o=typeof t=="string"?Zl.findByName(n,t):t,l=o?o.uuid:t,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,o=Math.sign(t),l=this._accuIndex^=1;for(let f=0;f!==n;++f)e[f]._update(i,t,o,l);const c=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)c[f].apply(l);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,o=i[n];if(o!==void 0){const l=o.knownActions;for(let c=0,h=l.length;c!==h;++c){const f=l[c];this._deactivateAction(f);const p=f._cacheIndex,m=e[e.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,e[p]=m,e.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,h=c[e];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,o=i[e];if(o!==void 0)for(const l in o){const c=o[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class GT extends Am{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new Wh(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Qm{constructor(t){this.value=t}clone(){return new Qm(this.value.clone===void 0?this.value:this.value.clone())}}let kT=0;class WT extends ls{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:kT++}),this.name="",this.usage=Vl,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const o=Array.isArray(e[n])?e[n]:[e[n]];for(let l=0;l<o.length;l++)this.uniforms.push(o[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class XT extends Zh{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class qT{constructor(t,e,n,i,o,l=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=o,this.normalized=l,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const h_=new ce;class sS{constructor(t,e,n=0,i=1/0){this.ray=new Ro(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Mo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return h_.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(h_),this}intersectObject(t,e=!0,n=[]){return im(t,this,n,e),n.sort(f_),n}intersectObjects(t,e=!0,n=[]){for(let i=0,o=t.length;i<o;i++)im(t[i],this,n,e);return n.sort(f_),n}}function f_(s,t){return s.distance-t.distance}function im(s,t,e,n){let i=!0;if(s.layers.test(t.layers)&&s.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const o=s.children;for(let l=0,c=o.length;l<c;l++)im(o[l],t,e,!0)}}class YT{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(t){this._document=t,t.hidden!==void 0&&(this._pageVisibilityHandler=ZT.bind(this),t.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){this._pageVisibilityHandler!==null&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(t){return this._timescale=t,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(t){return this._pageVisibilityHandler!==null&&this._document.hidden===!0?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(t!==void 0?t:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function ZT(){this._document.hidden===!1&&this.reset()}class KT{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=oe(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(oe(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class jT{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class $m{constructor(t,e,n,i){$m.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const o=this.elements;return o[0]=t,o[2]=e,o[1]=n,o[3]=i,this}}const d_=new dt;class JT{constructor(t=new dt(1/0,1/0),e=new dt(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=d_.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,d_).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const p_=new O,Cu=new O,io=new O,so=new O,yp=new O,QT=new O,$T=new O;class tA{constructor(t=new O,e=new O){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){p_.subVectors(t,this.start),Cu.subVectors(this.end,this.start);const n=Cu.dot(Cu);let o=Cu.dot(p_)/n;return e&&(o=oe(o,0,1)),o}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(t,e=QT,n=$T){const i=10000000000000001e-32;let o,l;const c=this.start,h=t.start,f=this.end,p=t.end;io.subVectors(f,c),so.subVectors(p,h),yp.subVectors(c,h);const m=io.dot(io),g=so.dot(so),v=so.dot(yp);if(m<=i&&g<=i)return e.copy(c),n.copy(h),e.sub(n),e.dot(e);if(m<=i)o=0,l=v/g,l=oe(l,0,1);else{const x=io.dot(yp);if(g<=i)l=0,o=oe(-x/m,0,1);else{const b=io.dot(so),S=m*g-b*b;S!==0?o=oe((b*v-x*g)/S,0,1):o=0,l=(b*o+v)/g,l<0?(l=0,o=oe(-x/m,0,1)):l>1&&(l=1,o=oe((b-x)/m,0,1))}}return e.copy(c).add(io.multiplyScalar(o)),n.copy(h).add(so.multiplyScalar(l)),e.sub(n),e.dot(e)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const m_=new O;class eA extends De{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new _e,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,h=32;l<h;l++,c++){const f=l/h*Math.PI*2,p=c/h*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new Xt(i,3));const o=new Zn({fog:!1,toneMapped:!1});this.cone=new cs(n,o),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),m_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(m_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ra=new O,wu=new ce,xp=new ce;class nA extends cs{constructor(t){const e=aS(t),n=new _e,i=[],o=[];for(let f=0;f<e.length;f++){const p=e[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),o.push(0,0,0),o.push(0,0,0))}n.setAttribute("position",new Xt(i,3)),n.setAttribute("color",new Xt(o,3));const l=new Zn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;const c=new Bt(255),h=new Bt(65280);this.setColors(c,h)}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");xp.copy(this.root.matrixWorld).invert();for(let o=0,l=0;o<e.length;o++){const c=e[o];c.parent&&c.parent.isBone&&(wu.multiplyMatrices(xp,c.matrixWorld),ra.setFromMatrixPosition(wu),i.setXYZ(l,ra.x,ra.y,ra.z),wu.multiplyMatrices(xp,c.parent.matrixWorld),ra.setFromMatrixPosition(wu),i.setXYZ(l+1,ra.x,ra.y,ra.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}setColors(t,e){const i=this.geometry.getAttribute("color");for(let o=0;o<i.count;o+=2)i.setXYZ(o,t.r,t.g,t.b),i.setXYZ(o+1,e.r,e.g,e.b);return i.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function aS(s){const t=[];s.isBone===!0&&t.push(s);for(let e=0;e<s.children.length;e++)t.push(...aS(s.children[e]));return t}class iA extends un{constructor(t,e,n){const i=new ic(e,4,2),o=new ma({wireframe:!0,fog:!1,toneMapped:!1});super(i,o),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const sA=new O,g_=new Bt,v_=new Bt;class aA extends De{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new nc(e);i.rotateY(Math.PI*.5),this.material=new ma({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const o=i.getAttribute("position"),l=new Float32Array(o.count*3);i.setAttribute("color",new ke(l,3)),this.add(new un(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");g_.copy(this.light.color),v_.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const o=n<i/2?g_:v_;e.setXYZ(n,o.r,o.g,o.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(sA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class rA extends cs{constructor(t=10,e=10,n=4473924,i=8947848){n=new Bt(n),i=new Bt(i);const o=e/2,l=t/e,c=t/2,h=[],f=[];for(let g=0,v=0,x=-c;g<=e;g++,x+=l){h.push(-c,0,x,c,0,x),h.push(x,0,-c,x,0,c);const b=g===o?n:i;b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3}const p=new _e;p.setAttribute("position",new Xt(h,3)),p.setAttribute("color",new Xt(f,3));const m=new Zn({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class oA extends cs{constructor(t=10,e=16,n=8,i=64,o=4473924,l=8947848){o=new Bt(o),l=new Bt(l);const c=[],h=[];if(e>1)for(let m=0;m<e;m++){const g=m/e*(Math.PI*2),v=Math.sin(g)*t,x=Math.cos(g)*t;c.push(0,0,0),c.push(v,0,x);const b=m&1?o:l;h.push(b.r,b.g,b.b),h.push(b.r,b.g,b.b)}for(let m=0;m<n;m++){const g=m&1?o:l,v=t-t/n*m;for(let x=0;x<i;x++){let b=x/i*(Math.PI*2),S=Math.sin(b)*v,_=Math.cos(b)*v;c.push(S,0,_),h.push(g.r,g.g,g.b),b=(x+1)/i*(Math.PI*2),S=Math.sin(b)*v,_=Math.cos(b)*v,c.push(S,0,_),h.push(g.r,g.g,g.b)}}const f=new _e;f.setAttribute("position",new Xt(c,3)),f.setAttribute("color",new Xt(h,3));const p=new Zn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const __=new O,Ru=new O,y_=new O;class lA extends De{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new _e;i.setAttribute("position",new Xt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const o=new Zn({fog:!1,toneMapped:!1});this.lightPlane=new da(i,o),this.add(this.lightPlane),i=new _e,i.setAttribute("position",new Xt([0,0,0,0,0,1],3)),this.targetLine=new da(i,o),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),__.setFromMatrixPosition(this.light.matrixWorld),Ru.setFromMatrixPosition(this.light.target.matrixWorld),y_.subVectors(Ru,__),this.lightPlane.lookAt(Ru),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ru),this.targetLine.scale.z=y_.length()}}const Du=new O,sn=new Xh;class cA extends cs{constructor(t){const e=new _e,n=new Zn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],o=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,b){h(x),h(b)}function h(x){i.push(0,0,0),o.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}e.setAttribute("position",new Xt(i,3)),e.setAttribute("color",new Xt(o,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new Bt(16755200),p=new Bt(16711680),m=new Bt(43775),g=new Bt(16777215),v=new Bt(3355443);this.setColors(f,p,m,g,v)}setColors(t,e,n,i,o){const c=this.geometry.getAttribute("color");return c.setXYZ(0,t.r,t.g,t.b),c.setXYZ(1,t.r,t.g,t.b),c.setXYZ(2,t.r,t.g,t.b),c.setXYZ(3,t.r,t.g,t.b),c.setXYZ(4,t.r,t.g,t.b),c.setXYZ(5,t.r,t.g,t.b),c.setXYZ(6,t.r,t.g,t.b),c.setXYZ(7,t.r,t.g,t.b),c.setXYZ(8,t.r,t.g,t.b),c.setXYZ(9,t.r,t.g,t.b),c.setXYZ(10,t.r,t.g,t.b),c.setXYZ(11,t.r,t.g,t.b),c.setXYZ(12,t.r,t.g,t.b),c.setXYZ(13,t.r,t.g,t.b),c.setXYZ(14,t.r,t.g,t.b),c.setXYZ(15,t.r,t.g,t.b),c.setXYZ(16,t.r,t.g,t.b),c.setXYZ(17,t.r,t.g,t.b),c.setXYZ(18,t.r,t.g,t.b),c.setXYZ(19,t.r,t.g,t.b),c.setXYZ(20,t.r,t.g,t.b),c.setXYZ(21,t.r,t.g,t.b),c.setXYZ(22,t.r,t.g,t.b),c.setXYZ(23,t.r,t.g,t.b),c.setXYZ(24,e.r,e.g,e.b),c.setXYZ(25,e.r,e.g,e.b),c.setXYZ(26,e.r,e.g,e.b),c.setXYZ(27,e.r,e.g,e.b),c.setXYZ(28,e.r,e.g,e.b),c.setXYZ(29,e.r,e.g,e.b),c.setXYZ(30,e.r,e.g,e.b),c.setXYZ(31,e.r,e.g,e.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,o.r,o.g,o.b),c.setXYZ(41,o.r,o.g,o.b),c.setXYZ(42,o.r,o.g,o.b),c.setXYZ(43,o.r,o.g,o.b),c.setXYZ(44,o.r,o.g,o.b),c.setXYZ(45,o.r,o.g,o.b),c.setXYZ(46,o.r,o.g,o.b),c.setXYZ(47,o.r,o.g,o.b),c.setXYZ(48,o.r,o.g,o.b),c.setXYZ(49,o.r,o.g,o.b),c.needsUpdate=!0,this}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;let o,l;if(sn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),this.camera.reversedDepth===!0)o=1,l=0;else if(this.camera.coordinateSystem===yi)o=-1,l=1;else if(this.camera.coordinateSystem===xo)o=0,l=1;else throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);rn("c",e,t,sn,0,0,o),rn("t",e,t,sn,0,0,l),rn("n1",e,t,sn,-n,-i,o),rn("n2",e,t,sn,n,-i,o),rn("n3",e,t,sn,-n,i,o),rn("n4",e,t,sn,n,i,o),rn("f1",e,t,sn,-n,-i,l),rn("f2",e,t,sn,n,-i,l),rn("f3",e,t,sn,-n,i,l),rn("f4",e,t,sn,n,i,l),rn("u1",e,t,sn,n*.7,i*1.1,o),rn("u2",e,t,sn,-n*.7,i*1.1,o),rn("u3",e,t,sn,0,i*2,o),rn("cf1",e,t,sn,-n,0,l),rn("cf2",e,t,sn,n,0,l),rn("cf3",e,t,sn,0,-i,l),rn("cf4",e,t,sn,0,i,l),rn("cn1",e,t,sn,-n,0,o),rn("cn2",e,t,sn,n,0,o),rn("cn3",e,t,sn,0,-i,o),rn("cn4",e,t,sn,0,i,o),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function rn(s,t,e,n,i,o,l){Du.set(i,o,l).unproject(n);const c=t[s];if(c!==void 0){const h=e.getAttribute("position");for(let f=0,p=c.length;f<p;f++)h.setXYZ(c[f],Du.x,Du.y,Du.z)}}const Uu=new zn;class uA extends cs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),o=new _e;o.setIndex(new ke(n,1)),o.setAttribute("position",new ke(i,3)),super(o,new Zn({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Uu.setFromObject(this.object),Uu.isEmpty())return;const t=Uu.min,e=Uu.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class hA extends cs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],o=new _e;o.setIndex(new ke(n,1)),o.setAttribute("position",new Xt(i,3)),super(o,new Zn({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class fA extends da{constructor(t,e=1,n=16776960){const i=n,o=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new _e;l.setAttribute("position",new Xt(o,3)),l.computeBoundingSphere(),super(l,new Zn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new _e;h.setAttribute("position",new Xt(c,3)),h.computeBoundingSphere(),this.add(new un(h,new ma({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const x_=new O;let Nu,Sp;class dA extends De{constructor(t=new O(0,0,1),e=new O(0,0,0),n=1,i=16776960,o=n*.2,l=o*.2){super(),this.type="ArrowHelper",Nu===void 0&&(Nu=new _e,Nu.setAttribute("position",new Xt([0,0,0,0,1,0],3)),Sp=new ec(.5,1,5,1),Sp.translate(0,-.5,0)),this.position.copy(e),this.line=new da(Nu,new Zn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new un(Sp,new ma({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,o,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{x_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(x_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class pA extends cs{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new _e;i.setAttribute("position",new Xt(e,3)),i.setAttribute("color",new Xt(n,3));const o=new Zn({vertexColors:!0,toneMapped:!1});super(i,o),this.type="AxesHelper"}setColors(t,e,n){const i=new Bt,o=this.geometry.attributes.color.array;return i.set(t),i.toArray(o,0),i.toArray(o,3),i.set(e),i.toArray(o,6),i.toArray(o,9),i.set(n),i.toArray(o,12),i.toArray(o,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class mA{constructor(){this.type="ShapePath",this.color=new Bt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new wh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,o,l){return this.currentPath.bezierCurveTo(t,e,n,i,o,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(_){const E=[];for(let A=0,T=_.length;A<T;A++){const U=_[A],D=new ar;D.curves=U.curves,E.push(D)}return E}function n(_,E){const A=E.length;let T=!1;for(let U=A-1,D=0;D<A;U=D++){let P=E[U],z=E[D],w=z.x-P.x,C=z.y-P.y;if(Math.abs(C)>Number.EPSILON){if(C<0&&(P=E[D],w=-w,z=E[U],C=-C),_.y<P.y||_.y>z.y)continue;if(_.y===P.y){if(_.x===P.x)return!0}else{const I=C*(_.x-P.x)-w*(_.y-P.y);if(I===0)return!0;if(I<0)continue;T=!T}}else{if(_.y!==P.y)continue;if(z.x<=_.x&&_.x<=P.x||P.x<=_.x&&_.x<=z.x)return!0}}return T}const i=Yi.isClockWise,o=this.subPaths;if(o.length===0)return[];let l,c,h;const f=[];if(o.length===1)return c=o[0],h=new ar,h.curves=c.curves,f.push(h),f;let p=!i(o[0].getPoints());p=t?!p:p;const m=[],g=[];let v=[],x=0,b;g[x]=void 0,v[x]=[];for(let _=0,E=o.length;_<E;_++)c=o[_],b=c.getPoints(),l=i(b),l=t?!l:l,l?(!p&&g[x]&&x++,g[x]={s:new ar,p:b},g[x].s.curves=c.curves,p&&x++,v[x]=[]):v[x].push({h:c,p:b[0]});if(!g[0])return e(o);if(g.length>1){let _=!1,E=0;for(let A=0,T=g.length;A<T;A++)m[A]=[];for(let A=0,T=g.length;A<T;A++){const U=v[A];for(let D=0;D<U.length;D++){const P=U[D];let z=!0;for(let w=0;w<g.length;w++)n(P.p,g[w].p)&&(A!==w&&E++,z?(z=!1,m[w].push(P)):_=!0);z&&m[A].push(P)}}E>0&&_===!1&&(v=m)}let S;for(let _=0,E=g.length;_<E;_++){h=g[_].s,f.push(h),S=v[_];for(let A=0,T=S.length;A<T;A++)h.holes.push(S[A].h)}return f}}class gA extends ls{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function vA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function _A(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function yA(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function sm(s,t,e,n){const i=xA(n);switch(e){case ym:return s*t;case Fh:return s*t/i.components*i.byteLength;case Ql:return s*t/i.components*i.byteLength;case Sm:return s*t*2/i.components*i.byteLength;case Hh:return s*t*2/i.components*i.byteLength;case xm:return s*t*3/i.components*i.byteLength;case Bn:return s*t*4/i.components*i.byteLength;case Vh:return s*t*4/i.components*i.byteLength;case Tl:case Al:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case Cl:case wl:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case $u:case eh:return Math.max(s,16)*Math.max(t,8)/4;case Qu:case th:return Math.max(s,8)*Math.max(t,8)/2;case nh:case ih:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case sh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case ah:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case rh:return Math.floor((s+4)/5)*Math.floor((t+3)/4)*16;case oh:return Math.floor((s+4)/5)*Math.floor((t+4)/5)*16;case lh:return Math.floor((s+5)/6)*Math.floor((t+4)/5)*16;case ch:return Math.floor((s+5)/6)*Math.floor((t+5)/6)*16;case uh:return Math.floor((s+7)/8)*Math.floor((t+4)/5)*16;case hh:return Math.floor((s+7)/8)*Math.floor((t+5)/6)*16;case fh:return Math.floor((s+7)/8)*Math.floor((t+7)/8)*16;case dh:return Math.floor((s+9)/10)*Math.floor((t+4)/5)*16;case ph:return Math.floor((s+9)/10)*Math.floor((t+5)/6)*16;case mh:return Math.floor((s+9)/10)*Math.floor((t+7)/8)*16;case gh:return Math.floor((s+9)/10)*Math.floor((t+9)/10)*16;case vh:return Math.floor((s+11)/12)*Math.floor((t+9)/10)*16;case _h:return Math.floor((s+11)/12)*Math.floor((t+11)/12)*16;case Rl:case yh:case xh:return Math.ceil(s/4)*Math.ceil(t/4)*16;case Mm:case Sh:return Math.ceil(s/4)*Math.ceil(t/4)*8;case Mh:case bh:return Math.ceil(s/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function xA(s){switch(s){case Pi:case gm:return{byteLength:1,components:1};case go:case vm:case wo:return{byteLength:2,components:1};case Bh:case zh:return{byteLength:2,components:4};case Os:case Oh:case ni:return{byteLength:4,components:1};case _m:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class SA{static contain(t,e){return vA(t,e)}static cover(t,e){return _A(t,e)}static fill(t){return yA(t)}static getByteLength(t,e,n,i){return sm(t,e,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Lh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Lh);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function rS(){let s=null,t=!1,e=null,n=null;function i(o,l){e(o,l),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(o){e=o},setContext:function(o){s=o}}}function MA(s){const t=new WeakMap;function e(c,h){const f=c.array,p=c.usage,m=f.byteLength,g=s.createBuffer();s.bindBuffer(h,g),s.bufferData(h,f,p),c.onUploadCallback();let v;if(f instanceof Float32Array)v=s.FLOAT;else if(typeof Float16Array<"u"&&f instanceof Float16Array)v=s.HALF_FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=s.HALF_FLOAT:v=s.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=s.SHORT;else if(f instanceof Uint32Array)v=s.UNSIGNED_INT;else if(f instanceof Int32Array)v=s.INT;else if(f instanceof Int8Array)v=s.BYTE;else if(f instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,h,f){const p=h.array,m=h.updateRanges;if(s.bindBuffer(f,c),m.length===0)s.bufferSubData(f,0,p);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],b=m[v];b.start<=x.start+x.count+1?x.count=Math.max(x.count,b.start+b.count-x.start):(++g,m[g]=b)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const b=m[v];s.bufferSubData(f,b.start*p.BYTES_PER_ELEMENT,p,b.start,b.count)}h.clearUpdateRanges()}h.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),t.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=t.get(c);h&&(s.deleteBuffer(h.buffer),t.delete(c))}function l(c,h){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const p=t.get(c);(!p||p.version<c.version)&&t.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=t.get(c);if(f===void 0)t.set(c,e(c,h));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,h),f.version=c.version}}return{get:i,remove:o,update:l}}var bA=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,EA=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,TA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,AA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,CA=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,wA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,RA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,DA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,UA=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,NA=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,LA=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,PA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,IA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,OA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,BA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,zA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,FA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,HA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,VA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,GA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,kA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,WA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,XA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,qA=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,YA=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ZA=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,KA=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,jA=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,JA=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,QA=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,$A="gl_FragColor = linearToOutputTexel( gl_FragColor );",tC=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,eC=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,nC=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,iC=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,sC=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,aC=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,rC=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,oC=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,lC=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,cC=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,uC=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,hC=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,fC=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,dC=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,pC=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,mC=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,gC=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,vC=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,_C=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,yC=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,xC=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,SC=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,MC=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,bC=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,EC=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,TC=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,AC=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,CC=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,wC=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,RC=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,DC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,UC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,NC=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,LC=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,PC=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,IC=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,OC=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,BC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,zC=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,FC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,HC=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,VC=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,GC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,kC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,WC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,XC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,qC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,YC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,ZC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,KC=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,jC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,JC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,QC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,$C=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,tw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,ew=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,nw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,iw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,sw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSEDEPTHBUF
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSEDEPTHBUF
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare , distribution.x );
		#endif
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,aw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,rw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,ow=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,lw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,cw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,uw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,hw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,fw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,dw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,pw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,mw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,gw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,vw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,_w=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,yw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,xw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Sw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Mw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,bw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Ew=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Tw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Aw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Cw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ww=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Rw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSEDEPTHBUF
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,Dw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Uw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Nw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Lw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Pw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Iw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ow=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Bw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Fw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Hw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Vw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,kw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Ww=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Xw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,qw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Yw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Zw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Kw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Jw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Qw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,$w=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,tR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,eR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ye={alphahash_fragment:bA,alphahash_pars_fragment:EA,alphamap_fragment:TA,alphamap_pars_fragment:AA,alphatest_fragment:CA,alphatest_pars_fragment:wA,aomap_fragment:RA,aomap_pars_fragment:DA,batching_pars_vertex:UA,batching_vertex:NA,begin_vertex:LA,beginnormal_vertex:PA,bsdfs:IA,iridescence_fragment:OA,bumpmap_pars_fragment:BA,clipping_planes_fragment:zA,clipping_planes_pars_fragment:FA,clipping_planes_pars_vertex:HA,clipping_planes_vertex:VA,color_fragment:GA,color_pars_fragment:kA,color_pars_vertex:WA,color_vertex:XA,common:qA,cube_uv_reflection_fragment:YA,defaultnormal_vertex:ZA,displacementmap_pars_vertex:KA,displacementmap_vertex:jA,emissivemap_fragment:JA,emissivemap_pars_fragment:QA,colorspace_fragment:$A,colorspace_pars_fragment:tC,envmap_fragment:eC,envmap_common_pars_fragment:nC,envmap_pars_fragment:iC,envmap_pars_vertex:sC,envmap_physical_pars_fragment:mC,envmap_vertex:aC,fog_vertex:rC,fog_pars_vertex:oC,fog_fragment:lC,fog_pars_fragment:cC,gradientmap_pars_fragment:uC,lightmap_pars_fragment:hC,lights_lambert_fragment:fC,lights_lambert_pars_fragment:dC,lights_pars_begin:pC,lights_toon_fragment:gC,lights_toon_pars_fragment:vC,lights_phong_fragment:_C,lights_phong_pars_fragment:yC,lights_physical_fragment:xC,lights_physical_pars_fragment:SC,lights_fragment_begin:MC,lights_fragment_maps:bC,lights_fragment_end:EC,logdepthbuf_fragment:TC,logdepthbuf_pars_fragment:AC,logdepthbuf_pars_vertex:CC,logdepthbuf_vertex:wC,map_fragment:RC,map_pars_fragment:DC,map_particle_fragment:UC,map_particle_pars_fragment:NC,metalnessmap_fragment:LC,metalnessmap_pars_fragment:PC,morphinstance_vertex:IC,morphcolor_vertex:OC,morphnormal_vertex:BC,morphtarget_pars_vertex:zC,morphtarget_vertex:FC,normal_fragment_begin:HC,normal_fragment_maps:VC,normal_pars_fragment:GC,normal_pars_vertex:kC,normal_vertex:WC,normalmap_pars_fragment:XC,clearcoat_normal_fragment_begin:qC,clearcoat_normal_fragment_maps:YC,clearcoat_pars_fragment:ZC,iridescence_pars_fragment:KC,opaque_fragment:jC,packing:JC,premultiplied_alpha_fragment:QC,project_vertex:$C,dithering_fragment:tw,dithering_pars_fragment:ew,roughnessmap_fragment:nw,roughnessmap_pars_fragment:iw,shadowmap_pars_fragment:sw,shadowmap_pars_vertex:aw,shadowmap_vertex:rw,shadowmask_pars_fragment:ow,skinbase_vertex:lw,skinning_pars_vertex:cw,skinning_vertex:uw,skinnormal_vertex:hw,specularmap_fragment:fw,specularmap_pars_fragment:dw,tonemapping_fragment:pw,tonemapping_pars_fragment:mw,transmission_fragment:gw,transmission_pars_fragment:vw,uv_pars_fragment:_w,uv_pars_vertex:yw,uv_vertex:xw,worldpos_vertex:Sw,background_vert:Mw,background_frag:bw,backgroundCube_vert:Ew,backgroundCube_frag:Tw,cube_vert:Aw,cube_frag:Cw,depth_vert:ww,depth_frag:Rw,distanceRGBA_vert:Dw,distanceRGBA_frag:Uw,equirect_vert:Nw,equirect_frag:Lw,linedashed_vert:Pw,linedashed_frag:Iw,meshbasic_vert:Ow,meshbasic_frag:Bw,meshlambert_vert:zw,meshlambert_frag:Fw,meshmatcap_vert:Hw,meshmatcap_frag:Vw,meshnormal_vert:Gw,meshnormal_frag:kw,meshphong_vert:Ww,meshphong_frag:Xw,meshphysical_vert:qw,meshphysical_frag:Yw,meshtoon_vert:Zw,meshtoon_frag:Kw,points_vert:jw,points_frag:Jw,shadow_vert:Qw,shadow_frag:$w,sprite_vert:tR,sprite_frag:eR},It={common:{diffuse:{value:new Bt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new me},alphaMap:{value:null},alphaMapTransform:{value:new me},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new me}},envmap:{envMap:{value:null},envMapRotation:{value:new me},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new me}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new me}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new me},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new me},normalScale:{value:new dt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new me},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new me}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new me}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new me}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Bt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Bt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new me},alphaTest:{value:0},uvTransform:{value:new me}},sprite:{diffuse:{value:new Bt(16777215)},opacity:{value:1},center:{value:new dt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new me},alphaMap:{value:null},alphaMapTransform:{value:new me},alphaTest:{value:0}}},qi={basic:{uniforms:Xn([It.common,It.specularmap,It.envmap,It.aomap,It.lightmap,It.fog]),vertexShader:ye.meshbasic_vert,fragmentShader:ye.meshbasic_frag},lambert:{uniforms:Xn([It.common,It.specularmap,It.envmap,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.fog,It.lights,{emissive:{value:new Bt(0)}}]),vertexShader:ye.meshlambert_vert,fragmentShader:ye.meshlambert_frag},phong:{uniforms:Xn([It.common,It.specularmap,It.envmap,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.fog,It.lights,{emissive:{value:new Bt(0)},specular:{value:new Bt(1118481)},shininess:{value:30}}]),vertexShader:ye.meshphong_vert,fragmentShader:ye.meshphong_frag},standard:{uniforms:Xn([It.common,It.envmap,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.roughnessmap,It.metalnessmap,It.fog,It.lights,{emissive:{value:new Bt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ye.meshphysical_vert,fragmentShader:ye.meshphysical_frag},toon:{uniforms:Xn([It.common,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.gradientmap,It.fog,It.lights,{emissive:{value:new Bt(0)}}]),vertexShader:ye.meshtoon_vert,fragmentShader:ye.meshtoon_frag},matcap:{uniforms:Xn([It.common,It.bumpmap,It.normalmap,It.displacementmap,It.fog,{matcap:{value:null}}]),vertexShader:ye.meshmatcap_vert,fragmentShader:ye.meshmatcap_frag},points:{uniforms:Xn([It.points,It.fog]),vertexShader:ye.points_vert,fragmentShader:ye.points_frag},dashed:{uniforms:Xn([It.common,It.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ye.linedashed_vert,fragmentShader:ye.linedashed_frag},depth:{uniforms:Xn([It.common,It.displacementmap]),vertexShader:ye.depth_vert,fragmentShader:ye.depth_frag},normal:{uniforms:Xn([It.common,It.bumpmap,It.normalmap,It.displacementmap,{opacity:{value:1}}]),vertexShader:ye.meshnormal_vert,fragmentShader:ye.meshnormal_frag},sprite:{uniforms:Xn([It.sprite,It.fog]),vertexShader:ye.sprite_vert,fragmentShader:ye.sprite_frag},background:{uniforms:{uvTransform:{value:new me},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ye.background_vert,fragmentShader:ye.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new me}},vertexShader:ye.backgroundCube_vert,fragmentShader:ye.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ye.cube_vert,fragmentShader:ye.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ye.equirect_vert,fragmentShader:ye.equirect_frag},distanceRGBA:{uniforms:Xn([It.common,It.displacementmap,{referencePosition:{value:new O},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ye.distanceRGBA_vert,fragmentShader:ye.distanceRGBA_frag},shadow:{uniforms:Xn([It.lights,It.fog,{color:{value:new Bt(0)},opacity:{value:1}}]),vertexShader:ye.shadow_vert,fragmentShader:ye.shadow_frag}};qi.physical={uniforms:Xn([qi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new me},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new me},clearcoatNormalScale:{value:new dt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new me},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new me},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new me},sheen:{value:0},sheenColor:{value:new Bt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new me},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new me},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new me},transmissionSamplerSize:{value:new dt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new me},attenuationDistance:{value:0},attenuationColor:{value:new Bt(0)},specularColor:{value:new Bt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new me},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new me},anisotropyVector:{value:new dt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new me}}]),vertexShader:ye.meshphysical_vert,fragmentShader:ye.meshphysical_frag};const Lu={r:0,b:0,g:0},Ka=new Si,nR=new ce;function iR(s,t,e,n,i,o,l){const c=new Bt(0);let h=o===!0?0:1,f,p,m=null,g=0,v=null;function x(A){let T=A.isScene===!0?A.background:null;return T&&T.isTexture&&(T=(A.backgroundBlurriness>0?e:t).get(T)),T}function b(A){let T=!1;const U=x(A);U===null?_(c,h):U&&U.isColor&&(_(U,1),T=!0);const D=s.xr.getEnvironmentBlendMode();D==="additive"?n.buffers.color.setClear(0,0,0,1,l):D==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(s.autoClear||T)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function S(A,T){const U=x(T);U&&(U.isCubeTexture||U.mapping===Co)?(p===void 0&&(p=new un(new ur(1,1,1),new Zi({name:"BackgroundCubeMaterial",uniforms:bo(qi.backgroundCube.uniforms),vertexShader:qi.backgroundCube.vertexShader,fragmentShader:qi.backgroundCube.fragmentShader,side:Yn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(D,P,z){this.matrixWorld.copyPosition(z.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),Ka.copy(T.backgroundRotation),Ka.x*=-1,Ka.y*=-1,Ka.z*=-1,U.isCubeTexture&&U.isRenderTargetTexture===!1&&(Ka.y*=-1,Ka.z*=-1),p.material.uniforms.envMap.value=U,p.material.uniforms.flipEnvMap.value=U.isCubeTexture&&U.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(nR.makeRotationFromEuler(Ka)),p.material.toneMapped=Ae.getTransfer(U.colorSpace)!==Fe,(m!==U||g!==U.version||v!==s.toneMapping)&&(p.material.needsUpdate=!0,m=U,g=U.version,v=s.toneMapping),p.layers.enableAll(),A.unshift(p,p.geometry,p.material,0,0,null)):U&&U.isTexture&&(f===void 0&&(f=new un(new Uo(2,2),new Zi({name:"BackgroundMaterial",uniforms:bo(qi.background.uniforms),vertexShader:qi.background.vertexShader,fragmentShader:qi.background.fragmentShader,side:Ps,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=U,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.toneMapped=Ae.getTransfer(U.colorSpace)!==Fe,U.matrixAutoUpdate===!0&&U.updateMatrix(),f.material.uniforms.uvTransform.value.copy(U.matrix),(m!==U||g!==U.version||v!==s.toneMapping)&&(f.material.needsUpdate=!0,m=U,g=U.version,v=s.toneMapping),f.layers.enableAll(),A.unshift(f,f.geometry,f.material,0,0,null))}function _(A,T){A.getRGB(Lu,ax(s)),n.buffers.color.setClear(Lu.r,Lu.g,Lu.b,T,l)}function E(){p!==void 0&&(p.geometry.dispose(),p.material.dispose(),p=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(A,T=1){c.set(A),h=T,_(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(A){h=A,_(c,h)},render:b,addToRenderList:S,dispose:E}}function sR(s,t){const e=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=g(null);let o=i,l=!1;function c(C,I,$,q,K){let at=!1;const F=m(q,$,I);o!==F&&(o=F,f(o.object)),at=v(C,q,$,K),at&&x(C,q,$,K),K!==null&&t.update(K,s.ELEMENT_ARRAY_BUFFER),(at||l)&&(l=!1,T(C,I,$,q),K!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(K).buffer))}function h(){return s.createVertexArray()}function f(C){return s.bindVertexArray(C)}function p(C){return s.deleteVertexArray(C)}function m(C,I,$){const q=$.wireframe===!0;let K=n[C.id];K===void 0&&(K={},n[C.id]=K);let at=K[I.id];at===void 0&&(at={},K[I.id]=at);let F=at[q];return F===void 0&&(F=g(h()),at[q]=F),F}function g(C){const I=[],$=[],q=[];for(let K=0;K<e;K++)I[K]=0,$[K]=0,q[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:I,enabledAttributes:$,attributeDivisors:q,object:C,attributes:{},index:null}}function v(C,I,$,q){const K=o.attributes,at=I.attributes;let F=0;const X=$.getAttributes();for(const G in X)if(X[G].location>=0){const lt=K[G];let mt=at[G];if(mt===void 0&&(G==="instanceMatrix"&&C.instanceMatrix&&(mt=C.instanceMatrix),G==="instanceColor"&&C.instanceColor&&(mt=C.instanceColor)),lt===void 0||lt.attribute!==mt||mt&&lt.data!==mt.data)return!0;F++}return o.attributesNum!==F||o.index!==q}function x(C,I,$,q){const K={},at=I.attributes;let F=0;const X=$.getAttributes();for(const G in X)if(X[G].location>=0){let lt=at[G];lt===void 0&&(G==="instanceMatrix"&&C.instanceMatrix&&(lt=C.instanceMatrix),G==="instanceColor"&&C.instanceColor&&(lt=C.instanceColor));const mt={};mt.attribute=lt,lt&&lt.data&&(mt.data=lt.data),K[G]=mt,F++}o.attributes=K,o.attributesNum=F,o.index=q}function b(){const C=o.newAttributes;for(let I=0,$=C.length;I<$;I++)C[I]=0}function S(C){_(C,0)}function _(C,I){const $=o.newAttributes,q=o.enabledAttributes,K=o.attributeDivisors;$[C]=1,q[C]===0&&(s.enableVertexAttribArray(C),q[C]=1),K[C]!==I&&(s.vertexAttribDivisor(C,I),K[C]=I)}function E(){const C=o.newAttributes,I=o.enabledAttributes;for(let $=0,q=I.length;$<q;$++)I[$]!==C[$]&&(s.disableVertexAttribArray($),I[$]=0)}function A(C,I,$,q,K,at,F){F===!0?s.vertexAttribIPointer(C,I,$,K,at):s.vertexAttribPointer(C,I,$,q,K,at)}function T(C,I,$,q){b();const K=q.attributes,at=$.getAttributes(),F=I.defaultAttributeValues;for(const X in at){const G=at[X];if(G.location>=0){let nt=K[X];if(nt===void 0&&(X==="instanceMatrix"&&C.instanceMatrix&&(nt=C.instanceMatrix),X==="instanceColor"&&C.instanceColor&&(nt=C.instanceColor)),nt!==void 0){const lt=nt.normalized,mt=nt.itemSize,Nt=t.get(nt);if(Nt===void 0)continue;const Jt=Nt.buffer,zt=Nt.type,st=Nt.bytesPerElement,Dt=zt===s.INT||zt===s.UNSIGNED_INT||nt.gpuType===Oh;if(nt.isInterleavedBufferAttribute){const Tt=nt.data,jt=Tt.stride,Yt=nt.offset;if(Tt.isInstancedInterleavedBuffer){for(let ie=0;ie<G.locationSize;ie++)_(G.location+ie,Tt.meshPerAttribute);C.isInstancedMesh!==!0&&q._maxInstanceCount===void 0&&(q._maxInstanceCount=Tt.meshPerAttribute*Tt.count)}else for(let ie=0;ie<G.locationSize;ie++)S(G.location+ie);s.bindBuffer(s.ARRAY_BUFFER,Jt);for(let ie=0;ie<G.locationSize;ie++)A(G.location+ie,mt/G.locationSize,zt,lt,jt*st,(Yt+mt/G.locationSize*ie)*st,Dt)}else{if(nt.isInstancedBufferAttribute){for(let Tt=0;Tt<G.locationSize;Tt++)_(G.location+Tt,nt.meshPerAttribute);C.isInstancedMesh!==!0&&q._maxInstanceCount===void 0&&(q._maxInstanceCount=nt.meshPerAttribute*nt.count)}else for(let Tt=0;Tt<G.locationSize;Tt++)S(G.location+Tt);s.bindBuffer(s.ARRAY_BUFFER,Jt);for(let Tt=0;Tt<G.locationSize;Tt++)A(G.location+Tt,mt/G.locationSize,zt,lt,mt*st,mt/G.locationSize*Tt*st,Dt)}}else if(F!==void 0){const lt=F[X];if(lt!==void 0)switch(lt.length){case 2:s.vertexAttrib2fv(G.location,lt);break;case 3:s.vertexAttrib3fv(G.location,lt);break;case 4:s.vertexAttrib4fv(G.location,lt);break;default:s.vertexAttrib1fv(G.location,lt)}}}}E()}function U(){z();for(const C in n){const I=n[C];for(const $ in I){const q=I[$];for(const K in q)p(q[K].object),delete q[K];delete I[$]}delete n[C]}}function D(C){if(n[C.id]===void 0)return;const I=n[C.id];for(const $ in I){const q=I[$];for(const K in q)p(q[K].object),delete q[K];delete I[$]}delete n[C.id]}function P(C){for(const I in n){const $=n[I];if($[C.id]===void 0)continue;const q=$[C.id];for(const K in q)p(q[K].object),delete q[K];delete $[C.id]}}function z(){w(),l=!0,o!==i&&(o=i,f(o.object))}function w(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:z,resetDefaultState:w,dispose:U,releaseStatesOfGeometry:D,releaseStatesOfProgram:P,initAttributes:b,enableAttribute:S,disableUnusedAttributes:E}}function aR(s,t,e){let n;function i(f){n=f}function o(f,p){s.drawArrays(n,f,p),e.update(p,n,1)}function l(f,p,m){m!==0&&(s.drawArraysInstanced(n,f,p,m),e.update(p,n,m))}function c(f,p,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,m);let v=0;for(let x=0;x<m;x++)v+=p[x];e.update(v,n,1)}function h(f,p,m,g){if(m===0)return;const v=t.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],p[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,p,0,g,0,m);let x=0;for(let b=0;b<m;b++)x+=p[b]*g[b];e.update(x,n,1)}}this.setMode=i,this.render=o,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=h}function rR(s,t,e,n){let i;function o(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const P=t.get("EXT_texture_filter_anisotropic");i=s.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(P){return!(P!==Bn&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(P){const z=P===wo&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(P!==Pi&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&P!==ni&&!z)}function h(P){if(P==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";P="mediump"}return P==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=e.precision!==void 0?e.precision:"highp";const p=h(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const m=e.logarithmicDepthBuffer===!0,g=e.reversedDepthBuffer===!0&&t.has("EXT_clip_control"),v=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),b=s.getParameter(s.MAX_TEXTURE_SIZE),S=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),_=s.getParameter(s.MAX_VERTEX_ATTRIBS),E=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),A=s.getParameter(s.MAX_VARYING_VECTORS),T=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),U=x>0,D=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:o,getMaxPrecision:h,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reversedDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:b,maxCubemapSize:S,maxAttributes:_,maxVertexUniforms:E,maxVaryings:A,maxFragmentUniforms:T,vertexTextures:U,maxSamples:D}}function oR(s){const t=this;let e=null,n=0,i=!1,o=!1;const l=new oa,c=new me,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||i;return i=g,n=m.length,v},this.beginShadows=function(){o=!0,p(null)},this.endShadows=function(){o=!1},this.setGlobalState=function(m,g){e=p(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,b=m.clipIntersection,S=m.clipShadows,_=s.get(m);if(!i||x===null||x.length===0||o&&!S)o?p(null):f();else{const E=o?0:n,A=E*4;let T=_.clippingState||null;h.value=T,T=p(x,g,A,v);for(let U=0;U!==A;++U)T[U]=e[U];_.clippingState=T,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=E}};function f(){h.value!==e&&(h.value=e,h.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function p(m,g,v,x){const b=m!==null?m.length:0;let S=null;if(b!==0){if(S=h.value,x!==!0||S===null){const _=v+b*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(S===null||S.length<_)&&(S=new Float32Array(_));for(let A=0,T=v;A!==b;++A,T+=4)l.copy(m[A]).applyMatrix4(E,c),l.normal.toArray(S,T),S[T+3]=l.constant}h.value=S,h.needsUpdate=!0}return t.numPlanes=b,t.numIntersection=0,S}}function lR(s){let t=new WeakMap;function e(l,c){return c===Pl?l.mapping=Is:c===Il&&(l.mapping=ha),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===Pl||c===Il)if(t.has(l)){const h=t.get(l).texture;return e(h,l.mapping)}else{const h=l.image;if(h&&h.height>0){const f=new lx(h.height);return f.fromEquirectangularTexture(s,l),t.set(l,f),l.addEventListener("dispose",i),e(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const h=t.get(c);h!==void 0&&(t.delete(c),h.dispose())}function o(){t=new WeakMap}return{get:n,dispose:o}}const fo=4,S_=[.125,.215,.35,.446,.526,.582],$a=20,Mp=new rc,M_=new Bt;let bp=null,Ep=0,Tp=0,Ap=!1;const Qa=(1+Math.sqrt(5))/2,ao=1/Qa,b_=[new O(-Qa,ao,0),new O(Qa,ao,0),new O(-ao,0,Qa),new O(ao,0,Qa),new O(0,Qa,-ao),new O(0,Qa,ao),new O(-1,1,-1),new O(1,1,-1),new O(-1,1,1),new O(1,1,1)],cR=new O;class am{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,o={}){const{size:l=256,position:c=cR}=o;bp=this._renderer.getRenderTarget(),Ep=this._renderer.getActiveCubeFace(),Tp=this._renderer.getActiveMipmapLevel(),Ap=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const h=this._allocateTargets();return h.depthBuffer=!0,this._sceneToCubeUV(t,n,i,h,c),e>0&&this._blur(h,0,0,e),this._applyPMREM(h),this._cleanup(h),h}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=A_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=T_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(bp,Ep,Tp),this._renderer.xr.enabled=Ap,t.scissorTest=!1,Pu(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Is||t.mapping===ha?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),bp=this._renderer.getRenderTarget(),Ep=this._renderer.getActiveCubeFace(),Tp=this._renderer.getActiveMipmapLevel(),Ap=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:fn,minFilter:fn,generateMipmaps:!1,type:wo,format:Bn,colorSpace:fa,depthBuffer:!1},i=E_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=E_(t,e,n);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=uR(o)),this._blurMaterial=hR(o,t,e)}return i}_compileMaterial(t){const e=new un(this._lodPlanes[0],t);this._renderer.compile(e,Mp)}_sceneToCubeUV(t,e,n,i,o){const h=new Sn(90,1,e,n),f=[1,-1,1,1,1,1],p=[1,1,1,-1,-1,-1],m=this._renderer,g=m.autoClear,v=m.toneMapping;m.getClearColor(M_),m.toneMapping=as,m.autoClear=!1,m.state.buffers.depth.getReversed()&&(m.setRenderTarget(i),m.clearDepth(),m.setRenderTarget(null));const b=new ma({name:"PMREM.Background",side:Yn,depthWrite:!1,depthTest:!1}),S=new un(new ur,b);let _=!1;const E=t.background;E?E.isColor&&(b.color.copy(E),t.background=null,_=!0):(b.color.copy(M_),_=!0);for(let A=0;A<6;A++){const T=A%3;T===0?(h.up.set(0,f[A],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x+p[A],o.y,o.z)):T===1?(h.up.set(0,0,f[A]),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y+p[A],o.z)):(h.up.set(0,f[A],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y,o.z+p[A]));const U=this._cubeSize;Pu(i,T*U,A>2?U:0,U,U),m.setRenderTarget(i),_&&m.render(S,h),m.render(t,h)}S.geometry.dispose(),S.material.dispose(),m.toneMapping=v,m.autoClear=g,t.background=E}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Is||t.mapping===ha;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=A_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=T_());const o=i?this._cubemapMaterial:this._equirectMaterial,l=new un(this._lodPlanes[0],o),c=o.uniforms;c.envMap.value=t;const h=this._cubeSize;Pu(e,0,0,3*h,2*h),n.setRenderTarget(e),n.render(l,Mp)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let o=1;o<i;o++){const l=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),c=b_[(i-o-1)%b_.length];this._blur(t,o-1,o,l,c)}e.autoClear=n}_blur(t,e,n,i,o){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,i,"latitudinal",o),this._halfBlur(l,t,n,n,i,"longitudinal",o)}_halfBlur(t,e,n,i,o,l,c){const h=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new un(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(o)?Math.PI/(2*v):2*Math.PI/(2*$a-1),b=o/x,S=isFinite(o)?1+Math.floor(p*b):$a;S>$a&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${$a}`);const _=[];let E=0;for(let P=0;P<$a;++P){const z=P/b,w=Math.exp(-z*z/2);_.push(w),P===0?E+=w:P<S&&(E+=2*w)}for(let P=0;P<_.length;P++)_[P]=_[P]/E;g.envMap.value=t.texture,g.samples.value=S,g.weights.value=_,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:A}=this;g.dTheta.value=x,g.mipInt.value=A-n;const T=this._sizeLods[i],U=3*T*(i>A-fo?i-A+fo:0),D=4*(this._cubeSize-T);Pu(e,U,D,3*T,2*T),h.setRenderTarget(e),h.render(m,Mp)}}function uR(s){const t=[],e=[],n=[];let i=s;const o=s-fo+1+S_.length;for(let l=0;l<o;l++){const c=Math.pow(2,i);e.push(c);let h=1/c;l>s-fo?h=S_[l-s+fo-1]:l===0&&(h=0),n.push(h);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],v=6,x=6,b=3,S=2,_=1,E=new Float32Array(b*x*v),A=new Float32Array(S*x*v),T=new Float32Array(_*x*v);for(let D=0;D<v;D++){const P=D%3*2/3-1,z=D>2?0:-1,w=[P,z,0,P+2/3,z,0,P+2/3,z+1,0,P,z,0,P+2/3,z+1,0,P,z+1,0];E.set(w,b*x*D),A.set(g,S*x*D);const C=[D,D,D,D,D,D];T.set(C,_*x*D)}const U=new _e;U.setAttribute("position",new ke(E,b)),U.setAttribute("uv",new ke(A,S)),U.setAttribute("faceIndex",new ke(T,_)),t.push(U),i>fo&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function E_(s,t,e){const n=new os(s,t,e);return n.texture.mapping=Co,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Pu(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function hR(s,t,e){const n=new Float32Array($a),i=new O(0,1,0);return new Zi({name:"SphericalGaussianBlur",defines:{n:$a,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:tg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ns,depthTest:!1,depthWrite:!1})}function T_(){return new Zi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:tg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ns,depthTest:!1,depthWrite:!1})}function A_(){return new Zi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:tg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ns,depthTest:!1,depthWrite:!1})}function tg(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function fR(s){let t=new WeakMap,e=null;function n(c){if(c&&c.isTexture){const h=c.mapping,f=h===Pl||h===Il,p=h===Is||h===ha;if(f||p){let m=t.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return e===null&&(e=new am(s)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||p&&v&&i(v)?(e===null&&(e=new am(s)),m=f?e.fromEquirectangular(c):e.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),c.addEventListener("dispose",o),m.texture):null}}}return c}function i(c){let h=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&h++;return h===f}function o(c){const h=c.target;h.removeEventListener("dispose",o);const f=t.get(h);f!==void 0&&(t.delete(h),f.dispose())}function l(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:l}}function dR(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&po("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function pR(s,t,e,n){const i={},o=new WeakMap;function l(m){const g=m.target;g.index!==null&&t.remove(g.index);for(const x in g.attributes)t.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete i[g.id];const v=o.get(g);v&&(t.remove(v),o.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,e.memory.geometries++),g}function h(m){const g=m.attributes;for(const v in g)t.update(g[v],s.ARRAY_BUFFER)}function f(m){const g=[],v=m.index,x=m.attributes.position;let b=0;if(v!==null){const E=v.array;b=v.version;for(let A=0,T=E.length;A<T;A+=3){const U=E[A+0],D=E[A+1],P=E[A+2];g.push(U,D,D,P,P,U)}}else if(x!==void 0){const E=x.array;b=x.version;for(let A=0,T=E.length/3-1;A<T;A+=3){const U=A+0,D=A+1,P=A+2;g.push(U,D,D,P,P,U)}}else return;const S=new(ex(g)?wm:Cm)(g,1);S.version=b;const _=o.get(m);_&&t.remove(_),o.set(m,S)}function p(m){const g=o.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return o.get(m)}return{get:c,update:h,getWireframeAttribute:p}}function mR(s,t,e){let n;function i(g){n=g}let o,l;function c(g){o=g.type,l=g.bytesPerElement}function h(g,v){s.drawElements(n,v,o,g*l),e.update(v,n,1)}function f(g,v,x){x!==0&&(s.drawElementsInstanced(n,v,o,g*l,x),e.update(v,n,x))}function p(g,v,x){if(x===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,o,g,0,x);let S=0;for(let _=0;_<x;_++)S+=v[_];e.update(S,n,1)}function m(g,v,x,b){if(x===0)return;const S=t.get("WEBGL_multi_draw");if(S===null)for(let _=0;_<g.length;_++)f(g[_]/l,v[_],b[_]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,o,g,0,b,0,x);let _=0;for(let E=0;E<x;E++)_+=v[E]*b[E];e.update(_,n,1)}}this.setMode=i,this.setIndex=c,this.render=h,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=m}function gR(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(o,l,c){switch(e.calls++,l){case s.TRIANGLES:e.triangles+=c*(o/3);break;case s.LINES:e.lines+=c*(o/2);break;case s.LINE_STRIP:e.lines+=c*(o-1);break;case s.LINE_LOOP:e.lines+=c*o;break;case s.POINTS:e.points+=c*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function vR(s,t,e){const n=new WeakMap,i=new Re;function o(l,c,h){const f=l.morphTargetInfluences,p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let w=function(){P.dispose(),n.delete(c),c.removeEventListener("dispose",w)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,b=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let A=0;v===!0&&(A=1),x===!0&&(A=2),b===!0&&(A=3);let T=c.attributes.position.count*A,U=1;T>t.maxTextureSize&&(U=Math.ceil(T/t.maxTextureSize),T=t.maxTextureSize);const D=new Float32Array(T*U*4*m),P=new kh(D,T,U,m);P.type=ni,P.needsUpdate=!0;const z=A*4;for(let C=0;C<m;C++){const I=S[C],$=_[C],q=E[C],K=T*U*4*C;for(let at=0;at<I.count;at++){const F=at*z;v===!0&&(i.fromBufferAttribute(I,at),D[K+F+0]=i.x,D[K+F+1]=i.y,D[K+F+2]=i.z,D[K+F+3]=0),x===!0&&(i.fromBufferAttribute($,at),D[K+F+4]=i.x,D[K+F+5]=i.y,D[K+F+6]=i.z,D[K+F+7]=0),b===!0&&(i.fromBufferAttribute(q,at),D[K+F+8]=i.x,D[K+F+9]=i.y,D[K+F+10]=i.z,D[K+F+11]=q.itemSize===4?i.w:1)}}g={count:m,texture:P,size:new dt(T,U)},n.set(c,g),c.addEventListener("dispose",w)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)h.getUniforms().setValue(s,"morphTexture",l.morphTexture,e);else{let v=0;for(let b=0;b<f.length;b++)v+=f[b];const x=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(s,"morphTargetBaseInfluence",x),h.getUniforms().setValue(s,"morphTargetInfluences",f)}h.getUniforms().setValue(s,"morphTargetsTexture",g.texture,e),h.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:o}}function _R(s,t,e,n){let i=new WeakMap;function o(h){const f=n.render.frame,p=h.geometry,m=t.get(h,p);if(i.get(m)!==f&&(t.update(m),i.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",c)===!1&&h.addEventListener("dispose",c),i.get(h)!==f&&(e.update(h.instanceMatrix,s.ARRAY_BUFFER),h.instanceColor!==null&&e.update(h.instanceColor,s.ARRAY_BUFFER),i.set(h,f))),h.isSkinnedMesh){const g=h.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return m}function l(){i=new WeakMap}function c(h){const f=h.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:o,dispose:l}}const oS=new an,C_=new Lm(1,1),lS=new kh,cS=new Wh,uS=new $l,w_=[],R_=[],D_=new Float32Array(16),U_=new Float32Array(9),N_=new Float32Array(4);function No(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let o=w_[i];if(o===void 0&&(o=new Float32Array(i),w_[i]=o),t!==0){n.toArray(o,0);for(let l=1,c=0;l!==t;++l)c+=e,s[l].toArray(o,c)}return o}function dn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function pn(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function df(s,t){let e=R_[t];e===void 0&&(e=new Int32Array(t),R_[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function yR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function xR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(dn(e,t))return;s.uniform2fv(this.addr,t),pn(e,t)}}function SR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(dn(e,t))return;s.uniform3fv(this.addr,t),pn(e,t)}}function MR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(dn(e,t))return;s.uniform4fv(this.addr,t),pn(e,t)}}function bR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(dn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),pn(e,t)}else{if(dn(e,n))return;N_.set(n),s.uniformMatrix2fv(this.addr,!1,N_),pn(e,n)}}function ER(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(dn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),pn(e,t)}else{if(dn(e,n))return;U_.set(n),s.uniformMatrix3fv(this.addr,!1,U_),pn(e,n)}}function TR(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(dn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),pn(e,t)}else{if(dn(e,n))return;D_.set(n),s.uniformMatrix4fv(this.addr,!1,D_),pn(e,n)}}function AR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function CR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(dn(e,t))return;s.uniform2iv(this.addr,t),pn(e,t)}}function wR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(dn(e,t))return;s.uniform3iv(this.addr,t),pn(e,t)}}function RR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(dn(e,t))return;s.uniform4iv(this.addr,t),pn(e,t)}}function DR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function UR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(dn(e,t))return;s.uniform2uiv(this.addr,t),pn(e,t)}}function NR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(dn(e,t))return;s.uniform3uiv(this.addr,t),pn(e,t)}}function LR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(dn(e,t))return;s.uniform4uiv(this.addr,t),pn(e,t)}}function PR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let o;this.type===s.SAMPLER_2D_SHADOW?(C_.compareFunction=Em,o=C_):o=oS,e.setTexture2D(t||o,i)}function IR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||cS,i)}function OR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||uS,i)}function BR(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||lS,i)}function zR(s){switch(s){case 5126:return yR;case 35664:return xR;case 35665:return SR;case 35666:return MR;case 35674:return bR;case 35675:return ER;case 35676:return TR;case 5124:case 35670:return AR;case 35667:case 35671:return CR;case 35668:case 35672:return wR;case 35669:case 35673:return RR;case 5125:return DR;case 36294:return UR;case 36295:return NR;case 36296:return LR;case 35678:case 36198:case 36298:case 36306:case 35682:return PR;case 35679:case 36299:case 36307:return IR;case 35680:case 36300:case 36308:case 36293:return OR;case 36289:case 36303:case 36311:case 36292:return BR}}function FR(s,t){s.uniform1fv(this.addr,t)}function HR(s,t){const e=No(t,this.size,2);s.uniform2fv(this.addr,e)}function VR(s,t){const e=No(t,this.size,3);s.uniform3fv(this.addr,e)}function GR(s,t){const e=No(t,this.size,4);s.uniform4fv(this.addr,e)}function kR(s,t){const e=No(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function WR(s,t){const e=No(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function XR(s,t){const e=No(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function qR(s,t){s.uniform1iv(this.addr,t)}function YR(s,t){s.uniform2iv(this.addr,t)}function ZR(s,t){s.uniform3iv(this.addr,t)}function KR(s,t){s.uniform4iv(this.addr,t)}function jR(s,t){s.uniform1uiv(this.addr,t)}function JR(s,t){s.uniform2uiv(this.addr,t)}function QR(s,t){s.uniform3uiv(this.addr,t)}function $R(s,t){s.uniform4uiv(this.addr,t)}function t2(s,t,e){const n=this.cache,i=t.length,o=df(e,i);dn(n,o)||(s.uniform1iv(this.addr,o),pn(n,o));for(let l=0;l!==i;++l)e.setTexture2D(t[l]||oS,o[l])}function e2(s,t,e){const n=this.cache,i=t.length,o=df(e,i);dn(n,o)||(s.uniform1iv(this.addr,o),pn(n,o));for(let l=0;l!==i;++l)e.setTexture3D(t[l]||cS,o[l])}function n2(s,t,e){const n=this.cache,i=t.length,o=df(e,i);dn(n,o)||(s.uniform1iv(this.addr,o),pn(n,o));for(let l=0;l!==i;++l)e.setTextureCube(t[l]||uS,o[l])}function i2(s,t,e){const n=this.cache,i=t.length,o=df(e,i);dn(n,o)||(s.uniform1iv(this.addr,o),pn(n,o));for(let l=0;l!==i;++l)e.setTexture2DArray(t[l]||lS,o[l])}function s2(s){switch(s){case 5126:return FR;case 35664:return HR;case 35665:return VR;case 35666:return GR;case 35674:return kR;case 35675:return WR;case 35676:return XR;case 5124:case 35670:return qR;case 35667:case 35671:return YR;case 35668:case 35672:return ZR;case 35669:case 35673:return KR;case 5125:return jR;case 36294:return JR;case 36295:return QR;case 36296:return $R;case 35678:case 36198:case 36298:case 36306:case 35682:return t2;case 35679:case 36299:case 36307:return e2;case 35680:case 36300:case 36308:case 36293:return n2;case 36289:case 36303:case 36311:case 36292:return i2}}class a2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=zR(e.type)}}class r2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=s2(e.type)}}class o2{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let o=0,l=i.length;o!==l;++o){const c=i[o];c.setValue(t,e[c.id],n)}}}const Cp=/(\w+)(\])?(\[|\.)?/g;function L_(s,t){s.seq.push(t),s.map[t.id]=t}function l2(s,t,e){const n=s.name,i=n.length;for(Cp.lastIndex=0;;){const o=Cp.exec(n),l=Cp.lastIndex;let c=o[1];const h=o[2]==="]",f=o[3];if(h&&(c=c|0),f===void 0||f==="["&&l+2===i){L_(e,f===void 0?new a2(c,s,t):new r2(c,s,t));break}else{let m=e.map[c];m===void 0&&(m=new o2(c),L_(e,m)),e=m}}}class Vu{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const o=t.getActiveUniform(e,i),l=t.getUniformLocation(e,o.name);l2(o,l,this)}}setValue(t,e,n,i){const o=this.map[e];o!==void 0&&o.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let o=0,l=e.length;o!==l;++o){const c=e[o],h=n[c.id];h.needsUpdate!==!1&&c.setValue(t,h.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,o=t.length;i!==o;++i){const l=t[i];l.id in e&&n.push(l)}return n}}function P_(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}const c2=37297;let u2=0;function h2(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),o=Math.min(t+6,e.length);for(let l=i;l<o;l++){const c=l+1;n.push(`${c===t?">":" "} ${c}: ${e[l]}`)}return n.join(`
`)}const I_=new me;function f2(s){Ae._getMatrix(I_,Ae.workingColorSpace,s);const t=`mat3( ${I_.elements.map(e=>e.toFixed(4))} )`;switch(Ae.getTransfer(s)){case Hl:return[t,"LinearTransferOETF"];case Fe:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[t,"LinearTransferOETF"]}}function O_(s,t,e){const n=s.getShaderParameter(t,s.COMPILE_STATUS),o=(s.getShaderInfoLog(t)||"").trim();if(n&&o==="")return"";const l=/ERROR: 0:(\d+)/.exec(o);if(l){const c=parseInt(l[1]);return e.toUpperCase()+`

`+o+`

`+h2(s.getShaderSource(t),c)}else return o}function d2(s,t){const e=f2(t);return[`vec4 ${s}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function p2(s,t){let e;switch(t){case Iy:e="Linear";break;case Oy:e="Reinhard";break;case By:e="Cineon";break;case pm:e="ACESFilmic";break;case Fy:e="AgX";break;case Hy:e="Neutral";break;case zy:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Iu=new O;function m2(){Ae.getLuminanceCoefficients(Iu);const s=Iu.x.toFixed(4),t=Iu.y.toFixed(4),e=Iu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function g2(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ml).join(`
`)}function v2(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function _2(s,t){const e={},n=s.getProgramParameter(t,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const o=s.getActiveAttrib(t,i),l=o.name;let c=1;o.type===s.FLOAT_MAT2&&(c=2),o.type===s.FLOAT_MAT3&&(c=3),o.type===s.FLOAT_MAT4&&(c=4),e[l]={type:o.type,location:s.getAttribLocation(t,l),locationSize:c}}return e}function Ml(s){return s!==""}function B_(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function z_(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const y2=/^[ \t]*#include +<([\w\d./]+)>/gm;function rm(s){return s.replace(y2,S2)}const x2=new Map;function S2(s,t){let e=ye[t];if(e===void 0){const n=x2.get(t);if(n!==void 0)e=ye[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return rm(e)}const M2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function F_(s){return s.replace(M2,b2)}function b2(s,t,e,n){let i="";for(let o=parseInt(t);o<parseInt(e);o++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return i}function H_(s){let t=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function E2(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Ph?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===bl?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Xi&&(t="SHADOWMAP_TYPE_VSM"),t}function T2(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Is:case ha:t="ENVMAP_TYPE_CUBE";break;case Co:t="ENVMAP_TYPE_CUBE_UV";break}return t}function A2(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case ha:t="ENVMAP_MODE_REFRACTION";break}return t}function C2(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case Jl:t="ENVMAP_BLENDING_MULTIPLY";break;case Ly:t="ENVMAP_BLENDING_MIX";break;case Py:t="ENVMAP_BLENDING_ADD";break}return t}function w2(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:n,maxMip:e}}function R2(s,t,e,n){const i=s.getContext(),o=e.defines;let l=e.vertexShader,c=e.fragmentShader;const h=E2(e),f=T2(e),p=A2(e),m=C2(e),g=w2(e),v=g2(e),x=v2(o),b=i.createProgram();let S,_,E=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(S=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(Ml).join(`
`),S.length>0&&(S+=`
`),_=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(Ml).join(`
`),_.length>0&&(_+=`
`)):(S=[H_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+p:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ml).join(`
`),_=[H_(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+p:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==as?"#define TONE_MAPPING":"",e.toneMapping!==as?ye.tonemapping_pars_fragment:"",e.toneMapping!==as?p2("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",ye.colorspace_pars_fragment,d2("linearToOutputTexel",e.outputColorSpace),m2(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Ml).join(`
`)),l=rm(l),l=B_(l,e),l=z_(l,e),c=rm(c),c=B_(c,e),c=z_(c,e),l=F_(l),c=F_(c),e.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,_=["#define varying in",e.glslVersion===Jp?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Jp?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const A=E+S+l,T=E+_+c,U=P_(i,i.VERTEX_SHADER,A),D=P_(i,i.FRAGMENT_SHADER,T);i.attachShader(b,U),i.attachShader(b,D),e.index0AttributeName!==void 0?i.bindAttribLocation(b,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b);function P(I){if(s.debug.checkShaderErrors){const $=i.getProgramInfoLog(b)||"",q=i.getShaderInfoLog(U)||"",K=i.getShaderInfoLog(D)||"",at=$.trim(),F=q.trim(),X=K.trim();let G=!0,nt=!0;if(i.getProgramParameter(b,i.LINK_STATUS)===!1)if(G=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,b,U,D);else{const lt=O_(i,U,"vertex"),mt=O_(i,D,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,i.VALIDATE_STATUS)+`

Material Name: `+I.name+`
Material Type: `+I.type+`

Program Info Log: `+at+`
`+lt+`
`+mt)}else at!==""?console.warn("THREE.WebGLProgram: Program Info Log:",at):(F===""||X==="")&&(nt=!1);nt&&(I.diagnostics={runnable:G,programLog:at,vertexShader:{log:F,prefix:S},fragmentShader:{log:X,prefix:_}})}i.deleteShader(U),i.deleteShader(D),z=new Vu(i,b),w=_2(i,b)}let z;this.getUniforms=function(){return z===void 0&&P(this),z};let w;this.getAttributes=function(){return w===void 0&&P(this),w};let C=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return C===!1&&(C=i.getProgramParameter(b,c2)),C},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=u2++,this.cacheKey=t,this.usedTimes=1,this.program=b,this.vertexShader=U,this.fragmentShader=D,this}let D2=0;class U2{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),o=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(o)===!1&&(l.add(o),o.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new N2(t),e.set(t,n)),n}}class N2{constructor(t){this.id=D2++,this.code=t,this.usedTimes=0}}function L2(s,t,e,n,i,o,l){const c=new Mo,h=new U2,f=new Set,p=[],m=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(w){return f.add(w),w===0?"uv":`uv${w}`}function S(w,C,I,$,q){const K=$.fog,at=q.geometry,F=w.isMeshStandardMaterial?$.environment:null,X=(w.isMeshStandardMaterial?e:t).get(w.envMap||F),G=X&&X.mapping===Co?X.image.height:null,nt=x[w.type];w.precision!==null&&(v=i.getMaxPrecision(w.precision),v!==w.precision&&console.warn("THREE.WebGLProgram.getParameters:",w.precision,"not supported, using",v,"instead."));const lt=at.morphAttributes.position||at.morphAttributes.normal||at.morphAttributes.color,mt=lt!==void 0?lt.length:0;let Nt=0;at.morphAttributes.position!==void 0&&(Nt=1),at.morphAttributes.normal!==void 0&&(Nt=2),at.morphAttributes.color!==void 0&&(Nt=3);let Jt,zt,st,Dt;if(nt){const Ee=qi[nt];Jt=Ee.vertexShader,zt=Ee.fragmentShader}else Jt=w.vertexShader,zt=w.fragmentShader,h.update(w),st=h.getVertexShaderID(w),Dt=h.getFragmentShaderID(w);const Tt=s.getRenderTarget(),jt=s.state.buffers.depth.getReversed(),Yt=q.isInstancedMesh===!0,ie=q.isBatchedMesh===!0,Be=!!w.map,re=!!w.matcap,H=!!X,pt=!!w.aoMap,ct=!!w.lightMap,vt=!!w.bumpMap,ht=!!w.normalMap,Rt=!!w.displacementMap,_t=!!w.emissiveMap,Et=!!w.metalnessMap,se=!!w.roughnessMap,ue=w.anisotropy>0,B=w.clearcoat>0,R=w.dispersion>0,J=w.iridescence>0,rt=w.sheen>0,gt=w.transmission>0,ot=ue&&!!w.anisotropyMap,Zt=B&&!!w.clearcoatMap,Ct=B&&!!w.clearcoatNormalMap,kt=B&&!!w.clearcoatRoughnessMap,Wt=J&&!!w.iridescenceMap,yt=J&&!!w.iridescenceThicknessMap,Lt=rt&&!!w.sheenColorMap,te=rt&&!!w.sheenRoughnessMap,Kt=!!w.specularMap,Pt=!!w.specularColorMap,he=!!w.specularIntensityMap,k=gt&&!!w.transmissionMap,bt=gt&&!!w.thicknessMap,wt=!!w.gradientMap,Vt=!!w.alphaMap,xt=w.alphaTest>0,ft=!!w.alphaHash,qt=!!w.extensions;let le=as;w.toneMapped&&(Tt===null||Tt.isXRRenderTarget===!0)&&(le=s.toneMapping);const Ue={shaderID:nt,shaderType:w.type,shaderName:w.name,vertexShader:Jt,fragmentShader:zt,defines:w.defines,customVertexShaderID:st,customFragmentShaderID:Dt,isRawShaderMaterial:w.isRawShaderMaterial===!0,glslVersion:w.glslVersion,precision:v,batching:ie,batchingColor:ie&&q._colorsTexture!==null,instancing:Yt,instancingColor:Yt&&q.instanceColor!==null,instancingMorph:Yt&&q.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:Tt===null?s.outputColorSpace:Tt.isXRRenderTarget===!0?Tt.texture.colorSpace:fa,alphaToCoverage:!!w.alphaToCoverage,map:Be,matcap:re,envMap:H,envMapMode:H&&X.mapping,envMapCubeUVHeight:G,aoMap:pt,lightMap:ct,bumpMap:vt,normalMap:ht,displacementMap:g&&Rt,emissiveMap:_t,normalMapObjectSpace:ht&&w.normalMapType===Yy,normalMapTangentSpace:ht&&w.normalMapType===pa,metalnessMap:Et,roughnessMap:se,anisotropy:ue,anisotropyMap:ot,clearcoat:B,clearcoatMap:Zt,clearcoatNormalMap:Ct,clearcoatRoughnessMap:kt,dispersion:R,iridescence:J,iridescenceMap:Wt,iridescenceThicknessMap:yt,sheen:rt,sheenColorMap:Lt,sheenRoughnessMap:te,specularMap:Kt,specularColorMap:Pt,specularIntensityMap:he,transmission:gt,transmissionMap:k,thicknessMap:bt,gradientMap:wt,opaque:w.transparent===!1&&w.blending===ir&&w.alphaToCoverage===!1,alphaMap:Vt,alphaTest:xt,alphaHash:ft,combine:w.combine,mapUv:Be&&b(w.map.channel),aoMapUv:pt&&b(w.aoMap.channel),lightMapUv:ct&&b(w.lightMap.channel),bumpMapUv:vt&&b(w.bumpMap.channel),normalMapUv:ht&&b(w.normalMap.channel),displacementMapUv:Rt&&b(w.displacementMap.channel),emissiveMapUv:_t&&b(w.emissiveMap.channel),metalnessMapUv:Et&&b(w.metalnessMap.channel),roughnessMapUv:se&&b(w.roughnessMap.channel),anisotropyMapUv:ot&&b(w.anisotropyMap.channel),clearcoatMapUv:Zt&&b(w.clearcoatMap.channel),clearcoatNormalMapUv:Ct&&b(w.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:kt&&b(w.clearcoatRoughnessMap.channel),iridescenceMapUv:Wt&&b(w.iridescenceMap.channel),iridescenceThicknessMapUv:yt&&b(w.iridescenceThicknessMap.channel),sheenColorMapUv:Lt&&b(w.sheenColorMap.channel),sheenRoughnessMapUv:te&&b(w.sheenRoughnessMap.channel),specularMapUv:Kt&&b(w.specularMap.channel),specularColorMapUv:Pt&&b(w.specularColorMap.channel),specularIntensityMapUv:he&&b(w.specularIntensityMap.channel),transmissionMapUv:k&&b(w.transmissionMap.channel),thicknessMapUv:bt&&b(w.thicknessMap.channel),alphaMapUv:Vt&&b(w.alphaMap.channel),vertexTangents:!!at.attributes.tangent&&(ht||ue),vertexColors:w.vertexColors,vertexAlphas:w.vertexColors===!0&&!!at.attributes.color&&at.attributes.color.itemSize===4,pointsUvs:q.isPoints===!0&&!!at.attributes.uv&&(Be||Vt),fog:!!K,useFog:w.fog===!0,fogExp2:!!K&&K.isFogExp2,flatShading:w.flatShading===!0&&w.wireframe===!1,sizeAttenuation:w.sizeAttenuation===!0,logarithmicDepthBuffer:m,reversedDepthBuffer:jt,skinning:q.isSkinnedMesh===!0,morphTargets:at.morphAttributes.position!==void 0,morphNormals:at.morphAttributes.normal!==void 0,morphColors:at.morphAttributes.color!==void 0,morphTargetsCount:mt,morphTextureStride:Nt,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numSpotLightMaps:C.spotLightMap.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numSpotLightShadowsWithMaps:C.numSpotLightShadowsWithMaps,numLightProbes:C.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:w.dithering,shadowMapEnabled:s.shadowMap.enabled&&I.length>0,shadowMapType:s.shadowMap.type,toneMapping:le,decodeVideoTexture:Be&&w.map.isVideoTexture===!0&&Ae.getTransfer(w.map.colorSpace)===Fe,decodeVideoTextureEmissive:_t&&w.emissiveMap.isVideoTexture===!0&&Ae.getTransfer(w.emissiveMap.colorSpace)===Fe,premultipliedAlpha:w.premultipliedAlpha,doubleSided:w.side===ns,flipSided:w.side===Yn,useDepthPacking:w.depthPacking>=0,depthPacking:w.depthPacking||0,index0AttributeName:w.index0AttributeName,extensionClipCullDistance:qt&&w.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(qt&&w.extensions.multiDraw===!0||ie)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:w.customProgramCacheKey()};return Ue.vertexUv1s=f.has(1),Ue.vertexUv2s=f.has(2),Ue.vertexUv3s=f.has(3),f.clear(),Ue}function _(w){const C=[];if(w.shaderID?C.push(w.shaderID):(C.push(w.customVertexShaderID),C.push(w.customFragmentShaderID)),w.defines!==void 0)for(const I in w.defines)C.push(I),C.push(w.defines[I]);return w.isRawShaderMaterial===!1&&(E(C,w),A(C,w),C.push(s.outputColorSpace)),C.push(w.customProgramCacheKey),C.join()}function E(w,C){w.push(C.precision),w.push(C.outputColorSpace),w.push(C.envMapMode),w.push(C.envMapCubeUVHeight),w.push(C.mapUv),w.push(C.alphaMapUv),w.push(C.lightMapUv),w.push(C.aoMapUv),w.push(C.bumpMapUv),w.push(C.normalMapUv),w.push(C.displacementMapUv),w.push(C.emissiveMapUv),w.push(C.metalnessMapUv),w.push(C.roughnessMapUv),w.push(C.anisotropyMapUv),w.push(C.clearcoatMapUv),w.push(C.clearcoatNormalMapUv),w.push(C.clearcoatRoughnessMapUv),w.push(C.iridescenceMapUv),w.push(C.iridescenceThicknessMapUv),w.push(C.sheenColorMapUv),w.push(C.sheenRoughnessMapUv),w.push(C.specularMapUv),w.push(C.specularColorMapUv),w.push(C.specularIntensityMapUv),w.push(C.transmissionMapUv),w.push(C.thicknessMapUv),w.push(C.combine),w.push(C.fogExp2),w.push(C.sizeAttenuation),w.push(C.morphTargetsCount),w.push(C.morphAttributeCount),w.push(C.numDirLights),w.push(C.numPointLights),w.push(C.numSpotLights),w.push(C.numSpotLightMaps),w.push(C.numHemiLights),w.push(C.numRectAreaLights),w.push(C.numDirLightShadows),w.push(C.numPointLightShadows),w.push(C.numSpotLightShadows),w.push(C.numSpotLightShadowsWithMaps),w.push(C.numLightProbes),w.push(C.shadowMapType),w.push(C.toneMapping),w.push(C.numClippingPlanes),w.push(C.numClipIntersection),w.push(C.depthPacking)}function A(w,C){c.disableAll(),C.supportsVertexTextures&&c.enable(0),C.instancing&&c.enable(1),C.instancingColor&&c.enable(2),C.instancingMorph&&c.enable(3),C.matcap&&c.enable(4),C.envMap&&c.enable(5),C.normalMapObjectSpace&&c.enable(6),C.normalMapTangentSpace&&c.enable(7),C.clearcoat&&c.enable(8),C.iridescence&&c.enable(9),C.alphaTest&&c.enable(10),C.vertexColors&&c.enable(11),C.vertexAlphas&&c.enable(12),C.vertexUv1s&&c.enable(13),C.vertexUv2s&&c.enable(14),C.vertexUv3s&&c.enable(15),C.vertexTangents&&c.enable(16),C.anisotropy&&c.enable(17),C.alphaHash&&c.enable(18),C.batching&&c.enable(19),C.dispersion&&c.enable(20),C.batchingColor&&c.enable(21),C.gradientMap&&c.enable(22),w.push(c.mask),c.disableAll(),C.fog&&c.enable(0),C.useFog&&c.enable(1),C.flatShading&&c.enable(2),C.logarithmicDepthBuffer&&c.enable(3),C.reversedDepthBuffer&&c.enable(4),C.skinning&&c.enable(5),C.morphTargets&&c.enable(6),C.morphNormals&&c.enable(7),C.morphColors&&c.enable(8),C.premultipliedAlpha&&c.enable(9),C.shadowMapEnabled&&c.enable(10),C.doubleSided&&c.enable(11),C.flipSided&&c.enable(12),C.useDepthPacking&&c.enable(13),C.dithering&&c.enable(14),C.transmission&&c.enable(15),C.sheen&&c.enable(16),C.opaque&&c.enable(17),C.pointsUvs&&c.enable(18),C.decodeVideoTexture&&c.enable(19),C.decodeVideoTextureEmissive&&c.enable(20),C.alphaToCoverage&&c.enable(21),w.push(c.mask)}function T(w){const C=x[w.type];let I;if(C){const $=qi[C];I=rx.clone($.uniforms)}else I=w.uniforms;return I}function U(w,C){let I;for(let $=0,q=p.length;$<q;$++){const K=p[$];if(K.cacheKey===C){I=K,++I.usedTimes;break}}return I===void 0&&(I=new R2(s,C,w,o),p.push(I)),I}function D(w){if(--w.usedTimes===0){const C=p.indexOf(w);p[C]=p[p.length-1],p.pop(),w.destroy()}}function P(w){h.remove(w)}function z(){h.dispose()}return{getParameters:S,getProgramCacheKey:_,getUniforms:T,acquireProgram:U,releaseProgram:D,releaseShaderCache:P,programs:p,dispose:z}}function P2(){let s=new WeakMap;function t(l){return s.has(l)}function e(l){let c=s.get(l);return c===void 0&&(c={},s.set(l,c)),c}function n(l){s.delete(l)}function i(l,c,h){s.get(l)[c]=h}function o(){s=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:o}}function I2(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function V_(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function G_(){const s=[];let t=0;const e=[],n=[],i=[];function o(){t=0,e.length=0,n.length=0,i.length=0}function l(m,g,v,x,b,S){let _=s[t];return _===void 0?(_={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:b,group:S},s[t]=_):(_.id=m.id,_.object=m,_.geometry=g,_.material=v,_.groupOrder=x,_.renderOrder=m.renderOrder,_.z=b,_.group=S),t++,_}function c(m,g,v,x,b,S){const _=l(m,g,v,x,b,S);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):e.push(_)}function h(m,g,v,x,b,S){const _=l(m,g,v,x,b,S);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):e.unshift(_)}function f(m,g){e.length>1&&e.sort(m||I2),n.length>1&&n.sort(g||V_),i.length>1&&i.sort(g||V_)}function p(){for(let m=t,g=s.length;m<g;m++){const v=s[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:e,transmissive:n,transparent:i,init:o,push:c,unshift:h,finish:p,sort:f}}function O2(){let s=new WeakMap;function t(n,i){const o=s.get(n);let l;return o===void 0?(l=new G_,s.set(n,[l])):i>=o.length?(l=new G_,o.push(l)):l=o[i],l}function e(){s=new WeakMap}return{get:t,dispose:e}}function B2(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new O,color:new Bt};break;case"SpotLight":e={position:new O,direction:new O,color:new Bt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new O,color:new Bt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new O,skyColor:new Bt,groundColor:new Bt};break;case"RectAreaLight":e={color:new Bt,position:new O,halfWidth:new O,halfHeight:new O};break}return s[t.id]=e,e}}}function z2(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new dt,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let F2=0;function H2(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function V2(s){const t=new B2,e=z2(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new O);const i=new O,o=new ce,l=new ce;function c(f){let p=0,m=0,g=0;for(let w=0;w<9;w++)n.probe[w].set(0,0,0);let v=0,x=0,b=0,S=0,_=0,E=0,A=0,T=0,U=0,D=0,P=0;f.sort(H2);for(let w=0,C=f.length;w<C;w++){const I=f[w],$=I.color,q=I.intensity,K=I.distance,at=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)p+=$.r*q,m+=$.g*q,g+=$.b*q;else if(I.isLightProbe){for(let F=0;F<9;F++)n.probe[F].addScaledVector(I.sh.coefficients[F],q);P++}else if(I.isDirectionalLight){const F=t.get(I);if(F.color.copy(I.color).multiplyScalar(I.intensity),I.castShadow){const X=I.shadow,G=e.get(I);G.shadowIntensity=X.intensity,G.shadowBias=X.bias,G.shadowNormalBias=X.normalBias,G.shadowRadius=X.radius,G.shadowMapSize=X.mapSize,n.directionalShadow[v]=G,n.directionalShadowMap[v]=at,n.directionalShadowMatrix[v]=I.shadow.matrix,E++}n.directional[v]=F,v++}else if(I.isSpotLight){const F=t.get(I);F.position.setFromMatrixPosition(I.matrixWorld),F.color.copy($).multiplyScalar(q),F.distance=K,F.coneCos=Math.cos(I.angle),F.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),F.decay=I.decay,n.spot[b]=F;const X=I.shadow;if(I.map&&(n.spotLightMap[U]=I.map,U++,X.updateMatrices(I),I.castShadow&&D++),n.spotLightMatrix[b]=X.matrix,I.castShadow){const G=e.get(I);G.shadowIntensity=X.intensity,G.shadowBias=X.bias,G.shadowNormalBias=X.normalBias,G.shadowRadius=X.radius,G.shadowMapSize=X.mapSize,n.spotShadow[b]=G,n.spotShadowMap[b]=at,T++}b++}else if(I.isRectAreaLight){const F=t.get(I);F.color.copy($).multiplyScalar(q),F.halfWidth.set(I.width*.5,0,0),F.halfHeight.set(0,I.height*.5,0),n.rectArea[S]=F,S++}else if(I.isPointLight){const F=t.get(I);if(F.color.copy(I.color).multiplyScalar(I.intensity),F.distance=I.distance,F.decay=I.decay,I.castShadow){const X=I.shadow,G=e.get(I);G.shadowIntensity=X.intensity,G.shadowBias=X.bias,G.shadowNormalBias=X.normalBias,G.shadowRadius=X.radius,G.shadowMapSize=X.mapSize,G.shadowCameraNear=X.camera.near,G.shadowCameraFar=X.camera.far,n.pointShadow[x]=G,n.pointShadowMap[x]=at,n.pointShadowMatrix[x]=I.shadow.matrix,A++}n.point[x]=F,x++}else if(I.isHemisphereLight){const F=t.get(I);F.skyColor.copy(I.color).multiplyScalar(q),F.groundColor.copy(I.groundColor).multiplyScalar(q),n.hemi[_]=F,_++}}S>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=It.LTC_FLOAT_1,n.rectAreaLTC2=It.LTC_FLOAT_2):(n.rectAreaLTC1=It.LTC_HALF_1,n.rectAreaLTC2=It.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const z=n.hash;(z.directionalLength!==v||z.pointLength!==x||z.spotLength!==b||z.rectAreaLength!==S||z.hemiLength!==_||z.numDirectionalShadows!==E||z.numPointShadows!==A||z.numSpotShadows!==T||z.numSpotMaps!==U||z.numLightProbes!==P)&&(n.directional.length=v,n.spot.length=b,n.rectArea.length=S,n.point.length=x,n.hemi.length=_,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=T+U-D,n.spotLightMap.length=U,n.numSpotLightShadowsWithMaps=D,n.numLightProbes=P,z.directionalLength=v,z.pointLength=x,z.spotLength=b,z.rectAreaLength=S,z.hemiLength=_,z.numDirectionalShadows=E,z.numPointShadows=A,z.numSpotShadows=T,z.numSpotMaps=U,z.numLightProbes=P,n.version=F2++)}function h(f,p){let m=0,g=0,v=0,x=0,b=0;const S=p.matrixWorldInverse;for(let _=0,E=f.length;_<E;_++){const A=f[_];if(A.isDirectionalLight){const T=n.directional[m];T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),m++}else if(A.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),v++}else if(A.isRectAreaLight){const T=n.rectArea[x];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),l.identity(),o.copy(A.matrixWorld),o.premultiply(S),l.extractRotation(o),T.halfWidth.set(A.width*.5,0,0),T.halfHeight.set(0,A.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),x++}else if(A.isPointLight){const T=n.point[g];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),g++}else if(A.isHemisphereLight){const T=n.hemi[b];T.direction.setFromMatrixPosition(A.matrixWorld),T.direction.transformDirection(S),b++}}}return{setup:c,setupView:h,state:n}}function k_(s){const t=new V2(s),e=[],n=[];function i(p){f.camera=p,e.length=0,n.length=0}function o(p){e.push(p)}function l(p){n.push(p)}function c(){t.setup(e)}function h(p){t.setupView(e,p)}const f={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:h,pushLight:o,pushShadow:l}}function G2(s){let t=new WeakMap;function e(i,o=0){const l=t.get(i);let c;return l===void 0?(c=new k_(s),t.set(i,[c])):o>=l.length?(c=new k_(s),l.push(c)):c=l[o],c}function n(){t=new WeakMap}return{get:e,dispose:n}}const k2=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,W2=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function X2(s,t,e){let n=new Do;const i=new dt,o=new dt,l=new Re,c=new Vm({depthPacking:qy}),h=new Gm,f={},p=e.maxTextureSize,m={[Ps]:Yn,[Yn]:Ps,[ns]:ns},g=new Zi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new dt},radius:{value:4}},vertexShader:k2,fragmentShader:W2}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new _e;x.setAttribute("position",new ke(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new un(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Ph;let _=this.type;this.render=function(D,P,z){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||D.length===0)return;const w=s.getRenderTarget(),C=s.getActiveCubeFace(),I=s.getActiveMipmapLevel(),$=s.state;$.setBlending(Ns),$.buffers.depth.getReversed()?$.buffers.color.setClear(0,0,0,0):$.buffers.color.setClear(1,1,1,1),$.buffers.depth.setTest(!0),$.setScissorTest(!1);const q=_!==Xi&&this.type===Xi,K=_===Xi&&this.type!==Xi;for(let at=0,F=D.length;at<F;at++){const X=D[at],G=X.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",X,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;i.copy(G.mapSize);const nt=G.getFrameExtents();if(i.multiply(nt),o.copy(G.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(o.x=Math.floor(p/nt.x),i.x=o.x*nt.x,G.mapSize.x=o.x),i.y>p&&(o.y=Math.floor(p/nt.y),i.y=o.y*nt.y,G.mapSize.y=o.y)),G.map===null||q===!0||K===!0){const mt=this.type!==Xi?{minFilter:Tn,magFilter:Tn}:{};G.map!==null&&G.map.dispose(),G.map=new os(i.x,i.y,mt),G.map.texture.name=X.name+".shadowMap",G.camera.updateProjectionMatrix()}s.setRenderTarget(G.map),s.clear();const lt=G.getViewportCount();for(let mt=0;mt<lt;mt++){const Nt=G.getViewport(mt);l.set(o.x*Nt.x,o.y*Nt.y,o.x*Nt.z,o.y*Nt.w),$.viewport(l),G.updateMatrices(X,mt),n=G.getFrustum(),T(P,z,G.camera,X,this.type)}G.isPointLightShadow!==!0&&this.type===Xi&&E(G,z),G.needsUpdate=!1}_=this.type,S.needsUpdate=!1,s.setRenderTarget(w,C,I)};function E(D,P){const z=t.update(b);g.defines.VSM_SAMPLES!==D.blurSamples&&(g.defines.VSM_SAMPLES=D.blurSamples,v.defines.VSM_SAMPLES=D.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),D.mapPass===null&&(D.mapPass=new os(i.x,i.y)),g.uniforms.shadow_pass.value=D.map.texture,g.uniforms.resolution.value=D.mapSize,g.uniforms.radius.value=D.radius,s.setRenderTarget(D.mapPass),s.clear(),s.renderBufferDirect(P,null,z,g,b,null),v.uniforms.shadow_pass.value=D.mapPass.texture,v.uniforms.resolution.value=D.mapSize,v.uniforms.radius.value=D.radius,s.setRenderTarget(D.map),s.clear(),s.renderBufferDirect(P,null,z,v,b,null)}function A(D,P,z,w){let C=null;const I=z.isPointLight===!0?D.customDistanceMaterial:D.customDepthMaterial;if(I!==void 0)C=I;else if(C=z.isPointLight===!0?h:c,s.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0||P.alphaToCoverage===!0){const $=C.uuid,q=P.uuid;let K=f[$];K===void 0&&(K={},f[$]=K);let at=K[q];at===void 0&&(at=C.clone(),K[q]=at,P.addEventListener("dispose",U)),C=at}if(C.visible=P.visible,C.wireframe=P.wireframe,w===Xi?C.side=P.shadowSide!==null?P.shadowSide:P.side:C.side=P.shadowSide!==null?P.shadowSide:m[P.side],C.alphaMap=P.alphaMap,C.alphaTest=P.alphaToCoverage===!0?.5:P.alphaTest,C.map=P.map,C.clipShadows=P.clipShadows,C.clippingPlanes=P.clippingPlanes,C.clipIntersection=P.clipIntersection,C.displacementMap=P.displacementMap,C.displacementScale=P.displacementScale,C.displacementBias=P.displacementBias,C.wireframeLinewidth=P.wireframeLinewidth,C.linewidth=P.linewidth,z.isPointLight===!0&&C.isMeshDistanceMaterial===!0){const $=s.properties.get(C);$.light=z}return C}function T(D,P,z,w,C){if(D.visible===!1)return;if(D.layers.test(P.layers)&&(D.isMesh||D.isLine||D.isPoints)&&(D.castShadow||D.receiveShadow&&C===Xi)&&(!D.frustumCulled||n.intersectsObject(D))){D.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,D.matrixWorld);const q=t.update(D),K=D.material;if(Array.isArray(K)){const at=q.groups;for(let F=0,X=at.length;F<X;F++){const G=at[F],nt=K[G.materialIndex];if(nt&&nt.visible){const lt=A(D,nt,w,C);D.onBeforeShadow(s,D,P,z,q,lt,G),s.renderBufferDirect(z,null,q,lt,D,G),D.onAfterShadow(s,D,P,z,q,lt,G)}}}else if(K.visible){const at=A(D,K,w,C);D.onBeforeShadow(s,D,P,z,q,at,null),s.renderBufferDirect(z,null,q,at,D,null),D.onAfterShadow(s,D,P,z,q,at,null)}}const $=D.children;for(let q=0,K=$.length;q<K;q++)T($[q],P,z,w,C)}function U(D){D.target.removeEventListener("dispose",U);for(const z in f){const w=f[z],C=D.target.uuid;C in w&&(w[C].dispose(),delete w[C])}}}const q2={[Xu]:qu,[Yu]:ju,[Zu]:Ju,[rr]:Ku,[qu]:Xu,[ju]:Yu,[Ju]:Zu,[Ku]:rr};function Y2(s,t){function e(){let k=!1;const bt=new Re;let wt=null;const Vt=new Re(0,0,0,0);return{setMask:function(xt){wt!==xt&&!k&&(s.colorMask(xt,xt,xt,xt),wt=xt)},setLocked:function(xt){k=xt},setClear:function(xt,ft,qt,le,Ue){Ue===!0&&(xt*=le,ft*=le,qt*=le),bt.set(xt,ft,qt,le),Vt.equals(bt)===!1&&(s.clearColor(xt,ft,qt,le),Vt.copy(bt))},reset:function(){k=!1,wt=null,Vt.set(-1,0,0,0)}}}function n(){let k=!1,bt=!1,wt=null,Vt=null,xt=null;return{setReversed:function(ft){if(bt!==ft){const qt=t.get("EXT_clip_control");ft?qt.clipControlEXT(qt.LOWER_LEFT_EXT,qt.ZERO_TO_ONE_EXT):qt.clipControlEXT(qt.LOWER_LEFT_EXT,qt.NEGATIVE_ONE_TO_ONE_EXT),bt=ft;const le=xt;xt=null,this.setClear(le)}},getReversed:function(){return bt},setTest:function(ft){ft?Tt(s.DEPTH_TEST):jt(s.DEPTH_TEST)},setMask:function(ft){wt!==ft&&!k&&(s.depthMask(ft),wt=ft)},setFunc:function(ft){if(bt&&(ft=q2[ft]),Vt!==ft){switch(ft){case Xu:s.depthFunc(s.NEVER);break;case qu:s.depthFunc(s.ALWAYS);break;case Yu:s.depthFunc(s.LESS);break;case rr:s.depthFunc(s.LEQUAL);break;case Zu:s.depthFunc(s.EQUAL);break;case Ku:s.depthFunc(s.GEQUAL);break;case ju:s.depthFunc(s.GREATER);break;case Ju:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Vt=ft}},setLocked:function(ft){k=ft},setClear:function(ft){xt!==ft&&(bt&&(ft=1-ft),s.clearDepth(ft),xt=ft)},reset:function(){k=!1,wt=null,Vt=null,xt=null,bt=!1}}}function i(){let k=!1,bt=null,wt=null,Vt=null,xt=null,ft=null,qt=null,le=null,Ue=null;return{setTest:function(Ee){k||(Ee?Tt(s.STENCIL_TEST):jt(s.STENCIL_TEST))},setMask:function(Ee){bt!==Ee&&!k&&(s.stencilMask(Ee),bt=Ee)},setFunc:function(Ee,Mi,ai){(wt!==Ee||Vt!==Mi||xt!==ai)&&(s.stencilFunc(Ee,Mi,ai),wt=Ee,Vt=Mi,xt=ai)},setOp:function(Ee,Mi,ai){(ft!==Ee||qt!==Mi||le!==ai)&&(s.stencilOp(Ee,Mi,ai),ft=Ee,qt=Mi,le=ai)},setLocked:function(Ee){k=Ee},setClear:function(Ee){Ue!==Ee&&(s.clearStencil(Ee),Ue=Ee)},reset:function(){k=!1,bt=null,wt=null,Vt=null,xt=null,ft=null,qt=null,le=null,Ue=null}}}const o=new e,l=new n,c=new i,h=new WeakMap,f=new WeakMap;let p={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,_=null,E=null,A=null,T=null,U=null,D=null,P=new Bt(0,0,0),z=0,w=!1,C=null,I=null,$=null,q=null,K=null;const at=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let F=!1,X=0;const G=s.getParameter(s.VERSION);G.indexOf("WebGL")!==-1?(X=parseFloat(/^WebGL (\d)/.exec(G)[1]),F=X>=1):G.indexOf("OpenGL ES")!==-1&&(X=parseFloat(/^OpenGL ES (\d)/.exec(G)[1]),F=X>=2);let nt=null,lt={};const mt=s.getParameter(s.SCISSOR_BOX),Nt=s.getParameter(s.VIEWPORT),Jt=new Re().fromArray(mt),zt=new Re().fromArray(Nt);function st(k,bt,wt,Vt){const xt=new Uint8Array(4),ft=s.createTexture();s.bindTexture(k,ft),s.texParameteri(k,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(k,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let qt=0;qt<wt;qt++)k===s.TEXTURE_3D||k===s.TEXTURE_2D_ARRAY?s.texImage3D(bt,0,s.RGBA,1,1,Vt,0,s.RGBA,s.UNSIGNED_BYTE,xt):s.texImage2D(bt+qt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,xt);return ft}const Dt={};Dt[s.TEXTURE_2D]=st(s.TEXTURE_2D,s.TEXTURE_2D,1),Dt[s.TEXTURE_CUBE_MAP]=st(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),Dt[s.TEXTURE_2D_ARRAY]=st(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),Dt[s.TEXTURE_3D]=st(s.TEXTURE_3D,s.TEXTURE_3D,1,1),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Tt(s.DEPTH_TEST),l.setFunc(rr),vt(!1),ht(Xp),Tt(s.CULL_FACE),pt(Ns);function Tt(k){p[k]!==!0&&(s.enable(k),p[k]=!0)}function jt(k){p[k]!==!1&&(s.disable(k),p[k]=!1)}function Yt(k,bt){return m[k]!==bt?(s.bindFramebuffer(k,bt),m[k]=bt,k===s.DRAW_FRAMEBUFFER&&(m[s.FRAMEBUFFER]=bt),k===s.FRAMEBUFFER&&(m[s.DRAW_FRAMEBUFFER]=bt),!0):!1}function ie(k,bt){let wt=v,Vt=!1;if(k){wt=g.get(bt),wt===void 0&&(wt=[],g.set(bt,wt));const xt=k.textures;if(wt.length!==xt.length||wt[0]!==s.COLOR_ATTACHMENT0){for(let ft=0,qt=xt.length;ft<qt;ft++)wt[ft]=s.COLOR_ATTACHMENT0+ft;wt.length=xt.length,Vt=!0}}else wt[0]!==s.BACK&&(wt[0]=s.BACK,Vt=!0);Vt&&s.drawBuffers(wt)}function Be(k){return x!==k?(s.useProgram(k),x=k,!0):!1}const re={[la]:s.FUNC_ADD,[gy]:s.FUNC_SUBTRACT,[vy]:s.FUNC_REVERSE_SUBTRACT};re[_y]=s.MIN,re[yy]=s.MAX;const H={[xy]:s.ZERO,[Sy]:s.ONE,[My]:s.SRC_COLOR,[ku]:s.SRC_ALPHA,[wy]:s.SRC_ALPHA_SATURATE,[Ay]:s.DST_COLOR,[Ey]:s.DST_ALPHA,[by]:s.ONE_MINUS_SRC_COLOR,[Wu]:s.ONE_MINUS_SRC_ALPHA,[Cy]:s.ONE_MINUS_DST_COLOR,[Ty]:s.ONE_MINUS_DST_ALPHA,[Ry]:s.CONSTANT_COLOR,[Dy]:s.ONE_MINUS_CONSTANT_COLOR,[Uy]:s.CONSTANT_ALPHA,[Ny]:s.ONE_MINUS_CONSTANT_ALPHA};function pt(k,bt,wt,Vt,xt,ft,qt,le,Ue,Ee){if(k===Ns){b===!0&&(jt(s.BLEND),b=!1);return}if(b===!1&&(Tt(s.BLEND),b=!0),k!==my){if(k!==S||Ee!==w){if((_!==la||T!==la)&&(s.blendEquation(s.FUNC_ADD),_=la,T=la),Ee)switch(k){case ir:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case qp:s.blendFunc(s.ONE,s.ONE);break;case Yp:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Zp:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}else switch(k){case ir:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case qp:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case Yp:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Zp:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}E=null,A=null,U=null,D=null,P.set(0,0,0),z=0,S=k,w=Ee}return}xt=xt||bt,ft=ft||wt,qt=qt||Vt,(bt!==_||xt!==T)&&(s.blendEquationSeparate(re[bt],re[xt]),_=bt,T=xt),(wt!==E||Vt!==A||ft!==U||qt!==D)&&(s.blendFuncSeparate(H[wt],H[Vt],H[ft],H[qt]),E=wt,A=Vt,U=ft,D=qt),(le.equals(P)===!1||Ue!==z)&&(s.blendColor(le.r,le.g,le.b,Ue),P.copy(le),z=Ue),S=k,w=!1}function ct(k,bt){k.side===ns?jt(s.CULL_FACE):Tt(s.CULL_FACE);let wt=k.side===Yn;bt&&(wt=!wt),vt(wt),k.blending===ir&&k.transparent===!1?pt(Ns):pt(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.blendColor,k.blendAlpha,k.premultipliedAlpha),l.setFunc(k.depthFunc),l.setTest(k.depthTest),l.setMask(k.depthWrite),o.setMask(k.colorWrite);const Vt=k.stencilWrite;c.setTest(Vt),Vt&&(c.setMask(k.stencilWriteMask),c.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),c.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),_t(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),k.alphaToCoverage===!0?Tt(s.SAMPLE_ALPHA_TO_COVERAGE):jt(s.SAMPLE_ALPHA_TO_COVERAGE)}function vt(k){C!==k&&(k?s.frontFace(s.CW):s.frontFace(s.CCW),C=k)}function ht(k){k!==fy?(Tt(s.CULL_FACE),k!==I&&(k===Xp?s.cullFace(s.BACK):k===dy?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):jt(s.CULL_FACE),I=k}function Rt(k){k!==$&&(F&&s.lineWidth(k),$=k)}function _t(k,bt,wt){k?(Tt(s.POLYGON_OFFSET_FILL),(q!==bt||K!==wt)&&(s.polygonOffset(bt,wt),q=bt,K=wt)):jt(s.POLYGON_OFFSET_FILL)}function Et(k){k?Tt(s.SCISSOR_TEST):jt(s.SCISSOR_TEST)}function se(k){k===void 0&&(k=s.TEXTURE0+at-1),nt!==k&&(s.activeTexture(k),nt=k)}function ue(k,bt,wt){wt===void 0&&(nt===null?wt=s.TEXTURE0+at-1:wt=nt);let Vt=lt[wt];Vt===void 0&&(Vt={type:void 0,texture:void 0},lt[wt]=Vt),(Vt.type!==k||Vt.texture!==bt)&&(nt!==wt&&(s.activeTexture(wt),nt=wt),s.bindTexture(k,bt||Dt[k]),Vt.type=k,Vt.texture=bt)}function B(){const k=lt[nt];k!==void 0&&k.type!==void 0&&(s.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)}function R(){try{s.compressedTexImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function J(){try{s.compressedTexImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function rt(){try{s.texSubImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function gt(){try{s.texSubImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ot(){try{s.compressedTexSubImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Zt(){try{s.compressedTexSubImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ct(){try{s.texStorage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function kt(){try{s.texStorage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Wt(){try{s.texImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function yt(){try{s.texImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Lt(k){Jt.equals(k)===!1&&(s.scissor(k.x,k.y,k.z,k.w),Jt.copy(k))}function te(k){zt.equals(k)===!1&&(s.viewport(k.x,k.y,k.z,k.w),zt.copy(k))}function Kt(k,bt){let wt=f.get(bt);wt===void 0&&(wt=new WeakMap,f.set(bt,wt));let Vt=wt.get(k);Vt===void 0&&(Vt=s.getUniformBlockIndex(bt,k.name),wt.set(k,Vt))}function Pt(k,bt){const Vt=f.get(bt).get(k);h.get(bt)!==Vt&&(s.uniformBlockBinding(bt,Vt,k.__bindingPointIndex),h.set(bt,Vt))}function he(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),l.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},nt=null,lt={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,_=null,E=null,A=null,T=null,U=null,D=null,P=new Bt(0,0,0),z=0,w=!1,C=null,I=null,$=null,q=null,K=null,Jt.set(0,0,s.canvas.width,s.canvas.height),zt.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:Tt,disable:jt,bindFramebuffer:Yt,drawBuffers:ie,useProgram:Be,setBlending:pt,setMaterial:ct,setFlipSided:vt,setCullFace:ht,setLineWidth:Rt,setPolygonOffset:_t,setScissorTest:Et,activeTexture:se,bindTexture:ue,unbindTexture:B,compressedTexImage2D:R,compressedTexImage3D:J,texImage2D:Wt,texImage3D:yt,updateUBOMapping:Kt,uniformBlockBinding:Pt,texStorage2D:Ct,texStorage3D:kt,texSubImage2D:rt,texSubImage3D:gt,compressedTexSubImage2D:ot,compressedTexSubImage3D:Zt,scissor:Lt,viewport:te,reset:he}}function Z2(s,t,e,n,i,o,l){const c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new dt,p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(B,R){return v?new OffscreenCanvas(B,R):Gl("canvas")}function b(B,R,J){let rt=1;const gt=ue(B);if((gt.width>J||gt.height>J)&&(rt=J/Math.max(gt.width,gt.height)),rt<1)if(typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&B instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&B instanceof ImageBitmap||typeof VideoFrame<"u"&&B instanceof VideoFrame){const ot=Math.floor(rt*gt.width),Zt=Math.floor(rt*gt.height);m===void 0&&(m=x(ot,Zt));const Ct=R?x(ot,Zt):m;return Ct.width=ot,Ct.height=Zt,Ct.getContext("2d").drawImage(B,0,0,ot,Zt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+gt.width+"x"+gt.height+") to ("+ot+"x"+Zt+")."),Ct}else return"data"in B&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+gt.width+"x"+gt.height+")."),B;return B}function S(B){return B.generateMipmaps}function _(B){s.generateMipmap(B)}function E(B){return B.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:B.isWebGL3DRenderTarget?s.TEXTURE_3D:B.isWebGLArrayRenderTarget||B.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function A(B,R,J,rt,gt=!1){if(B!==null){if(s[B]!==void 0)return s[B];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+B+"'")}let ot=R;if(R===s.RED&&(J===s.FLOAT&&(ot=s.R32F),J===s.HALF_FLOAT&&(ot=s.R16F),J===s.UNSIGNED_BYTE&&(ot=s.R8)),R===s.RED_INTEGER&&(J===s.UNSIGNED_BYTE&&(ot=s.R8UI),J===s.UNSIGNED_SHORT&&(ot=s.R16UI),J===s.UNSIGNED_INT&&(ot=s.R32UI),J===s.BYTE&&(ot=s.R8I),J===s.SHORT&&(ot=s.R16I),J===s.INT&&(ot=s.R32I)),R===s.RG&&(J===s.FLOAT&&(ot=s.RG32F),J===s.HALF_FLOAT&&(ot=s.RG16F),J===s.UNSIGNED_BYTE&&(ot=s.RG8)),R===s.RG_INTEGER&&(J===s.UNSIGNED_BYTE&&(ot=s.RG8UI),J===s.UNSIGNED_SHORT&&(ot=s.RG16UI),J===s.UNSIGNED_INT&&(ot=s.RG32UI),J===s.BYTE&&(ot=s.RG8I),J===s.SHORT&&(ot=s.RG16I),J===s.INT&&(ot=s.RG32I)),R===s.RGB_INTEGER&&(J===s.UNSIGNED_BYTE&&(ot=s.RGB8UI),J===s.UNSIGNED_SHORT&&(ot=s.RGB16UI),J===s.UNSIGNED_INT&&(ot=s.RGB32UI),J===s.BYTE&&(ot=s.RGB8I),J===s.SHORT&&(ot=s.RGB16I),J===s.INT&&(ot=s.RGB32I)),R===s.RGBA_INTEGER&&(J===s.UNSIGNED_BYTE&&(ot=s.RGBA8UI),J===s.UNSIGNED_SHORT&&(ot=s.RGBA16UI),J===s.UNSIGNED_INT&&(ot=s.RGBA32UI),J===s.BYTE&&(ot=s.RGBA8I),J===s.SHORT&&(ot=s.RGBA16I),J===s.INT&&(ot=s.RGBA32I)),R===s.RGB&&J===s.UNSIGNED_INT_5_9_9_9_REV&&(ot=s.RGB9_E5),R===s.RGBA){const Zt=gt?Hl:Ae.getTransfer(rt);J===s.FLOAT&&(ot=s.RGBA32F),J===s.HALF_FLOAT&&(ot=s.RGBA16F),J===s.UNSIGNED_BYTE&&(ot=Zt===Fe?s.SRGB8_ALPHA8:s.RGBA8),J===s.UNSIGNED_SHORT_4_4_4_4&&(ot=s.RGBA4),J===s.UNSIGNED_SHORT_5_5_5_1&&(ot=s.RGB5_A1)}return(ot===s.R16F||ot===s.R32F||ot===s.RG16F||ot===s.RG32F||ot===s.RGBA16F||ot===s.RGBA32F)&&t.get("EXT_color_buffer_float"),ot}function T(B,R){let J;return B?R===null||R===Os||R===vo?J=s.DEPTH24_STENCIL8:R===ni?J=s.DEPTH32F_STENCIL8:R===go&&(J=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===Os||R===vo?J=s.DEPTH_COMPONENT24:R===ni?J=s.DEPTH_COMPONENT32F:R===go&&(J=s.DEPTH_COMPONENT16),J}function U(B,R){return S(B)===!0||B.isFramebufferTexture&&B.minFilter!==Tn&&B.minFilter!==fn?Math.log2(Math.max(R.width,R.height))+1:B.mipmaps!==void 0&&B.mipmaps.length>0?B.mipmaps.length:B.isCompressedTexture&&Array.isArray(B.image)?R.mipmaps.length:1}function D(B){const R=B.target;R.removeEventListener("dispose",D),z(R),R.isVideoTexture&&p.delete(R)}function P(B){const R=B.target;R.removeEventListener("dispose",P),C(R)}function z(B){const R=n.get(B);if(R.__webglInit===void 0)return;const J=B.source,rt=g.get(J);if(rt){const gt=rt[R.__cacheKey];gt.usedTimes--,gt.usedTimes===0&&w(B),Object.keys(rt).length===0&&g.delete(J)}n.remove(B)}function w(B){const R=n.get(B);s.deleteTexture(R.__webglTexture);const J=B.source,rt=g.get(J);delete rt[R.__cacheKey],l.memory.textures--}function C(B){const R=n.get(B);if(B.depthTexture&&(B.depthTexture.dispose(),n.remove(B.depthTexture)),B.isWebGLCubeRenderTarget)for(let rt=0;rt<6;rt++){if(Array.isArray(R.__webglFramebuffer[rt]))for(let gt=0;gt<R.__webglFramebuffer[rt].length;gt++)s.deleteFramebuffer(R.__webglFramebuffer[rt][gt]);else s.deleteFramebuffer(R.__webglFramebuffer[rt]);R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer[rt])}else{if(Array.isArray(R.__webglFramebuffer))for(let rt=0;rt<R.__webglFramebuffer.length;rt++)s.deleteFramebuffer(R.__webglFramebuffer[rt]);else s.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&s.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let rt=0;rt<R.__webglColorRenderbuffer.length;rt++)R.__webglColorRenderbuffer[rt]&&s.deleteRenderbuffer(R.__webglColorRenderbuffer[rt]);R.__webglDepthRenderbuffer&&s.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const J=B.textures;for(let rt=0,gt=J.length;rt<gt;rt++){const ot=n.get(J[rt]);ot.__webglTexture&&(s.deleteTexture(ot.__webglTexture),l.memory.textures--),n.remove(J[rt])}n.remove(B)}let I=0;function $(){I=0}function q(){const B=I;return B>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+B+" texture units while this GPU supports only "+i.maxTextures),I+=1,B}function K(B){const R=[];return R.push(B.wrapS),R.push(B.wrapT),R.push(B.wrapR||0),R.push(B.magFilter),R.push(B.minFilter),R.push(B.anisotropy),R.push(B.internalFormat),R.push(B.format),R.push(B.type),R.push(B.generateMipmaps),R.push(B.premultiplyAlpha),R.push(B.flipY),R.push(B.unpackAlignment),R.push(B.colorSpace),R.join()}function at(B,R){const J=n.get(B);if(B.isVideoTexture&&Et(B),B.isRenderTargetTexture===!1&&B.isExternalTexture!==!0&&B.version>0&&J.__version!==B.version){const rt=B.image;if(rt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(rt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Dt(J,B,R);return}}else B.isExternalTexture&&(J.__webglTexture=B.sourceTexture?B.sourceTexture:null);e.bindTexture(s.TEXTURE_2D,J.__webglTexture,s.TEXTURE0+R)}function F(B,R){const J=n.get(B);if(B.isRenderTargetTexture===!1&&B.version>0&&J.__version!==B.version){Dt(J,B,R);return}e.bindTexture(s.TEXTURE_2D_ARRAY,J.__webglTexture,s.TEXTURE0+R)}function X(B,R){const J=n.get(B);if(B.isRenderTargetTexture===!1&&B.version>0&&J.__version!==B.version){Dt(J,B,R);return}e.bindTexture(s.TEXTURE_3D,J.__webglTexture,s.TEXTURE0+R)}function G(B,R){const J=n.get(B);if(B.version>0&&J.__version!==B.version){Tt(J,B,R);return}e.bindTexture(s.TEXTURE_CUBE_MAP,J.__webglTexture,s.TEXTURE0+R)}const nt={[Ol]:s.REPEAT,[Li]:s.CLAMP_TO_EDGE,[Bl]:s.MIRRORED_REPEAT},lt={[Tn]:s.NEAREST,[mm]:s.NEAREST_MIPMAP_NEAREST,[co]:s.NEAREST_MIPMAP_LINEAR,[fn]:s.LINEAR,[El]:s.LINEAR_MIPMAP_NEAREST,[is]:s.LINEAR_MIPMAP_LINEAR},mt={[Zy]:s.NEVER,[tx]:s.ALWAYS,[Ky]:s.LESS,[Em]:s.LEQUAL,[jy]:s.EQUAL,[$y]:s.GEQUAL,[Jy]:s.GREATER,[Qy]:s.NOTEQUAL};function Nt(B,R){if(R.type===ni&&t.has("OES_texture_float_linear")===!1&&(R.magFilter===fn||R.magFilter===El||R.magFilter===co||R.magFilter===is||R.minFilter===fn||R.minFilter===El||R.minFilter===co||R.minFilter===is)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(B,s.TEXTURE_WRAP_S,nt[R.wrapS]),s.texParameteri(B,s.TEXTURE_WRAP_T,nt[R.wrapT]),(B===s.TEXTURE_3D||B===s.TEXTURE_2D_ARRAY)&&s.texParameteri(B,s.TEXTURE_WRAP_R,nt[R.wrapR]),s.texParameteri(B,s.TEXTURE_MAG_FILTER,lt[R.magFilter]),s.texParameteri(B,s.TEXTURE_MIN_FILTER,lt[R.minFilter]),R.compareFunction&&(s.texParameteri(B,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(B,s.TEXTURE_COMPARE_FUNC,mt[R.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Tn||R.minFilter!==co&&R.minFilter!==is||R.type===ni&&t.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const J=t.get("EXT_texture_filter_anisotropic");s.texParameterf(B,J.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function Jt(B,R){let J=!1;B.__webglInit===void 0&&(B.__webglInit=!0,R.addEventListener("dispose",D));const rt=R.source;let gt=g.get(rt);gt===void 0&&(gt={},g.set(rt,gt));const ot=K(R);if(ot!==B.__cacheKey){gt[ot]===void 0&&(gt[ot]={texture:s.createTexture(),usedTimes:0},l.memory.textures++,J=!0),gt[ot].usedTimes++;const Zt=gt[B.__cacheKey];Zt!==void 0&&(gt[B.__cacheKey].usedTimes--,Zt.usedTimes===0&&w(R)),B.__cacheKey=ot,B.__webglTexture=gt[ot].texture}return J}function zt(B,R,J){return Math.floor(Math.floor(B/J)/R)}function st(B,R,J,rt){const ot=B.updateRanges;if(ot.length===0)e.texSubImage2D(s.TEXTURE_2D,0,0,0,R.width,R.height,J,rt,R.data);else{ot.sort((yt,Lt)=>yt.start-Lt.start);let Zt=0;for(let yt=1;yt<ot.length;yt++){const Lt=ot[Zt],te=ot[yt],Kt=Lt.start+Lt.count,Pt=zt(te.start,R.width,4),he=zt(Lt.start,R.width,4);te.start<=Kt+1&&Pt===he&&zt(te.start+te.count-1,R.width,4)===Pt?Lt.count=Math.max(Lt.count,te.start+te.count-Lt.start):(++Zt,ot[Zt]=te)}ot.length=Zt+1;const Ct=s.getParameter(s.UNPACK_ROW_LENGTH),kt=s.getParameter(s.UNPACK_SKIP_PIXELS),Wt=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,R.width);for(let yt=0,Lt=ot.length;yt<Lt;yt++){const te=ot[yt],Kt=Math.floor(te.start/4),Pt=Math.ceil(te.count/4),he=Kt%R.width,k=Math.floor(Kt/R.width),bt=Pt,wt=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,he),s.pixelStorei(s.UNPACK_SKIP_ROWS,k),e.texSubImage2D(s.TEXTURE_2D,0,he,k,bt,wt,J,rt,R.data)}B.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,Ct),s.pixelStorei(s.UNPACK_SKIP_PIXELS,kt),s.pixelStorei(s.UNPACK_SKIP_ROWS,Wt)}}function Dt(B,R,J){let rt=s.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(rt=s.TEXTURE_2D_ARRAY),R.isData3DTexture&&(rt=s.TEXTURE_3D);const gt=Jt(B,R),ot=R.source;e.bindTexture(rt,B.__webglTexture,s.TEXTURE0+J);const Zt=n.get(ot);if(ot.version!==Zt.__version||gt===!0){e.activeTexture(s.TEXTURE0+J);const Ct=Ae.getPrimaries(Ae.workingColorSpace),kt=R.colorSpace===Ds?null:Ae.getPrimaries(R.colorSpace),Wt=R.colorSpace===Ds||Ct===kt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Wt);let yt=b(R.image,!1,i.maxTextureSize);yt=se(R,yt);const Lt=o.convert(R.format,R.colorSpace),te=o.convert(R.type);let Kt=A(R.internalFormat,Lt,te,R.colorSpace,R.isVideoTexture);Nt(rt,R);let Pt;const he=R.mipmaps,k=R.isVideoTexture!==!0,bt=Zt.__version===void 0||gt===!0,wt=ot.dataReady,Vt=U(R,yt);if(R.isDepthTexture)Kt=T(R.format===yo,R.type),bt&&(k?e.texStorage2D(s.TEXTURE_2D,1,Kt,yt.width,yt.height):e.texImage2D(s.TEXTURE_2D,0,Kt,yt.width,yt.height,0,Lt,te,null));else if(R.isDataTexture)if(he.length>0){k&&bt&&e.texStorage2D(s.TEXTURE_2D,Vt,Kt,he[0].width,he[0].height);for(let xt=0,ft=he.length;xt<ft;xt++)Pt=he[xt],k?wt&&e.texSubImage2D(s.TEXTURE_2D,xt,0,0,Pt.width,Pt.height,Lt,te,Pt.data):e.texImage2D(s.TEXTURE_2D,xt,Kt,Pt.width,Pt.height,0,Lt,te,Pt.data);R.generateMipmaps=!1}else k?(bt&&e.texStorage2D(s.TEXTURE_2D,Vt,Kt,yt.width,yt.height),wt&&st(R,yt,Lt,te)):e.texImage2D(s.TEXTURE_2D,0,Kt,yt.width,yt.height,0,Lt,te,yt.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){k&&bt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Vt,Kt,he[0].width,he[0].height,yt.depth);for(let xt=0,ft=he.length;xt<ft;xt++)if(Pt=he[xt],R.format!==Bn)if(Lt!==null)if(k){if(wt)if(R.layerUpdates.size>0){const qt=sm(Pt.width,Pt.height,R.format,R.type);for(const le of R.layerUpdates){const Ue=Pt.data.subarray(le*qt/Pt.data.BYTES_PER_ELEMENT,(le+1)*qt/Pt.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,xt,0,0,le,Pt.width,Pt.height,1,Lt,Ue)}R.clearLayerUpdates()}else e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,xt,0,0,0,Pt.width,Pt.height,yt.depth,Lt,Pt.data)}else e.compressedTexImage3D(s.TEXTURE_2D_ARRAY,xt,Kt,Pt.width,Pt.height,yt.depth,0,Pt.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else k?wt&&e.texSubImage3D(s.TEXTURE_2D_ARRAY,xt,0,0,0,Pt.width,Pt.height,yt.depth,Lt,te,Pt.data):e.texImage3D(s.TEXTURE_2D_ARRAY,xt,Kt,Pt.width,Pt.height,yt.depth,0,Lt,te,Pt.data)}else{k&&bt&&e.texStorage2D(s.TEXTURE_2D,Vt,Kt,he[0].width,he[0].height);for(let xt=0,ft=he.length;xt<ft;xt++)Pt=he[xt],R.format!==Bn?Lt!==null?k?wt&&e.compressedTexSubImage2D(s.TEXTURE_2D,xt,0,0,Pt.width,Pt.height,Lt,Pt.data):e.compressedTexImage2D(s.TEXTURE_2D,xt,Kt,Pt.width,Pt.height,0,Pt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):k?wt&&e.texSubImage2D(s.TEXTURE_2D,xt,0,0,Pt.width,Pt.height,Lt,te,Pt.data):e.texImage2D(s.TEXTURE_2D,xt,Kt,Pt.width,Pt.height,0,Lt,te,Pt.data)}else if(R.isDataArrayTexture)if(k){if(bt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Vt,Kt,yt.width,yt.height,yt.depth),wt)if(R.layerUpdates.size>0){const xt=sm(yt.width,yt.height,R.format,R.type);for(const ft of R.layerUpdates){const qt=yt.data.subarray(ft*xt/yt.data.BYTES_PER_ELEMENT,(ft+1)*xt/yt.data.BYTES_PER_ELEMENT);e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,ft,yt.width,yt.height,1,Lt,te,qt)}R.clearLayerUpdates()}else e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,yt.width,yt.height,yt.depth,Lt,te,yt.data)}else e.texImage3D(s.TEXTURE_2D_ARRAY,0,Kt,yt.width,yt.height,yt.depth,0,Lt,te,yt.data);else if(R.isData3DTexture)k?(bt&&e.texStorage3D(s.TEXTURE_3D,Vt,Kt,yt.width,yt.height,yt.depth),wt&&e.texSubImage3D(s.TEXTURE_3D,0,0,0,0,yt.width,yt.height,yt.depth,Lt,te,yt.data)):e.texImage3D(s.TEXTURE_3D,0,Kt,yt.width,yt.height,yt.depth,0,Lt,te,yt.data);else if(R.isFramebufferTexture){if(bt)if(k)e.texStorage2D(s.TEXTURE_2D,Vt,Kt,yt.width,yt.height);else{let xt=yt.width,ft=yt.height;for(let qt=0;qt<Vt;qt++)e.texImage2D(s.TEXTURE_2D,qt,Kt,xt,ft,0,Lt,te,null),xt>>=1,ft>>=1}}else if(he.length>0){if(k&&bt){const xt=ue(he[0]);e.texStorage2D(s.TEXTURE_2D,Vt,Kt,xt.width,xt.height)}for(let xt=0,ft=he.length;xt<ft;xt++)Pt=he[xt],k?wt&&e.texSubImage2D(s.TEXTURE_2D,xt,0,0,Lt,te,Pt):e.texImage2D(s.TEXTURE_2D,xt,Kt,Lt,te,Pt);R.generateMipmaps=!1}else if(k){if(bt){const xt=ue(yt);e.texStorage2D(s.TEXTURE_2D,Vt,Kt,xt.width,xt.height)}wt&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,Lt,te,yt)}else e.texImage2D(s.TEXTURE_2D,0,Kt,Lt,te,yt);S(R)&&_(rt),Zt.__version=ot.version,R.onUpdate&&R.onUpdate(R)}B.__version=R.version}function Tt(B,R,J){if(R.image.length!==6)return;const rt=Jt(B,R),gt=R.source;e.bindTexture(s.TEXTURE_CUBE_MAP,B.__webglTexture,s.TEXTURE0+J);const ot=n.get(gt);if(gt.version!==ot.__version||rt===!0){e.activeTexture(s.TEXTURE0+J);const Zt=Ae.getPrimaries(Ae.workingColorSpace),Ct=R.colorSpace===Ds?null:Ae.getPrimaries(R.colorSpace),kt=R.colorSpace===Ds||Zt===Ct?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,kt);const Wt=R.isCompressedTexture||R.image[0].isCompressedTexture,yt=R.image[0]&&R.image[0].isDataTexture,Lt=[];for(let ft=0;ft<6;ft++)!Wt&&!yt?Lt[ft]=b(R.image[ft],!0,i.maxCubemapSize):Lt[ft]=yt?R.image[ft].image:R.image[ft],Lt[ft]=se(R,Lt[ft]);const te=Lt[0],Kt=o.convert(R.format,R.colorSpace),Pt=o.convert(R.type),he=A(R.internalFormat,Kt,Pt,R.colorSpace),k=R.isVideoTexture!==!0,bt=ot.__version===void 0||rt===!0,wt=gt.dataReady;let Vt=U(R,te);Nt(s.TEXTURE_CUBE_MAP,R);let xt;if(Wt){k&&bt&&e.texStorage2D(s.TEXTURE_CUBE_MAP,Vt,he,te.width,te.height);for(let ft=0;ft<6;ft++){xt=Lt[ft].mipmaps;for(let qt=0;qt<xt.length;qt++){const le=xt[qt];R.format!==Bn?Kt!==null?k?wt&&e.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,qt,0,0,le.width,le.height,Kt,le.data):e.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,qt,he,le.width,le.height,0,le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):k?wt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,qt,0,0,le.width,le.height,Kt,Pt,le.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,qt,he,le.width,le.height,0,Kt,Pt,le.data)}}}else{if(xt=R.mipmaps,k&&bt){xt.length>0&&Vt++;const ft=ue(Lt[0]);e.texStorage2D(s.TEXTURE_CUBE_MAP,Vt,he,ft.width,ft.height)}for(let ft=0;ft<6;ft++)if(yt){k?wt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,0,0,Lt[ft].width,Lt[ft].height,Kt,Pt,Lt[ft].data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,he,Lt[ft].width,Lt[ft].height,0,Kt,Pt,Lt[ft].data);for(let qt=0;qt<xt.length;qt++){const Ue=xt[qt].image[ft].image;k?wt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,qt+1,0,0,Ue.width,Ue.height,Kt,Pt,Ue.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,qt+1,he,Ue.width,Ue.height,0,Kt,Pt,Ue.data)}}else{k?wt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,0,0,Kt,Pt,Lt[ft]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,he,Kt,Pt,Lt[ft]);for(let qt=0;qt<xt.length;qt++){const le=xt[qt];k?wt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,qt+1,0,0,Kt,Pt,le.image[ft]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ft,qt+1,he,Kt,Pt,le.image[ft])}}}S(R)&&_(s.TEXTURE_CUBE_MAP),ot.__version=gt.version,R.onUpdate&&R.onUpdate(R)}B.__version=R.version}function jt(B,R,J,rt,gt,ot){const Zt=o.convert(J.format,J.colorSpace),Ct=o.convert(J.type),kt=A(J.internalFormat,Zt,Ct,J.colorSpace),Wt=n.get(R),yt=n.get(J);if(yt.__renderTarget=R,!Wt.__hasExternalTextures){const Lt=Math.max(1,R.width>>ot),te=Math.max(1,R.height>>ot);gt===s.TEXTURE_3D||gt===s.TEXTURE_2D_ARRAY?e.texImage3D(gt,ot,kt,Lt,te,R.depth,0,Zt,Ct,null):e.texImage2D(gt,ot,kt,Lt,te,0,Zt,Ct,null)}e.bindFramebuffer(s.FRAMEBUFFER,B),_t(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,rt,gt,yt.__webglTexture,0,Rt(R)):(gt===s.TEXTURE_2D||gt>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&gt<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,rt,gt,yt.__webglTexture,ot),e.bindFramebuffer(s.FRAMEBUFFER,null)}function Yt(B,R,J){if(s.bindRenderbuffer(s.RENDERBUFFER,B),R.depthBuffer){const rt=R.depthTexture,gt=rt&&rt.isDepthTexture?rt.type:null,ot=T(R.stencilBuffer,gt),Zt=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ct=Rt(R);_t(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ct,ot,R.width,R.height):J?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ct,ot,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,ot,R.width,R.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Zt,s.RENDERBUFFER,B)}else{const rt=R.textures;for(let gt=0;gt<rt.length;gt++){const ot=rt[gt],Zt=o.convert(ot.format,ot.colorSpace),Ct=o.convert(ot.type),kt=A(ot.internalFormat,Zt,Ct,ot.colorSpace),Wt=Rt(R);J&&_t(R)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Wt,kt,R.width,R.height):_t(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Wt,kt,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,kt,R.width,R.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function ie(B,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(s.FRAMEBUFFER,B),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const rt=n.get(R.depthTexture);rt.__renderTarget=R,(!rt.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),at(R.depthTexture,0);const gt=rt.__webglTexture,ot=Rt(R);if(R.depthTexture.format===_o)_t(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,gt,0,ot):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,gt,0);else if(R.depthTexture.format===yo)_t(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,gt,0,ot):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,gt,0);else throw new Error("Unknown depthTexture format")}function Be(B){const R=n.get(B),J=B.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==B.depthTexture){const rt=B.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),rt){const gt=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,rt.removeEventListener("dispose",gt)};rt.addEventListener("dispose",gt),R.__depthDisposeCallback=gt}R.__boundDepthTexture=rt}if(B.depthTexture&&!R.__autoAllocateDepthBuffer){if(J)throw new Error("target.depthTexture not supported in Cube render targets");const rt=B.texture.mipmaps;rt&&rt.length>0?ie(R.__webglFramebuffer[0],B):ie(R.__webglFramebuffer,B)}else if(J){R.__webglDepthbuffer=[];for(let rt=0;rt<6;rt++)if(e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[rt]),R.__webglDepthbuffer[rt]===void 0)R.__webglDepthbuffer[rt]=s.createRenderbuffer(),Yt(R.__webglDepthbuffer[rt],B,!1);else{const gt=B.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ot=R.__webglDepthbuffer[rt];s.bindRenderbuffer(s.RENDERBUFFER,ot),s.framebufferRenderbuffer(s.FRAMEBUFFER,gt,s.RENDERBUFFER,ot)}}else{const rt=B.texture.mipmaps;if(rt&&rt.length>0?e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[0]):e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=s.createRenderbuffer(),Yt(R.__webglDepthbuffer,B,!1);else{const gt=B.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ot=R.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,ot),s.framebufferRenderbuffer(s.FRAMEBUFFER,gt,s.RENDERBUFFER,ot)}}e.bindFramebuffer(s.FRAMEBUFFER,null)}function re(B,R,J){const rt=n.get(B);R!==void 0&&jt(rt.__webglFramebuffer,B,B.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),J!==void 0&&Be(B)}function H(B){const R=B.texture,J=n.get(B),rt=n.get(R);B.addEventListener("dispose",P);const gt=B.textures,ot=B.isWebGLCubeRenderTarget===!0,Zt=gt.length>1;if(Zt||(rt.__webglTexture===void 0&&(rt.__webglTexture=s.createTexture()),rt.__version=R.version,l.memory.textures++),ot){J.__webglFramebuffer=[];for(let Ct=0;Ct<6;Ct++)if(R.mipmaps&&R.mipmaps.length>0){J.__webglFramebuffer[Ct]=[];for(let kt=0;kt<R.mipmaps.length;kt++)J.__webglFramebuffer[Ct][kt]=s.createFramebuffer()}else J.__webglFramebuffer[Ct]=s.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){J.__webglFramebuffer=[];for(let Ct=0;Ct<R.mipmaps.length;Ct++)J.__webglFramebuffer[Ct]=s.createFramebuffer()}else J.__webglFramebuffer=s.createFramebuffer();if(Zt)for(let Ct=0,kt=gt.length;Ct<kt;Ct++){const Wt=n.get(gt[Ct]);Wt.__webglTexture===void 0&&(Wt.__webglTexture=s.createTexture(),l.memory.textures++)}if(B.samples>0&&_t(B)===!1){J.__webglMultisampledFramebuffer=s.createFramebuffer(),J.__webglColorRenderbuffer=[],e.bindFramebuffer(s.FRAMEBUFFER,J.__webglMultisampledFramebuffer);for(let Ct=0;Ct<gt.length;Ct++){const kt=gt[Ct];J.__webglColorRenderbuffer[Ct]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,J.__webglColorRenderbuffer[Ct]);const Wt=o.convert(kt.format,kt.colorSpace),yt=o.convert(kt.type),Lt=A(kt.internalFormat,Wt,yt,kt.colorSpace,B.isXRRenderTarget===!0),te=Rt(B);s.renderbufferStorageMultisample(s.RENDERBUFFER,te,Lt,B.width,B.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ct,s.RENDERBUFFER,J.__webglColorRenderbuffer[Ct])}s.bindRenderbuffer(s.RENDERBUFFER,null),B.depthBuffer&&(J.__webglDepthRenderbuffer=s.createRenderbuffer(),Yt(J.__webglDepthRenderbuffer,B,!0)),e.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ot){e.bindTexture(s.TEXTURE_CUBE_MAP,rt.__webglTexture),Nt(s.TEXTURE_CUBE_MAP,R);for(let Ct=0;Ct<6;Ct++)if(R.mipmaps&&R.mipmaps.length>0)for(let kt=0;kt<R.mipmaps.length;kt++)jt(J.__webglFramebuffer[Ct][kt],B,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ct,kt);else jt(J.__webglFramebuffer[Ct],B,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ct,0);S(R)&&_(s.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Zt){for(let Ct=0,kt=gt.length;Ct<kt;Ct++){const Wt=gt[Ct],yt=n.get(Wt);let Lt=s.TEXTURE_2D;(B.isWebGL3DRenderTarget||B.isWebGLArrayRenderTarget)&&(Lt=B.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Lt,yt.__webglTexture),Nt(Lt,Wt),jt(J.__webglFramebuffer,B,Wt,s.COLOR_ATTACHMENT0+Ct,Lt,0),S(Wt)&&_(Lt)}e.unbindTexture()}else{let Ct=s.TEXTURE_2D;if((B.isWebGL3DRenderTarget||B.isWebGLArrayRenderTarget)&&(Ct=B.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Ct,rt.__webglTexture),Nt(Ct,R),R.mipmaps&&R.mipmaps.length>0)for(let kt=0;kt<R.mipmaps.length;kt++)jt(J.__webglFramebuffer[kt],B,R,s.COLOR_ATTACHMENT0,Ct,kt);else jt(J.__webglFramebuffer,B,R,s.COLOR_ATTACHMENT0,Ct,0);S(R)&&_(Ct),e.unbindTexture()}B.depthBuffer&&Be(B)}function pt(B){const R=B.textures;for(let J=0,rt=R.length;J<rt;J++){const gt=R[J];if(S(gt)){const ot=E(B),Zt=n.get(gt).__webglTexture;e.bindTexture(ot,Zt),_(ot),e.unbindTexture()}}}const ct=[],vt=[];function ht(B){if(B.samples>0){if(_t(B)===!1){const R=B.textures,J=B.width,rt=B.height;let gt=s.COLOR_BUFFER_BIT;const ot=B.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Zt=n.get(B),Ct=R.length>1;if(Ct)for(let Wt=0;Wt<R.length;Wt++)e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Wt,s.RENDERBUFFER,null),e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Wt,s.TEXTURE_2D,null,0);e.bindFramebuffer(s.READ_FRAMEBUFFER,Zt.__webglMultisampledFramebuffer);const kt=B.texture.mipmaps;kt&&kt.length>0?e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Zt.__webglFramebuffer[0]):e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Zt.__webglFramebuffer);for(let Wt=0;Wt<R.length;Wt++){if(B.resolveDepthBuffer&&(B.depthBuffer&&(gt|=s.DEPTH_BUFFER_BIT),B.stencilBuffer&&B.resolveStencilBuffer&&(gt|=s.STENCIL_BUFFER_BIT)),Ct){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Zt.__webglColorRenderbuffer[Wt]);const yt=n.get(R[Wt]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,yt,0)}s.blitFramebuffer(0,0,J,rt,0,0,J,rt,gt,s.NEAREST),h===!0&&(ct.length=0,vt.length=0,ct.push(s.COLOR_ATTACHMENT0+Wt),B.depthBuffer&&B.resolveDepthBuffer===!1&&(ct.push(ot),vt.push(ot),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,vt)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,ct))}if(e.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Ct)for(let Wt=0;Wt<R.length;Wt++){e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Wt,s.RENDERBUFFER,Zt.__webglColorRenderbuffer[Wt]);const yt=n.get(R[Wt]).__webglTexture;e.bindFramebuffer(s.FRAMEBUFFER,Zt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Wt,s.TEXTURE_2D,yt,0)}e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Zt.__webglMultisampledFramebuffer)}else if(B.depthBuffer&&B.resolveDepthBuffer===!1&&h){const R=B.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[R])}}}function Rt(B){return Math.min(i.maxSamples,B.samples)}function _t(B){const R=n.get(B);return B.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function Et(B){const R=l.render.frame;p.get(B)!==R&&(p.set(B,R),B.update())}function se(B,R){const J=B.colorSpace,rt=B.format,gt=B.type;return B.isCompressedTexture===!0||B.isVideoTexture===!0||J!==fa&&J!==Ds&&(Ae.getTransfer(J)===Fe?(rt!==Bn||gt!==Pi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",J)),R}function ue(B){return typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement?(f.width=B.naturalWidth||B.width,f.height=B.naturalHeight||B.height):typeof VideoFrame<"u"&&B instanceof VideoFrame?(f.width=B.displayWidth,f.height=B.displayHeight):(f.width=B.width,f.height=B.height),f}this.allocateTextureUnit=q,this.resetTextureUnits=$,this.setTexture2D=at,this.setTexture2DArray=F,this.setTexture3D=X,this.setTextureCube=G,this.rebindTextures=re,this.setupRenderTarget=H,this.updateRenderTargetMipmap=pt,this.updateMultisampleRenderTarget=ht,this.setupDepthRenderbuffer=Be,this.setupFrameBufferTexture=jt,this.useMultisampledRTT=_t}function hS(s,t){function e(n,i=Ds){let o;const l=Ae.getTransfer(i);if(n===Pi)return s.UNSIGNED_BYTE;if(n===Bh)return s.UNSIGNED_SHORT_4_4_4_4;if(n===zh)return s.UNSIGNED_SHORT_5_5_5_1;if(n===_m)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===gm)return s.BYTE;if(n===vm)return s.SHORT;if(n===go)return s.UNSIGNED_SHORT;if(n===Oh)return s.INT;if(n===Os)return s.UNSIGNED_INT;if(n===ni)return s.FLOAT;if(n===wo)return s.HALF_FLOAT;if(n===ym)return s.ALPHA;if(n===xm)return s.RGB;if(n===Bn)return s.RGBA;if(n===_o)return s.DEPTH_COMPONENT;if(n===yo)return s.DEPTH_STENCIL;if(n===Fh)return s.RED;if(n===Ql)return s.RED_INTEGER;if(n===Sm)return s.RG;if(n===Hh)return s.RG_INTEGER;if(n===Vh)return s.RGBA_INTEGER;if(n===Tl||n===Al||n===Cl||n===wl)if(l===Fe)if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(n===Tl)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Al)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Cl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===wl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(n===Tl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Al)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Cl)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===wl)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Qu||n===$u||n===th||n===eh)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(n===Qu)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===$u)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===th)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===eh)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===nh||n===ih||n===sh)if(o=t.get("WEBGL_compressed_texture_etc"),o!==null){if(n===nh||n===ih)return l===Fe?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(n===sh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===ah||n===rh||n===oh||n===lh||n===ch||n===uh||n===hh||n===fh||n===dh||n===ph||n===mh||n===gh||n===vh||n===_h)if(o=t.get("WEBGL_compressed_texture_astc"),o!==null){if(n===ah)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===rh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===oh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===lh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===ch)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===uh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===hh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===fh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===dh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===ph)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===mh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===gh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===vh)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===_h)return l===Fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Rl||n===yh||n===xh)if(o=t.get("EXT_texture_compression_bptc"),o!==null){if(n===Rl)return l===Fe?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===yh)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===xh)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Mm||n===Sh||n===Mh||n===bh)if(o=t.get("EXT_texture_compression_rgtc"),o!==null){if(n===Rl)return o.COMPRESSED_RED_RGTC1_EXT;if(n===Sh)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Mh)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===bh)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===vo?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:e}}class fS extends an{constructor(t=null){super(),this.sourceTexture=t,this.isExternalTexture=!0}}const K2=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,j2=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class J2{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e){if(this.texture===null){const n=new fS(t.texture);(t.depthNear!==e.depthNear||t.depthFar!==e.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new Zi({vertexShader:K2,fragmentShader:j2,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new un(new Uo(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Q2 extends ls{constructor(t,e){super();const n=this;let i=null,o=1,l=null,c="local-floor",h=1,f=null,p=null,m=null,g=null,v=null,x=null;const b=new J2,S={},_=e.getContextAttributes();let E=null,A=null;const T=[],U=[],D=new dt;let P=null;const z=new Sn;z.viewport=new Re;const w=new Sn;w.viewport=new Re;const C=[z,w],I=new tS;let $=null,q=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(st){let Dt=T[st];return Dt===void 0&&(Dt=new Hu,T[st]=Dt),Dt.getTargetRaySpace()},this.getControllerGrip=function(st){let Dt=T[st];return Dt===void 0&&(Dt=new Hu,T[st]=Dt),Dt.getGripSpace()},this.getHand=function(st){let Dt=T[st];return Dt===void 0&&(Dt=new Hu,T[st]=Dt),Dt.getHandSpace()};function K(st){const Dt=U.indexOf(st.inputSource);if(Dt===-1)return;const Tt=T[Dt];Tt!==void 0&&(Tt.update(st.inputSource,st.frame,f||l),Tt.dispatchEvent({type:st.type,data:st.inputSource}))}function at(){i.removeEventListener("select",K),i.removeEventListener("selectstart",K),i.removeEventListener("selectend",K),i.removeEventListener("squeeze",K),i.removeEventListener("squeezestart",K),i.removeEventListener("squeezeend",K),i.removeEventListener("end",at),i.removeEventListener("inputsourceschange",F);for(let st=0;st<T.length;st++){const Dt=U[st];Dt!==null&&(U[st]=null,T[st].disconnect(Dt))}$=null,q=null,b.reset();for(const st in S)delete S[st];t.setRenderTarget(E),v=null,g=null,m=null,i=null,A=null,zt.stop(),n.isPresenting=!1,t.setPixelRatio(P),t.setSize(D.width,D.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(st){o=st,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(st){c=st,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function(st){f=st},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(st){if(i=st,i!==null){if(E=t.getRenderTarget(),i.addEventListener("select",K),i.addEventListener("selectstart",K),i.addEventListener("selectend",K),i.addEventListener("squeeze",K),i.addEventListener("squeezestart",K),i.addEventListener("squeezeend",K),i.addEventListener("end",at),i.addEventListener("inputsourceschange",F),_.xrCompatible!==!0&&await e.makeXRCompatible(),P=t.getPixelRatio(),t.getSize(D),typeof XRWebGLBinding<"u"&&(m=new XRWebGLBinding(i,e)),m!==null&&"createProjectionLayer"in XRWebGLBinding.prototype){let Tt=null,jt=null,Yt=null;_.depth&&(Yt=_.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,Tt=_.stencil?yo:_o,jt=_.stencil?vo:Os);const ie={colorFormat:e.RGBA8,depthFormat:Yt,scaleFactor:o};g=m.createProjectionLayer(ie),i.updateRenderState({layers:[g]}),t.setPixelRatio(1),t.setSize(g.textureWidth,g.textureHeight,!1),A=new os(g.textureWidth,g.textureHeight,{format:Bn,type:Pi,depthTexture:new Lm(g.textureWidth,g.textureHeight,jt,void 0,void 0,void 0,void 0,void 0,void 0,Tt),stencilBuffer:_.stencil,colorSpace:t.outputColorSpace,samples:_.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const Tt={antialias:_.antialias,alpha:!0,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:o};v=new XRWebGLLayer(i,e,Tt),i.updateRenderState({baseLayer:v}),t.setPixelRatio(1),t.setSize(v.framebufferWidth,v.framebufferHeight,!1),A=new os(v.framebufferWidth,v.framebufferHeight,{format:Bn,type:Pi,colorSpace:t.outputColorSpace,stencilBuffer:_.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}A.isXRRenderTarget=!0,this.setFoveation(h),f=null,l=await i.requestReferenceSpace(c),zt.setContext(i),zt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return b.getDepthTexture()};function F(st){for(let Dt=0;Dt<st.removed.length;Dt++){const Tt=st.removed[Dt],jt=U.indexOf(Tt);jt>=0&&(U[jt]=null,T[jt].disconnect(Tt))}for(let Dt=0;Dt<st.added.length;Dt++){const Tt=st.added[Dt];let jt=U.indexOf(Tt);if(jt===-1){for(let ie=0;ie<T.length;ie++)if(ie>=U.length){U.push(Tt),jt=ie;break}else if(U[ie]===null){U[ie]=Tt,jt=ie;break}if(jt===-1)break}const Yt=T[jt];Yt&&Yt.connect(Tt)}}const X=new O,G=new O;function nt(st,Dt,Tt){X.setFromMatrixPosition(Dt.matrixWorld),G.setFromMatrixPosition(Tt.matrixWorld);const jt=X.distanceTo(G),Yt=Dt.projectionMatrix.elements,ie=Tt.projectionMatrix.elements,Be=Yt[14]/(Yt[10]-1),re=Yt[14]/(Yt[10]+1),H=(Yt[9]+1)/Yt[5],pt=(Yt[9]-1)/Yt[5],ct=(Yt[8]-1)/Yt[0],vt=(ie[8]+1)/ie[0],ht=Be*ct,Rt=Be*vt,_t=jt/(-ct+vt),Et=_t*-ct;if(Dt.matrixWorld.decompose(st.position,st.quaternion,st.scale),st.translateX(Et),st.translateZ(_t),st.matrixWorld.compose(st.position,st.quaternion,st.scale),st.matrixWorldInverse.copy(st.matrixWorld).invert(),Yt[10]===-1)st.projectionMatrix.copy(Dt.projectionMatrix),st.projectionMatrixInverse.copy(Dt.projectionMatrixInverse);else{const se=Be+_t,ue=re+_t,B=ht-Et,R=Rt+(jt-Et),J=H*re/ue*se,rt=pt*re/ue*se;st.projectionMatrix.makePerspective(B,R,J,rt,se,ue),st.projectionMatrixInverse.copy(st.projectionMatrix).invert()}}function lt(st,Dt){Dt===null?st.matrixWorld.copy(st.matrix):st.matrixWorld.multiplyMatrices(Dt.matrixWorld,st.matrix),st.matrixWorldInverse.copy(st.matrixWorld).invert()}this.updateCamera=function(st){if(i===null)return;let Dt=st.near,Tt=st.far;b.texture!==null&&(b.depthNear>0&&(Dt=b.depthNear),b.depthFar>0&&(Tt=b.depthFar)),I.near=w.near=z.near=Dt,I.far=w.far=z.far=Tt,($!==I.near||q!==I.far)&&(i.updateRenderState({depthNear:I.near,depthFar:I.far}),$=I.near,q=I.far),I.layers.mask=st.layers.mask|6,z.layers.mask=I.layers.mask&3,w.layers.mask=I.layers.mask&5;const jt=st.parent,Yt=I.cameras;lt(I,jt);for(let ie=0;ie<Yt.length;ie++)lt(Yt[ie],jt);Yt.length===2?nt(I,z,w):I.projectionMatrix.copy(z.projectionMatrix),mt(st,I,jt)};function mt(st,Dt,Tt){Tt===null?st.matrix.copy(Dt.matrixWorld):(st.matrix.copy(Tt.matrixWorld),st.matrix.invert(),st.matrix.multiply(Dt.matrixWorld)),st.matrix.decompose(st.position,st.quaternion,st.scale),st.updateMatrixWorld(!0),st.projectionMatrix.copy(Dt.projectionMatrix),st.projectionMatrixInverse.copy(Dt.projectionMatrixInverse),st.isPerspectiveCamera&&(st.fov=So*2*Math.atan(1/st.projectionMatrix.elements[5]),st.zoom=1)}this.getCamera=function(){return I},this.getFoveation=function(){if(!(g===null&&v===null))return h},this.setFoveation=function(st){h=st,g!==null&&(g.fixedFoveation=st),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=st)},this.hasDepthSensing=function(){return b.texture!==null},this.getDepthSensingMesh=function(){return b.getMesh(I)},this.getCameraTexture=function(st){return S[st]};let Nt=null;function Jt(st,Dt){if(p=Dt.getViewerPose(f||l),x=Dt,p!==null){const Tt=p.views;v!==null&&(t.setRenderTargetFramebuffer(A,v.framebuffer),t.setRenderTarget(A));let jt=!1;Tt.length!==I.cameras.length&&(I.cameras.length=0,jt=!0);for(let re=0;re<Tt.length;re++){const H=Tt[re];let pt=null;if(v!==null)pt=v.getViewport(H);else{const vt=m.getViewSubImage(g,H);pt=vt.viewport,re===0&&(t.setRenderTargetTextures(A,vt.colorTexture,vt.depthStencilTexture),t.setRenderTarget(A))}let ct=C[re];ct===void 0&&(ct=new Sn,ct.layers.enable(re),ct.viewport=new Re,C[re]=ct),ct.matrix.fromArray(H.transform.matrix),ct.matrix.decompose(ct.position,ct.quaternion,ct.scale),ct.projectionMatrix.fromArray(H.projectionMatrix),ct.projectionMatrixInverse.copy(ct.projectionMatrix).invert(),ct.viewport.set(pt.x,pt.y,pt.width,pt.height),re===0&&(I.matrix.copy(ct.matrix),I.matrix.decompose(I.position,I.quaternion,I.scale)),jt===!0&&I.cameras.push(ct)}const Yt=i.enabledFeatures;if(Yt&&Yt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&m){const re=m.getDepthInformation(Tt[0]);re&&re.isValid&&re.texture&&b.init(re,i.renderState)}if(Yt&&Yt.includes("camera-access")&&(t.state.unbindTexture(),m))for(let re=0;re<Tt.length;re++){const H=Tt[re].camera;if(H){let pt=S[H];pt||(pt=new fS,S[H]=pt);const ct=m.getCameraImage(H);pt.sourceTexture=ct}}}for(let Tt=0;Tt<T.length;Tt++){const jt=U[Tt],Yt=T[Tt];jt!==null&&Yt!==void 0&&Yt.update(jt,Dt,f||l)}Nt&&Nt(st,Dt),Dt.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Dt}),x=null}const zt=new rS;zt.setAnimationLoop(Jt),this.setAnimationLoop=function(st){Nt=st},this.dispose=function(){}}}const ja=new Si,$2=new ce;function t3(s,t){function e(S,_){S.matrixAutoUpdate===!0&&S.updateMatrix(),_.value.copy(S.matrix)}function n(S,_){_.color.getRGB(S.fogColor.value,ax(s)),_.isFog?(S.fogNear.value=_.near,S.fogFar.value=_.far):_.isFogExp2&&(S.fogDensity.value=_.density)}function i(S,_,E,A,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?o(S,_):_.isMeshToonMaterial?(o(S,_),m(S,_)):_.isMeshPhongMaterial?(o(S,_),p(S,_)):_.isMeshStandardMaterial?(o(S,_),g(S,_),_.isMeshPhysicalMaterial&&v(S,_,T)):_.isMeshMatcapMaterial?(o(S,_),x(S,_)):_.isMeshDepthMaterial?o(S,_):_.isMeshDistanceMaterial?(o(S,_),b(S,_)):_.isMeshNormalMaterial?o(S,_):_.isLineBasicMaterial?(l(S,_),_.isLineDashedMaterial&&c(S,_)):_.isPointsMaterial?h(S,_,E,A):_.isSpriteMaterial?f(S,_):_.isShadowMaterial?(S.color.value.copy(_.color),S.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function o(S,_){S.opacity.value=_.opacity,_.color&&S.diffuse.value.copy(_.color),_.emissive&&S.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.bumpMap&&(S.bumpMap.value=_.bumpMap,e(_.bumpMap,S.bumpMapTransform),S.bumpScale.value=_.bumpScale,_.side===Yn&&(S.bumpScale.value*=-1)),_.normalMap&&(S.normalMap.value=_.normalMap,e(_.normalMap,S.normalMapTransform),S.normalScale.value.copy(_.normalScale),_.side===Yn&&S.normalScale.value.negate()),_.displacementMap&&(S.displacementMap.value=_.displacementMap,e(_.displacementMap,S.displacementMapTransform),S.displacementScale.value=_.displacementScale,S.displacementBias.value=_.displacementBias),_.emissiveMap&&(S.emissiveMap.value=_.emissiveMap,e(_.emissiveMap,S.emissiveMapTransform)),_.specularMap&&(S.specularMap.value=_.specularMap,e(_.specularMap,S.specularMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest);const E=t.get(_),A=E.envMap,T=E.envMapRotation;A&&(S.envMap.value=A,ja.copy(T),ja.x*=-1,ja.y*=-1,ja.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&(ja.y*=-1,ja.z*=-1),S.envMapRotation.value.setFromMatrix4($2.makeRotationFromEuler(ja)),S.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=_.reflectivity,S.ior.value=_.ior,S.refractionRatio.value=_.refractionRatio),_.lightMap&&(S.lightMap.value=_.lightMap,S.lightMapIntensity.value=_.lightMapIntensity,e(_.lightMap,S.lightMapTransform)),_.aoMap&&(S.aoMap.value=_.aoMap,S.aoMapIntensity.value=_.aoMapIntensity,e(_.aoMap,S.aoMapTransform))}function l(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform))}function c(S,_){S.dashSize.value=_.dashSize,S.totalSize.value=_.dashSize+_.gapSize,S.scale.value=_.scale}function h(S,_,E,A){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.size.value=_.size*E,S.scale.value=A*.5,_.map&&(S.map.value=_.map,e(_.map,S.uvTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function f(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.rotation.value=_.rotation,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function p(S,_){S.specular.value.copy(_.specular),S.shininess.value=Math.max(_.shininess,1e-4)}function m(S,_){_.gradientMap&&(S.gradientMap.value=_.gradientMap)}function g(S,_){S.metalness.value=_.metalness,_.metalnessMap&&(S.metalnessMap.value=_.metalnessMap,e(_.metalnessMap,S.metalnessMapTransform)),S.roughness.value=_.roughness,_.roughnessMap&&(S.roughnessMap.value=_.roughnessMap,e(_.roughnessMap,S.roughnessMapTransform)),_.envMap&&(S.envMapIntensity.value=_.envMapIntensity)}function v(S,_,E){S.ior.value=_.ior,_.sheen>0&&(S.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),S.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(S.sheenColorMap.value=_.sheenColorMap,e(_.sheenColorMap,S.sheenColorMapTransform)),_.sheenRoughnessMap&&(S.sheenRoughnessMap.value=_.sheenRoughnessMap,e(_.sheenRoughnessMap,S.sheenRoughnessMapTransform))),_.clearcoat>0&&(S.clearcoat.value=_.clearcoat,S.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(S.clearcoatMap.value=_.clearcoatMap,e(_.clearcoatMap,S.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,e(_.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(S.clearcoatNormalMap.value=_.clearcoatNormalMap,e(_.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Yn&&S.clearcoatNormalScale.value.negate())),_.dispersion>0&&(S.dispersion.value=_.dispersion),_.iridescence>0&&(S.iridescence.value=_.iridescence,S.iridescenceIOR.value=_.iridescenceIOR,S.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(S.iridescenceMap.value=_.iridescenceMap,e(_.iridescenceMap,S.iridescenceMapTransform)),_.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=_.iridescenceThicknessMap,e(_.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),_.transmission>0&&(S.transmission.value=_.transmission,S.transmissionSamplerMap.value=E.texture,S.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(S.transmissionMap.value=_.transmissionMap,e(_.transmissionMap,S.transmissionMapTransform)),S.thickness.value=_.thickness,_.thicknessMap&&(S.thicknessMap.value=_.thicknessMap,e(_.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=_.attenuationDistance,S.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(S.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(S.anisotropyMap.value=_.anisotropyMap,e(_.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=_.specularIntensity,S.specularColor.value.copy(_.specularColor),_.specularColorMap&&(S.specularColorMap.value=_.specularColorMap,e(_.specularColorMap,S.specularColorMapTransform)),_.specularIntensityMap&&(S.specularIntensityMap.value=_.specularIntensityMap,e(_.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,_){_.matcap&&(S.matcap.value=_.matcap)}function b(S,_){const E=t.get(_).light;S.referencePosition.value.setFromMatrixPosition(E.matrixWorld),S.nearDistance.value=E.shadow.camera.near,S.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function e3(s,t,e,n){let i={},o={},l=[];const c=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function h(E,A){const T=A.program;n.uniformBlockBinding(E,T)}function f(E,A){let T=i[E.id];T===void 0&&(x(E),T=p(E),i[E.id]=T,E.addEventListener("dispose",S));const U=A.program;n.updateUBOMapping(E,U);const D=t.render.frame;o[E.id]!==D&&(g(E),o[E.id]=D)}function p(E){const A=m();E.__bindingPointIndex=A;const T=s.createBuffer(),U=E.__size,D=E.usage;return s.bindBuffer(s.UNIFORM_BUFFER,T),s.bufferData(s.UNIFORM_BUFFER,U,D),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,A,T),T}function m(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(E){const A=i[E.id],T=E.uniforms,U=E.__cache;s.bindBuffer(s.UNIFORM_BUFFER,A);for(let D=0,P=T.length;D<P;D++){const z=Array.isArray(T[D])?T[D]:[T[D]];for(let w=0,C=z.length;w<C;w++){const I=z[w];if(v(I,D,w,U)===!0){const $=I.__offset,q=Array.isArray(I.value)?I.value:[I.value];let K=0;for(let at=0;at<q.length;at++){const F=q[at],X=b(F);typeof F=="number"||typeof F=="boolean"?(I.__data[0]=F,s.bufferSubData(s.UNIFORM_BUFFER,$+K,I.__data)):F.isMatrix3?(I.__data[0]=F.elements[0],I.__data[1]=F.elements[1],I.__data[2]=F.elements[2],I.__data[3]=0,I.__data[4]=F.elements[3],I.__data[5]=F.elements[4],I.__data[6]=F.elements[5],I.__data[7]=0,I.__data[8]=F.elements[6],I.__data[9]=F.elements[7],I.__data[10]=F.elements[8],I.__data[11]=0):(F.toArray(I.__data,K),K+=X.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,$,I.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function v(E,A,T,U){const D=E.value,P=A+"_"+T;if(U[P]===void 0)return typeof D=="number"||typeof D=="boolean"?U[P]=D:U[P]=D.clone(),!0;{const z=U[P];if(typeof D=="number"||typeof D=="boolean"){if(z!==D)return U[P]=D,!0}else if(z.equals(D)===!1)return z.copy(D),!0}return!1}function x(E){const A=E.uniforms;let T=0;const U=16;for(let P=0,z=A.length;P<z;P++){const w=Array.isArray(A[P])?A[P]:[A[P]];for(let C=0,I=w.length;C<I;C++){const $=w[C],q=Array.isArray($.value)?$.value:[$.value];for(let K=0,at=q.length;K<at;K++){const F=q[K],X=b(F),G=T%U,nt=G%X.boundary,lt=G+nt;T+=nt,lt!==0&&U-lt<X.storage&&(T+=U-lt),$.__data=new Float32Array(X.storage/Float32Array.BYTES_PER_ELEMENT),$.__offset=T,T+=X.storage}}}const D=T%U;return D>0&&(T+=U-D),E.__size=T,E.__cache={},this}function b(E){const A={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(A.boundary=4,A.storage=4):E.isVector2?(A.boundary=8,A.storage=8):E.isVector3||E.isColor?(A.boundary=16,A.storage=12):E.isVector4?(A.boundary=16,A.storage=16):E.isMatrix3?(A.boundary=48,A.storage=48):E.isMatrix4?(A.boundary=64,A.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),A}function S(E){const A=E.target;A.removeEventListener("dispose",S);const T=l.indexOf(A.__bindingPointIndex);l.splice(T,1),s.deleteBuffer(i[A.id]),delete i[A.id],delete o[A.id]}function _(){for(const E in i)s.deleteBuffer(i[E]);l=[],i={},o={}}return{bind:h,update:f,dispose:_}}class dS{constructor(t={}){const{canvas:e=nx(),context:n=null,depth:i=!0,stencil:o=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:m=!1,reversedDepthBuffer:g=!1}=t;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),b=new Int32Array(4);let S=null,_=null;const E=[],A=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=as,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const T=this;let U=!1;this._outputColorSpace=On;let D=0,P=0,z=null,w=-1,C=null;const I=new Re,$=new Re;let q=null;const K=new Bt(0);let at=0,F=e.width,X=e.height,G=1,nt=null,lt=null;const mt=new Re(0,0,F,X),Nt=new Re(0,0,F,X);let Jt=!1;const zt=new Do;let st=!1,Dt=!1;const Tt=new ce,jt=new O,Yt=new Re,ie={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Be=!1;function re(){return z===null?G:1}let H=n;function pt(N,W){return e.getContext(N,W)}try{const N={alpha:!0,depth:i,stencil:o,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Lh}`),e.addEventListener("webglcontextlost",wt,!1),e.addEventListener("webglcontextrestored",Vt,!1),e.addEventListener("webglcontextcreationerror",xt,!1),H===null){const W="webgl2";if(H=pt(W,N),H===null)throw pt(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let ct,vt,ht,Rt,_t,Et,se,ue,B,R,J,rt,gt,ot,Zt,Ct,kt,Wt,yt,Lt,te,Kt,Pt,he;function k(){ct=new dR(H),ct.init(),Kt=new hS(H,ct),vt=new rR(H,ct,t,Kt),ht=new Y2(H,ct),vt.reversedDepthBuffer&&g&&ht.buffers.depth.setReversed(!0),Rt=new gR(H),_t=new P2,Et=new Z2(H,ct,ht,_t,vt,Kt,Rt),se=new lR(T),ue=new fR(T),B=new MA(H),Pt=new sR(H,B),R=new pR(H,B,Rt,Pt),J=new _R(H,R,B,Rt),yt=new vR(H,vt,Et),Ct=new oR(_t),rt=new L2(T,se,ue,ct,vt,Pt,Ct),gt=new t3(T,_t),ot=new O2,Zt=new G2(ct),Wt=new iR(T,se,ue,ht,J,v,h),kt=new X2(T,J,vt),he=new e3(H,Rt,vt,ht),Lt=new aR(H,ct,Rt),te=new mR(H,ct,Rt),Rt.programs=rt.programs,T.capabilities=vt,T.extensions=ct,T.properties=_t,T.renderLists=ot,T.shadowMap=kt,T.state=ht,T.info=Rt}k();const bt=new Q2(T,H);this.xr=bt,this.getContext=function(){return H},this.getContextAttributes=function(){return H.getContextAttributes()},this.forceContextLoss=function(){const N=ct.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=ct.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(N){N!==void 0&&(G=N,this.setSize(F,X,!1))},this.getSize=function(N){return N.set(F,X)},this.setSize=function(N,W,Q=!0){if(bt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}F=N,X=W,e.width=Math.floor(N*G),e.height=Math.floor(W*G),Q===!0&&(e.style.width=N+"px",e.style.height=W+"px"),this.setViewport(0,0,N,W)},this.getDrawingBufferSize=function(N){return N.set(F*G,X*G).floor()},this.setDrawingBufferSize=function(N,W,Q){F=N,X=W,G=Q,e.width=Math.floor(N*Q),e.height=Math.floor(W*Q),this.setViewport(0,0,N,W)},this.getCurrentViewport=function(N){return N.copy(I)},this.getViewport=function(N){return N.copy(mt)},this.setViewport=function(N,W,Q,et){N.isVector4?mt.set(N.x,N.y,N.z,N.w):mt.set(N,W,Q,et),ht.viewport(I.copy(mt).multiplyScalar(G).round())},this.getScissor=function(N){return N.copy(Nt)},this.setScissor=function(N,W,Q,et){N.isVector4?Nt.set(N.x,N.y,N.z,N.w):Nt.set(N,W,Q,et),ht.scissor($.copy(Nt).multiplyScalar(G).round())},this.getScissorTest=function(){return Jt},this.setScissorTest=function(N){ht.setScissorTest(Jt=N)},this.setOpaqueSort=function(N){nt=N},this.setTransparentSort=function(N){lt=N},this.getClearColor=function(N){return N.copy(Wt.getClearColor())},this.setClearColor=function(){Wt.setClearColor(...arguments)},this.getClearAlpha=function(){return Wt.getClearAlpha()},this.setClearAlpha=function(){Wt.setClearAlpha(...arguments)},this.clear=function(N=!0,W=!0,Q=!0){let et=0;if(N){let Y=!1;if(z!==null){const St=z.texture.format;Y=St===Vh||St===Hh||St===Ql}if(Y){const St=z.texture.type,Ut=St===Pi||St===Os||St===go||St===vo||St===Bh||St===zh,Gt=Wt.getClearColor(),Ht=Wt.getClearAlpha(),ne=Gt.r,ae=Gt.g,Qt=Gt.b;Ut?(x[0]=ne,x[1]=ae,x[2]=Qt,x[3]=Ht,H.clearBufferuiv(H.COLOR,0,x)):(b[0]=ne,b[1]=ae,b[2]=Qt,b[3]=Ht,H.clearBufferiv(H.COLOR,0,b))}else et|=H.COLOR_BUFFER_BIT}W&&(et|=H.DEPTH_BUFFER_BIT),Q&&(et|=H.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),H.clear(et)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",wt,!1),e.removeEventListener("webglcontextrestored",Vt,!1),e.removeEventListener("webglcontextcreationerror",xt,!1),Wt.dispose(),ot.dispose(),Zt.dispose(),_t.dispose(),se.dispose(),ue.dispose(),J.dispose(),Pt.dispose(),he.dispose(),rt.dispose(),bt.dispose(),bt.removeEventListener("sessionstart",ai),bt.removeEventListener("sessionend",Po),Oi.stop()};function wt(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),U=!0}function Vt(){console.log("THREE.WebGLRenderer: Context Restored."),U=!1;const N=Rt.autoReset,W=kt.enabled,Q=kt.autoUpdate,et=kt.needsUpdate,Y=kt.type;k(),Rt.autoReset=N,kt.enabled=W,kt.autoUpdate=Q,kt.needsUpdate=et,kt.type=Y}function xt(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function ft(N){const W=N.target;W.removeEventListener("dispose",ft),qt(W)}function qt(N){le(N),_t.remove(N)}function le(N){const W=_t.get(N).programs;W!==void 0&&(W.forEach(function(Q){rt.releaseProgram(Q)}),N.isShaderMaterial&&rt.releaseShaderCache(N))}this.renderBufferDirect=function(N,W,Q,et,Y,St){W===null&&(W=ie);const Ut=Y.isMesh&&Y.matrixWorld.determinant()<0,Gt=Oo(N,W,Q,et,Y);ht.setMaterial(et,Ut);let Ht=Q.index,ne=1;if(et.wireframe===!0){if(Ht=R.getWireframeAttribute(Q),Ht===void 0)return;ne=2}const ae=Q.drawRange,Qt=Q.attributes.position;let xe=ae.start*ne,Ie=(ae.start+ae.count)*ne;St!==null&&(xe=Math.max(xe,St.start*ne),Ie=Math.min(Ie,(St.start+St.count)*ne)),Ht!==null?(xe=Math.max(xe,0),Ie=Math.min(Ie,Ht.count)):Qt!=null&&(xe=Math.max(xe,0),Ie=Math.min(Ie,Qt.count));const Ye=Ie-xe;if(Ye<0||Ye===1/0)return;Pt.setup(Y,et,Gt,Q,Ht);let He,Oe=Lt;if(Ht!==null&&(He=B.get(Ht),Oe=te,Oe.setIndex(He)),Y.isMesh)et.wireframe===!0?(ht.setLineWidth(et.wireframeLinewidth*re()),Oe.setMode(H.LINES)):Oe.setMode(H.TRIANGLES);else if(Y.isLine){let ee=et.linewidth;ee===void 0&&(ee=1),ht.setLineWidth(ee*re()),Y.isLineSegments?Oe.setMode(H.LINES):Y.isLineLoop?Oe.setMode(H.LINE_LOOP):Oe.setMode(H.LINE_STRIP)}else Y.isPoints?Oe.setMode(H.POINTS):Y.isSprite&&Oe.setMode(H.TRIANGLES);if(Y.isBatchedMesh)if(Y._multiDrawInstances!==null)po("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Oe.renderMultiDrawInstances(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount,Y._multiDrawInstances);else if(ct.get("WEBGL_multi_draw"))Oe.renderMultiDraw(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount);else{const ee=Y._multiDrawStarts,Ze=Y._multiDrawCounts,Te=Y._multiDrawCount,Cn=Ht?B.get(Ht).bytesPerElement:1,hs=_t.get(et).currentProgram.getUniforms();for(let Mn=0;Mn<Te;Mn++)hs.setValue(H,"_gl_DrawID",Mn),Oe.render(ee[Mn]/Cn,Ze[Mn])}else if(Y.isInstancedMesh)Oe.renderInstances(xe,Ye,Y.count);else if(Q.isInstancedBufferGeometry){const ee=Q._maxInstanceCount!==void 0?Q._maxInstanceCount:1/0,Ze=Math.min(Q.instanceCount,ee);Oe.renderInstances(xe,Ye,Ze)}else Oe.render(xe,Ye)};function Ue(N,W,Q){N.transparent===!0&&N.side===ns&&N.forceSinglePass===!1?(N.side=Yn,N.needsUpdate=!0,us(N,W,Q),N.side=Ps,N.needsUpdate=!0,us(N,W,Q),N.side=ns):us(N,W,Q)}this.compile=function(N,W,Q=null){Q===null&&(Q=N),_=Zt.get(Q),_.init(W),A.push(_),Q.traverseVisible(function(Y){Y.isLight&&Y.layers.test(W.layers)&&(_.pushLight(Y),Y.castShadow&&_.pushShadow(Y))}),N!==Q&&N.traverseVisible(function(Y){Y.isLight&&Y.layers.test(W.layers)&&(_.pushLight(Y),Y.castShadow&&_.pushShadow(Y))}),_.setupLights();const et=new Set;return N.traverse(function(Y){if(!(Y.isMesh||Y.isPoints||Y.isLine||Y.isSprite))return;const St=Y.material;if(St)if(Array.isArray(St))for(let Ut=0;Ut<St.length;Ut++){const Gt=St[Ut];Ue(Gt,Q,Y),et.add(Gt)}else Ue(St,Q,Y),et.add(St)}),_=A.pop(),et},this.compileAsync=function(N,W,Q=null){const et=this.compile(N,W,Q);return new Promise(Y=>{function St(){if(et.forEach(function(Ut){_t.get(Ut).currentProgram.isReady()&&et.delete(Ut)}),et.size===0){Y(N);return}setTimeout(St,10)}ct.get("KHR_parallel_shader_compile")!==null?St():setTimeout(St,10)})};let Ee=null;function Mi(N){Ee&&Ee(N)}function ai(){Oi.stop()}function Po(){Oi.start()}const Oi=new rS;Oi.setAnimationLoop(Mi),typeof self<"u"&&Oi.setContext(self),this.setAnimationLoop=function(N){Ee=N,bt.setAnimationLoop(N),N===null?Oi.stop():Oi.start()},bt.addEventListener("sessionstart",ai),bt.addEventListener("sessionend",Po),this.render=function(N,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(U===!0)return;if(N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),bt.enabled===!0&&bt.isPresenting===!0&&(bt.cameraAutoUpdate===!0&&bt.updateCamera(W),W=bt.getCamera()),N.isScene===!0&&N.onBeforeRender(T,N,W,z),_=Zt.get(N,A.length),_.init(W),A.push(_),Tt.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),zt.setFromProjectionMatrix(Tt,yi,W.reversedDepth),Dt=this.localClippingEnabled,st=Ct.init(this.clippingPlanes,Dt),S=ot.get(N,E.length),S.init(),E.push(S),bt.enabled===!0&&bt.isPresenting===!0){const St=T.xr.getDepthSensingMesh();St!==null&&_a(St,W,-1/0,T.sortObjects)}_a(N,W,0,T.sortObjects),S.finish(),T.sortObjects===!0&&S.sort(nt,lt),Be=bt.enabled===!1||bt.isPresenting===!1||bt.hasDepthSensing()===!1,Be&&Wt.addToRenderList(S,N),this.info.render.frame++,st===!0&&Ct.beginShadows();const Q=_.state.shadowsArray;kt.render(Q,N,W),st===!0&&Ct.endShadows(),this.info.autoReset===!0&&this.info.reset();const et=S.opaque,Y=S.transmissive;if(_.setupLights(),W.isArrayCamera){const St=W.cameras;if(Y.length>0)for(let Ut=0,Gt=St.length;Ut<Gt;Ut++){const Ht=St[Ut];Io(et,Y,N,Ht)}Be&&Wt.render(N);for(let Ut=0,Gt=St.length;Ut<Gt;Ut++){const Ht=St[Ut];Bi(S,N,Ht,Ht.viewport)}}else Y.length>0&&Io(et,Y,N,W),Be&&Wt.render(N),Bi(S,N,W);z!==null&&P===0&&(Et.updateMultisampleRenderTarget(z),Et.updateRenderTargetMipmap(z)),N.isScene===!0&&N.onAfterRender(T,N,W),Pt.resetDefaultState(),w=-1,C=null,A.pop(),A.length>0?(_=A[A.length-1],st===!0&&Ct.setGlobalState(T.clippingPlanes,_.state.camera)):_=null,E.pop(),E.length>0?S=E[E.length-1]:S=null};function _a(N,W,Q,et){if(N.visible===!1)return;if(N.layers.test(W.layers)){if(N.isGroup)Q=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(W);else if(N.isLight)_.pushLight(N),N.castShadow&&_.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||zt.intersectsSprite(N)){et&&Yt.setFromMatrixPosition(N.matrixWorld).applyMatrix4(Tt);const Ut=J.update(N),Gt=N.material;Gt.visible&&S.push(N,Ut,Gt,Q,Yt.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||zt.intersectsObject(N))){const Ut=J.update(N),Gt=N.material;if(et&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),Yt.copy(N.boundingSphere.center)):(Ut.boundingSphere===null&&Ut.computeBoundingSphere(),Yt.copy(Ut.boundingSphere.center)),Yt.applyMatrix4(N.matrixWorld).applyMatrix4(Tt)),Array.isArray(Gt)){const Ht=Ut.groups;for(let ne=0,ae=Ht.length;ne<ae;ne++){const Qt=Ht[ne],xe=Gt[Qt.materialIndex];xe&&xe.visible&&S.push(N,Ut,xe,Q,Yt.z,Qt)}}else Gt.visible&&S.push(N,Ut,Gt,Q,Yt.z,null)}}const St=N.children;for(let Ut=0,Gt=St.length;Ut<Gt;Ut++)_a(St[Ut],W,Q,et)}function Bi(N,W,Q,et){const Y=N.opaque,St=N.transmissive,Ut=N.transparent;_.setupLightsView(Q),st===!0&&Ct.setGlobalState(T.clippingPlanes,Q),et&&ht.viewport(I.copy(et)),Y.length>0&&ri(Y,W,Q),St.length>0&&ri(St,W,Q),Ut.length>0&&ri(Ut,W,Q),ht.buffers.depth.setTest(!0),ht.buffers.depth.setMask(!0),ht.buffers.color.setMask(!0),ht.setPolygonOffset(!1)}function Io(N,W,Q,et){if((Q.isScene===!0?Q.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[et.id]===void 0&&(_.state.transmissionRenderTarget[et.id]=new os(1,1,{generateMipmaps:!0,type:ct.has("EXT_color_buffer_half_float")||ct.has("EXT_color_buffer_float")?wo:Pi,minFilter:is,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Ae.workingColorSpace}));const St=_.state.transmissionRenderTarget[et.id],Ut=et.viewport||I;St.setSize(Ut.z*T.transmissionResolutionScale,Ut.w*T.transmissionResolutionScale);const Gt=T.getRenderTarget(),Ht=T.getActiveCubeFace(),ne=T.getActiveMipmapLevel();T.setRenderTarget(St),T.getClearColor(K),at=T.getClearAlpha(),at<1&&T.setClearColor(16777215,.5),T.clear(),Be&&Wt.render(Q);const ae=T.toneMapping;T.toneMapping=as;const Qt=et.viewport;if(et.viewport!==void 0&&(et.viewport=void 0),_.setupLightsView(et),st===!0&&Ct.setGlobalState(T.clippingPlanes,et),ri(N,Q,et),Et.updateMultisampleRenderTarget(St),Et.updateRenderTargetMipmap(St),ct.has("WEBGL_multisampled_render_to_texture")===!1){let xe=!1;for(let Ie=0,Ye=W.length;Ie<Ye;Ie++){const He=W[Ie],Oe=He.object,ee=He.geometry,Ze=He.material,Te=He.group;if(Ze.side===ns&&Oe.layers.test(et.layers)){const Cn=Ze.side;Ze.side=Yn,Ze.needsUpdate=!0,bi(Oe,Q,et,ee,Ze,Te),Ze.side=Cn,Ze.needsUpdate=!0,xe=!0}}xe===!0&&(Et.updateMultisampleRenderTarget(St),Et.updateRenderTargetMipmap(St))}T.setRenderTarget(Gt,Ht,ne),T.setClearColor(K,at),Qt!==void 0&&(et.viewport=Qt),T.toneMapping=ae}function ri(N,W,Q){const et=W.isScene===!0?W.overrideMaterial:null;for(let Y=0,St=N.length;Y<St;Y++){const Ut=N[Y],Gt=Ut.object,Ht=Ut.geometry,ne=Ut.group;let ae=Ut.material;ae.allowOverride===!0&&et!==null&&(ae=et),Gt.layers.test(Q.layers)&&bi(Gt,W,Q,Ht,ae,ne)}}function bi(N,W,Q,et,Y,St){N.onBeforeRender(T,W,Q,et,Y,St),N.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),Y.onBeforeRender(T,W,Q,et,N,St),Y.transparent===!0&&Y.side===ns&&Y.forceSinglePass===!1?(Y.side=Yn,Y.needsUpdate=!0,T.renderBufferDirect(Q,W,et,Y,N,St),Y.side=Ps,Y.needsUpdate=!0,T.renderBufferDirect(Q,W,et,Y,N,St),Y.side=ns):T.renderBufferDirect(Q,W,et,Y,N,St),N.onAfterRender(T,W,Q,et,Y,St)}function us(N,W,Q){W.isScene!==!0&&(W=ie);const et=_t.get(N),Y=_.state.lights,St=_.state.shadowsArray,Ut=Y.state.version,Gt=rt.getParameters(N,Y.state,St,W,Q),Ht=rt.getProgramCacheKey(Gt);let ne=et.programs;et.environment=N.isMeshStandardMaterial?W.environment:null,et.fog=W.fog,et.envMap=(N.isMeshStandardMaterial?ue:se).get(N.envMap||et.environment),et.envMapRotation=et.environment!==null&&N.envMap===null?W.environmentRotation:N.envMapRotation,ne===void 0&&(N.addEventListener("dispose",ft),ne=new Map,et.programs=ne);let ae=ne.get(Ht);if(ae!==void 0){if(et.currentProgram===ae&&et.lightsStateVersion===Ut)return dr(N,Gt),ae}else Gt.uniforms=rt.getUniforms(N),N.onBeforeCompile(Gt,T),ae=rt.acquireProgram(Gt,Ht),ne.set(Ht,ae),et.uniforms=Gt.uniforms;const Qt=et.uniforms;return(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(Qt.clippingPlanes=Ct.uniform),dr(N,Gt),et.needsLights=cc(N),et.lightsStateVersion=Ut,et.needsLights&&(Qt.ambientLightColor.value=Y.state.ambient,Qt.lightProbe.value=Y.state.probe,Qt.directionalLights.value=Y.state.directional,Qt.directionalLightShadows.value=Y.state.directionalShadow,Qt.spotLights.value=Y.state.spot,Qt.spotLightShadows.value=Y.state.spotShadow,Qt.rectAreaLights.value=Y.state.rectArea,Qt.ltc_1.value=Y.state.rectAreaLTC1,Qt.ltc_2.value=Y.state.rectAreaLTC2,Qt.pointLights.value=Y.state.point,Qt.pointLightShadows.value=Y.state.pointShadow,Qt.hemisphereLights.value=Y.state.hemi,Qt.directionalShadowMap.value=Y.state.directionalShadowMap,Qt.directionalShadowMatrix.value=Y.state.directionalShadowMatrix,Qt.spotShadowMap.value=Y.state.spotShadowMap,Qt.spotLightMatrix.value=Y.state.spotLightMatrix,Qt.spotLightMap.value=Y.state.spotLightMap,Qt.pointShadowMap.value=Y.state.pointShadowMap,Qt.pointShadowMatrix.value=Y.state.pointShadowMatrix),et.currentProgram=ae,et.uniformsList=null,ae}function je(N){if(N.uniformsList===null){const W=N.currentProgram.getUniforms();N.uniformsList=Vu.seqWithValue(W.seq,N.uniforms)}return N.uniformsList}function dr(N,W){const Q=_t.get(N);Q.outputColorSpace=W.outputColorSpace,Q.batching=W.batching,Q.batchingColor=W.batchingColor,Q.instancing=W.instancing,Q.instancingColor=W.instancingColor,Q.instancingMorph=W.instancingMorph,Q.skinning=W.skinning,Q.morphTargets=W.morphTargets,Q.morphNormals=W.morphNormals,Q.morphColors=W.morphColors,Q.morphTargetsCount=W.morphTargetsCount,Q.numClippingPlanes=W.numClippingPlanes,Q.numIntersection=W.numClipIntersection,Q.vertexAlphas=W.vertexAlphas,Q.vertexTangents=W.vertexTangents,Q.toneMapping=W.toneMapping}function Oo(N,W,Q,et,Y){W.isScene!==!0&&(W=ie),Et.resetTextureUnits();const St=W.fog,Ut=et.isMeshStandardMaterial?W.environment:null,Gt=z===null?T.outputColorSpace:z.isXRRenderTarget===!0?z.texture.colorSpace:fa,Ht=(et.isMeshStandardMaterial?ue:se).get(et.envMap||Ut),ne=et.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,ae=!!Q.attributes.tangent&&(!!et.normalMap||et.anisotropy>0),Qt=!!Q.morphAttributes.position,xe=!!Q.morphAttributes.normal,Ie=!!Q.morphAttributes.color;let Ye=as;et.toneMapped&&(z===null||z.isXRRenderTarget===!0)&&(Ye=T.toneMapping);const He=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,Oe=He!==void 0?He.length:0,ee=_t.get(et),Ze=_.state.lights;if(st===!0&&(Dt===!0||N!==C)){const mn=N===C&&et.id===w;Ct.setState(et,N,mn)}let Te=!1;et.version===ee.__version?(ee.needsLights&&ee.lightsStateVersion!==Ze.state.version||ee.outputColorSpace!==Gt||Y.isBatchedMesh&&ee.batching===!1||!Y.isBatchedMesh&&ee.batching===!0||Y.isBatchedMesh&&ee.batchingColor===!0&&Y.colorTexture===null||Y.isBatchedMesh&&ee.batchingColor===!1&&Y.colorTexture!==null||Y.isInstancedMesh&&ee.instancing===!1||!Y.isInstancedMesh&&ee.instancing===!0||Y.isSkinnedMesh&&ee.skinning===!1||!Y.isSkinnedMesh&&ee.skinning===!0||Y.isInstancedMesh&&ee.instancingColor===!0&&Y.instanceColor===null||Y.isInstancedMesh&&ee.instancingColor===!1&&Y.instanceColor!==null||Y.isInstancedMesh&&ee.instancingMorph===!0&&Y.morphTexture===null||Y.isInstancedMesh&&ee.instancingMorph===!1&&Y.morphTexture!==null||ee.envMap!==Ht||et.fog===!0&&ee.fog!==St||ee.numClippingPlanes!==void 0&&(ee.numClippingPlanes!==Ct.numPlanes||ee.numIntersection!==Ct.numIntersection)||ee.vertexAlphas!==ne||ee.vertexTangents!==ae||ee.morphTargets!==Qt||ee.morphNormals!==xe||ee.morphColors!==Ie||ee.toneMapping!==Ye||ee.morphTargetsCount!==Oe)&&(Te=!0):(Te=!0,ee.__version=et.version);let Cn=ee.currentProgram;Te===!0&&(Cn=us(et,W,Y));let hs=!1,Mn=!1,zs=!1;const We=Cn.getUniforms(),Hn=ee.uniforms;if(ht.useProgram(Cn.program)&&(hs=!0,Mn=!0,zs=!0),et.id!==w&&(w=et.id,Mn=!0),hs||C!==N){ht.buffers.depth.getReversed()&&N.reversedDepth!==!0&&(N._reversedDepth=!0,N.updateProjectionMatrix()),We.setValue(H,"projectionMatrix",N.projectionMatrix),We.setValue(H,"viewMatrix",N.matrixWorldInverse);const wn=We.map.cameraPosition;wn!==void 0&&wn.setValue(H,jt.setFromMatrixPosition(N.matrixWorld)),vt.logarithmicDepthBuffer&&We.setValue(H,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(et.isMeshPhongMaterial||et.isMeshToonMaterial||et.isMeshLambertMaterial||et.isMeshBasicMaterial||et.isMeshStandardMaterial||et.isShaderMaterial)&&We.setValue(H,"isOrthographic",N.isOrthographicCamera===!0),C!==N&&(C=N,Mn=!0,zs=!0)}if(Y.isSkinnedMesh){We.setOptional(H,Y,"bindMatrix"),We.setOptional(H,Y,"bindMatrixInverse");const mn=Y.skeleton;mn&&(mn.boneTexture===null&&mn.computeBoneTexture(),We.setValue(H,"boneTexture",mn.boneTexture,Et))}Y.isBatchedMesh&&(We.setOptional(H,Y,"batchingTexture"),We.setValue(H,"batchingTexture",Y._matricesTexture,Et),We.setOptional(H,Y,"batchingIdTexture"),We.setValue(H,"batchingIdTexture",Y._indirectTexture,Et),We.setOptional(H,Y,"batchingColorTexture"),Y._colorsTexture!==null&&We.setValue(H,"batchingColorTexture",Y._colorsTexture,Et));const Vn=Q.morphAttributes;if((Vn.position!==void 0||Vn.normal!==void 0||Vn.color!==void 0)&&yt.update(Y,Q,Cn),(Mn||ee.receiveShadow!==Y.receiveShadow)&&(ee.receiveShadow=Y.receiveShadow,We.setValue(H,"receiveShadow",Y.receiveShadow)),et.isMeshGouraudMaterial&&et.envMap!==null&&(Hn.envMap.value=Ht,Hn.flipEnvMap.value=Ht.isCubeTexture&&Ht.isRenderTargetTexture===!1?-1:1),et.isMeshStandardMaterial&&et.envMap===null&&W.environment!==null&&(Hn.envMapIntensity.value=W.environmentIntensity),Mn&&(We.setValue(H,"toneMappingExposure",T.toneMappingExposure),ee.needsLights&&lc(Hn,zs),St&&et.fog===!0&&gt.refreshFogUniforms(Hn,St),gt.refreshMaterialUniforms(Hn,et,G,X,_.state.transmissionRenderTarget[N.id]),Vu.upload(H,je(ee),Hn,Et)),et.isShaderMaterial&&et.uniformsNeedUpdate===!0&&(Vu.upload(H,je(ee),Hn,Et),et.uniformsNeedUpdate=!1),et.isSpriteMaterial&&We.setValue(H,"center",Y.center),We.setValue(H,"modelViewMatrix",Y.modelViewMatrix),We.setValue(H,"normalMatrix",Y.normalMatrix),We.setValue(H,"modelMatrix",Y.matrixWorld),et.isShaderMaterial||et.isRawShaderMaterial){const mn=et.uniformsGroups;for(let wn=0,pr=mn.length;wn<pr;wn++){const Kn=mn[wn];he.update(Kn,Cn),he.bind(Kn,Cn)}}return Cn}function lc(N,W){N.ambientLightColor.needsUpdate=W,N.lightProbe.needsUpdate=W,N.directionalLights.needsUpdate=W,N.directionalLightShadows.needsUpdate=W,N.pointLights.needsUpdate=W,N.pointLightShadows.needsUpdate=W,N.spotLights.needsUpdate=W,N.spotLightShadows.needsUpdate=W,N.rectAreaLights.needsUpdate=W,N.hemisphereLights.needsUpdate=W}function cc(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return D},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return z},this.setRenderTargetTextures=function(N,W,Q){const et=_t.get(N);et.__autoAllocateDepthBuffer=N.resolveDepthBuffer===!1,et.__autoAllocateDepthBuffer===!1&&(et.__useRenderToTexture=!1),_t.get(N.texture).__webglTexture=W,_t.get(N.depthTexture).__webglTexture=et.__autoAllocateDepthBuffer?void 0:Q,et.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(N,W){const Q=_t.get(N);Q.__webglFramebuffer=W,Q.__useDefaultFramebuffer=W===void 0};const mf=H.createFramebuffer();this.setRenderTarget=function(N,W=0,Q=0){z=N,D=W,P=Q;let et=!0,Y=null,St=!1,Ut=!1;if(N){const Ht=_t.get(N);if(Ht.__useDefaultFramebuffer!==void 0)ht.bindFramebuffer(H.FRAMEBUFFER,null),et=!1;else if(Ht.__webglFramebuffer===void 0)Et.setupRenderTarget(N);else if(Ht.__hasExternalTextures)Et.rebindTextures(N,_t.get(N.texture).__webglTexture,_t.get(N.depthTexture).__webglTexture);else if(N.depthBuffer){const Qt=N.depthTexture;if(Ht.__boundDepthTexture!==Qt){if(Qt!==null&&_t.has(Qt)&&(N.width!==Qt.image.width||N.height!==Qt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Et.setupDepthRenderbuffer(N)}}const ne=N.texture;(ne.isData3DTexture||ne.isDataArrayTexture||ne.isCompressedArrayTexture)&&(Ut=!0);const ae=_t.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(ae[W])?Y=ae[W][Q]:Y=ae[W],St=!0):N.samples>0&&Et.useMultisampledRTT(N)===!1?Y=_t.get(N).__webglMultisampledFramebuffer:Array.isArray(ae)?Y=ae[Q]:Y=ae,I.copy(N.viewport),$.copy(N.scissor),q=N.scissorTest}else I.copy(mt).multiplyScalar(G).floor(),$.copy(Nt).multiplyScalar(G).floor(),q=Jt;if(Q!==0&&(Y=mf),ht.bindFramebuffer(H.FRAMEBUFFER,Y)&&et&&ht.drawBuffers(N,Y),ht.viewport(I),ht.scissor($),ht.setScissorTest(q),St){const Ht=_t.get(N.texture);H.framebufferTexture2D(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_CUBE_MAP_POSITIVE_X+W,Ht.__webglTexture,Q)}else if(Ut){const Ht=W;for(let ne=0;ne<N.textures.length;ne++){const ae=_t.get(N.textures[ne]);H.framebufferTextureLayer(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0+ne,ae.__webglTexture,Q,Ht)}}else if(N!==null&&Q!==0){const Ht=_t.get(N.texture);H.framebufferTexture2D(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_2D,Ht.__webglTexture,Q)}w=-1},this.readRenderTargetPixels=function(N,W,Q,et,Y,St,Ut,Gt=0){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ht=_t.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&Ut!==void 0&&(Ht=Ht[Ut]),Ht){ht.bindFramebuffer(H.FRAMEBUFFER,Ht);try{const ne=N.textures[Gt],ae=ne.format,Qt=ne.type;if(!vt.textureFormatReadable(ae)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!vt.textureTypeReadable(Qt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=N.width-et&&Q>=0&&Q<=N.height-Y&&(N.textures.length>1&&H.readBuffer(H.COLOR_ATTACHMENT0+Gt),H.readPixels(W,Q,et,Y,Kt.convert(ae),Kt.convert(Qt),St))}finally{const ne=z!==null?_t.get(z).__webglFramebuffer:null;ht.bindFramebuffer(H.FRAMEBUFFER,ne)}}},this.readRenderTargetPixelsAsync=async function(N,W,Q,et,Y,St,Ut,Gt=0){if(!(N&&N.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ht=_t.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&Ut!==void 0&&(Ht=Ht[Ut]),Ht)if(W>=0&&W<=N.width-et&&Q>=0&&Q<=N.height-Y){ht.bindFramebuffer(H.FRAMEBUFFER,Ht);const ne=N.textures[Gt],ae=ne.format,Qt=ne.type;if(!vt.textureFormatReadable(ae))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!vt.textureTypeReadable(Qt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const xe=H.createBuffer();H.bindBuffer(H.PIXEL_PACK_BUFFER,xe),H.bufferData(H.PIXEL_PACK_BUFFER,St.byteLength,H.STREAM_READ),N.textures.length>1&&H.readBuffer(H.COLOR_ATTACHMENT0+Gt),H.readPixels(W,Q,et,Y,Kt.convert(ae),Kt.convert(Qt),0);const Ie=z!==null?_t.get(z).__webglFramebuffer:null;ht.bindFramebuffer(H.FRAMEBUFFER,Ie);const Ye=H.fenceSync(H.SYNC_GPU_COMMANDS_COMPLETE,0);return H.flush(),await FE(H,Ye,4),H.bindBuffer(H.PIXEL_PACK_BUFFER,xe),H.getBufferSubData(H.PIXEL_PACK_BUFFER,0,St),H.deleteBuffer(xe),H.deleteSync(Ye),St}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(N,W=null,Q=0){const et=Math.pow(2,-Q),Y=Math.floor(N.image.width*et),St=Math.floor(N.image.height*et),Ut=W!==null?W.x:0,Gt=W!==null?W.y:0;Et.setTexture2D(N,0),H.copyTexSubImage2D(H.TEXTURE_2D,Q,0,0,Ut,Gt,Y,St),ht.unbindTexture()};const Bo=H.createFramebuffer(),zo=H.createFramebuffer();this.copyTextureToTexture=function(N,W,Q=null,et=null,Y=0,St=null){St===null&&(Y!==0?(po("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),St=Y,Y=0):St=0);let Ut,Gt,Ht,ne,ae,Qt,xe,Ie,Ye;const He=N.isCompressedTexture?N.mipmaps[St]:N.image;if(Q!==null)Ut=Q.max.x-Q.min.x,Gt=Q.max.y-Q.min.y,Ht=Q.isBox3?Q.max.z-Q.min.z:1,ne=Q.min.x,ae=Q.min.y,Qt=Q.isBox3?Q.min.z:0;else{const Vn=Math.pow(2,-Y);Ut=Math.floor(He.width*Vn),Gt=Math.floor(He.height*Vn),N.isDataArrayTexture?Ht=He.depth:N.isData3DTexture?Ht=Math.floor(He.depth*Vn):Ht=1,ne=0,ae=0,Qt=0}et!==null?(xe=et.x,Ie=et.y,Ye=et.z):(xe=0,Ie=0,Ye=0);const Oe=Kt.convert(W.format),ee=Kt.convert(W.type);let Ze;W.isData3DTexture?(Et.setTexture3D(W,0),Ze=H.TEXTURE_3D):W.isDataArrayTexture||W.isCompressedArrayTexture?(Et.setTexture2DArray(W,0),Ze=H.TEXTURE_2D_ARRAY):(Et.setTexture2D(W,0),Ze=H.TEXTURE_2D),H.pixelStorei(H.UNPACK_FLIP_Y_WEBGL,W.flipY),H.pixelStorei(H.UNPACK_PREMULTIPLY_ALPHA_WEBGL,W.premultiplyAlpha),H.pixelStorei(H.UNPACK_ALIGNMENT,W.unpackAlignment);const Te=H.getParameter(H.UNPACK_ROW_LENGTH),Cn=H.getParameter(H.UNPACK_IMAGE_HEIGHT),hs=H.getParameter(H.UNPACK_SKIP_PIXELS),Mn=H.getParameter(H.UNPACK_SKIP_ROWS),zs=H.getParameter(H.UNPACK_SKIP_IMAGES);H.pixelStorei(H.UNPACK_ROW_LENGTH,He.width),H.pixelStorei(H.UNPACK_IMAGE_HEIGHT,He.height),H.pixelStorei(H.UNPACK_SKIP_PIXELS,ne),H.pixelStorei(H.UNPACK_SKIP_ROWS,ae),H.pixelStorei(H.UNPACK_SKIP_IMAGES,Qt);const We=N.isDataArrayTexture||N.isData3DTexture,Hn=W.isDataArrayTexture||W.isData3DTexture;if(N.isDepthTexture){const Vn=_t.get(N),mn=_t.get(W),wn=_t.get(Vn.__renderTarget),pr=_t.get(mn.__renderTarget);ht.bindFramebuffer(H.READ_FRAMEBUFFER,wn.__webglFramebuffer),ht.bindFramebuffer(H.DRAW_FRAMEBUFFER,pr.__webglFramebuffer);for(let Kn=0;Kn<Ht;Kn++)We&&(H.framebufferTextureLayer(H.READ_FRAMEBUFFER,H.COLOR_ATTACHMENT0,_t.get(N).__webglTexture,Y,Qt+Kn),H.framebufferTextureLayer(H.DRAW_FRAMEBUFFER,H.COLOR_ATTACHMENT0,_t.get(W).__webglTexture,St,Ye+Kn)),H.blitFramebuffer(ne,ae,Ut,Gt,xe,Ie,Ut,Gt,H.DEPTH_BUFFER_BIT,H.NEAREST);ht.bindFramebuffer(H.READ_FRAMEBUFFER,null),ht.bindFramebuffer(H.DRAW_FRAMEBUFFER,null)}else if(Y!==0||N.isRenderTargetTexture||_t.has(N)){const Vn=_t.get(N),mn=_t.get(W);ht.bindFramebuffer(H.READ_FRAMEBUFFER,Bo),ht.bindFramebuffer(H.DRAW_FRAMEBUFFER,zo);for(let wn=0;wn<Ht;wn++)We?H.framebufferTextureLayer(H.READ_FRAMEBUFFER,H.COLOR_ATTACHMENT0,Vn.__webglTexture,Y,Qt+wn):H.framebufferTexture2D(H.READ_FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_2D,Vn.__webglTexture,Y),Hn?H.framebufferTextureLayer(H.DRAW_FRAMEBUFFER,H.COLOR_ATTACHMENT0,mn.__webglTexture,St,Ye+wn):H.framebufferTexture2D(H.DRAW_FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_2D,mn.__webglTexture,St),Y!==0?H.blitFramebuffer(ne,ae,Ut,Gt,xe,Ie,Ut,Gt,H.COLOR_BUFFER_BIT,H.NEAREST):Hn?H.copyTexSubImage3D(Ze,St,xe,Ie,Ye+wn,ne,ae,Ut,Gt):H.copyTexSubImage2D(Ze,St,xe,Ie,ne,ae,Ut,Gt);ht.bindFramebuffer(H.READ_FRAMEBUFFER,null),ht.bindFramebuffer(H.DRAW_FRAMEBUFFER,null)}else Hn?N.isDataTexture||N.isData3DTexture?H.texSubImage3D(Ze,St,xe,Ie,Ye,Ut,Gt,Ht,Oe,ee,He.data):W.isCompressedArrayTexture?H.compressedTexSubImage3D(Ze,St,xe,Ie,Ye,Ut,Gt,Ht,Oe,He.data):H.texSubImage3D(Ze,St,xe,Ie,Ye,Ut,Gt,Ht,Oe,ee,He):N.isDataTexture?H.texSubImage2D(H.TEXTURE_2D,St,xe,Ie,Ut,Gt,Oe,ee,He.data):N.isCompressedTexture?H.compressedTexSubImage2D(H.TEXTURE_2D,St,xe,Ie,He.width,He.height,Oe,He.data):H.texSubImage2D(H.TEXTURE_2D,St,xe,Ie,Ut,Gt,Oe,ee,He);H.pixelStorei(H.UNPACK_ROW_LENGTH,Te),H.pixelStorei(H.UNPACK_IMAGE_HEIGHT,Cn),H.pixelStorei(H.UNPACK_SKIP_PIXELS,hs),H.pixelStorei(H.UNPACK_SKIP_ROWS,Mn),H.pixelStorei(H.UNPACK_SKIP_IMAGES,zs),St===0&&W.generateMipmaps&&H.generateMipmap(Ze),ht.unbindTexture()},this.copyTextureToTexture3D=function(N,W,Q=null,et=null,Y=0){return po('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(N,W,Q,et,Y)},this.initRenderTarget=function(N){_t.get(N).__webglFramebuffer===void 0&&Et.setupRenderTarget(N)},this.initTexture=function(N){N.isCubeTexture?Et.setTextureCube(N,0):N.isData3DTexture?Et.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?Et.setTexture2DArray(N,0):Et.setTexture2D(N,0),ht.unbindTexture()},this.resetState=function(){D=0,P=0,z=null,ht.reset(),Pt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return yi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=Ae._getDrawingBufferColorSpace(t),e.unpackColorSpace=Ae._getUnpackColorSpace()}}const n3=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:pm,AddEquation:la,AddOperation:Py,AdditiveAnimationBlendMode:bm,AdditiveBlending:qp,AgXToneMapping:Fy,AlphaFormat:ym,AlwaysCompare:tx,AlwaysDepth:qu,AlwaysStencilFunc:jp,AmbientLight:Zx,AnimationAction:iS,AnimationClip:Zl,AnimationLoader:fT,AnimationMixer:VT,AnimationObjectGroup:FT,AnimationUtils:lT,ArcCurve:yx,ArrayCamera:tS,ArrowHelper:dA,AttachedBindMode:Kp,Audio:eS,AudioAnalyser:RT,AudioContext:Zm,AudioListener:AT,AudioLoader:bT,AxesHelper:pA,BackSide:Yn,BasicDepthPacking:Xy,BasicShadowMap:py,BatchedMesh:px,Bone:Um,BooleanKeyframeTrack:hr,Box2:JT,Box3:zn,Box3Helper:hA,BoxGeometry:ur,BoxHelper:uA,BufferAttribute:ke,BufferGeometry:_e,BufferGeometryLoader:$x,ByteType:gm,Cache:ss,Camera:Xh,CameraHelper:cA,CanvasTexture:U1,CapsuleGeometry:Qh,CatmullRomCurve3:xx,CineonToneMapping:By,CircleGeometry:$h,ClampToEdgeWrapping:Li,Clock:Km,Color:Bt,ColorKeyframeTrack:Xm,ColorManagement:Ae,CompressedArrayTexture:R1,CompressedCubeTexture:D1,CompressedTexture:Jh,CompressedTextureLoader:dT,ConeGeometry:ec,ConstantAlphaFactor:Uy,ConstantColorFactor:Ry,Controls:gA,CubeCamera:ox,CubeReflectionMapping:Is,CubeRefractionMapping:ha,CubeTexture:$l,CubeTextureLoader:pT,CubeUVReflectionMapping:Co,CubicBezierCurve:Im,CubicBezierCurve3:Sx,CubicInterpolant:Hx,CullFaceBack:Xp,CullFaceFront:dy,CullFaceFrontBack:zb,CullFaceNone:fy,Curve:Ki,CurvePath:bx,CustomBlending:my,CustomToneMapping:zy,CylinderGeometry:tc,Cylindrical:jT,Data3DTexture:Wh,DataArrayTexture:kh,DataTexture:rs,DataTextureLoader:mT,DataUtils:t1,DecrementStencilOp:Qb,DecrementWrapStencilOp:tE,DefaultLoadingManager:kx,DepthFormat:_o,DepthStencilFormat:yo,DepthTexture:Lm,DetachedBindMode:Vy,DirectionalLight:Yx,DirectionalLightHelper:lA,DiscreteInterpolant:Vx,DodecahedronGeometry:tf,DoubleSide:ns,DstAlphaFactor:Ey,DstColorFactor:Ay,DynamicCopyUsage:mE,DynamicDrawUsage:cE,DynamicReadUsage:fE,EdgesGeometry:_x,EllipseCurve:ef,EqualCompare:jy,EqualDepth:Zu,EqualStencilFunc:sE,EquirectangularReflectionMapping:Pl,EquirectangularRefractionMapping:Il,Euler:Si,EventDispatcher:ls,ExtrudeGeometry:nf,FileLoader:Bs,Float16BufferAttribute:o1,Float32BufferAttribute:Xt,FloatType:ni,Fog:Yh,FogExp2:qh,FramebufferTexture:w1,FrontSide:Ps,Frustum:Do,FrustumArray:jh,GLBufferAttribute:qT,GLSL1:vE,GLSL3:Jp,GreaterCompare:Jy,GreaterDepth:ju,GreaterEqualCompare:$y,GreaterEqualDepth:Ku,GreaterEqualStencilFunc:lE,GreaterStencilFunc:rE,GridHelper:rA,Group:ho,HalfFloatType:wo,HemisphereLight:Wx,HemisphereLightHelper:aA,IcosahedronGeometry:sf,ImageBitmapLoader:MT,ImageLoader:Kl,ImageUtils:ix,IncrementStencilOp:Jb,IncrementWrapStencilOp:$b,InstancedBufferAttribute:Eo,InstancedBufferGeometry:Qx,InstancedInterleavedBuffer:XT,InstancedMesh:dx,Int16BufferAttribute:a1,Int32BufferAttribute:r1,Int8BufferAttribute:n1,IntType:Oh,InterleavedBuffer:Zh,InterleavedBufferAttribute:or,Interpolant:sc,InterpolateDiscrete:zl,InterpolateLinear:Eh,InterpolateSmooth:Fu,InterpolationSamplingMode:xE,InterpolationSamplingType:yE,InvertStencilOp:eE,KeepStencilOp:Ja,KeyframeTrack:Ii,LOD:hx,LatheGeometry:af,Layers:Mo,LessCompare:Ky,LessDepth:Yu,LessEqualCompare:Em,LessEqualDepth:rr,LessEqualStencilFunc:aE,LessStencilFunc:iE,Light:va,LightProbe:Jx,Line:da,Line3:tA,LineBasicMaterial:Zn,LineCurve:Om,LineCurve3:Mx,LineDashedMaterial:Bx,LineLoop:mx,LineSegments:cs,LinearFilter:fn,LinearInterpolant:Wm,LinearMipMapLinearFilter:Gb,LinearMipMapNearestFilter:Vb,LinearMipmapLinearFilter:is,LinearMipmapNearestFilter:El,LinearSRGBColorSpace:fa,LinearToneMapping:Iy,LinearTransfer:Hl,Loader:si,LoaderUtils:nm,LoadingManager:qm,LoopOnce:Gy,LoopPingPong:Wy,LoopRepeat:ky,MOUSE:Ob,Material:Fn,MaterialLoader:ff,MathUtils:BE,Matrix2:$m,Matrix3:me,Matrix4:ce,MaxEquation:yy,Mesh:un,MeshBasicMaterial:ma,MeshDepthMaterial:Vm,MeshDistanceMaterial:Gm,MeshLambertMaterial:Ix,MeshMatcapMaterial:Ox,MeshNormalMaterial:Px,MeshPhongMaterial:Nx,MeshPhysicalMaterial:Ux,MeshStandardMaterial:Hm,MeshToonMaterial:Lx,MinEquation:_y,MirroredRepeatWrapping:Bl,MixOperation:Ly,MultiplyBlending:Zp,MultiplyOperation:Jl,NearestFilter:Tn,NearestMipMapLinearFilter:Hb,NearestMipMapNearestFilter:Fb,NearestMipmapLinearFilter:co,NearestMipmapNearestFilter:mm,NeutralToneMapping:Hy,NeverCompare:Zy,NeverDepth:Xu,NeverStencilFunc:nE,NoBlending:Ns,NoColorSpace:Ds,NoToneMapping:as,NormalAnimationBlendMode:Gh,NormalBlending:ir,NotEqualCompare:Qy,NotEqualDepth:Ju,NotEqualStencilFunc:oE,NumberKeyframeTrack:ql,Object3D:De,ObjectLoader:xT,ObjectSpaceNormalMap:Yy,OctahedronGeometry:nc,OneFactor:Sy,OneMinusConstantAlphaFactor:Ny,OneMinusConstantColorFactor:Dy,OneMinusDstAlphaFactor:Ty,OneMinusDstColorFactor:Cy,OneMinusSrcAlphaFactor:Wu,OneMinusSrcColorFactor:by,OrthographicCamera:rc,PCFShadowMap:Ph,PCFSoftShadowMap:bl,PMREMGenerator:am,Path:wh,PerspectiveCamera:Sn,Plane:oa,PlaneGeometry:Uo,PlaneHelper:fA,PointLight:qx,PointLightHelper:iA,Points:gx,PointsMaterial:Nm,PolarGridHelper:oA,PolyhedronGeometry:ga,PositionalAudio:wT,PropertyBinding:we,PropertyMixer:nS,QuadraticBezierCurve:Bm,QuadraticBezierCurve3:zm,Quaternion:ii,QuaternionKeyframeTrack:ac,QuaternionLinearInterpolant:Gx,RED_GREEN_RGTC2_Format:Mh,RED_RGTC1_Format:Mm,REVISION:Lh,RGBADepthPacking:qy,RGBAFormat:Bn,RGBAIntegerFormat:Vh,RGBA_ASTC_10x10_Format:gh,RGBA_ASTC_10x5_Format:dh,RGBA_ASTC_10x6_Format:ph,RGBA_ASTC_10x8_Format:mh,RGBA_ASTC_12x10_Format:vh,RGBA_ASTC_12x12_Format:_h,RGBA_ASTC_4x4_Format:ah,RGBA_ASTC_5x4_Format:rh,RGBA_ASTC_5x5_Format:oh,RGBA_ASTC_6x5_Format:lh,RGBA_ASTC_6x6_Format:ch,RGBA_ASTC_8x5_Format:uh,RGBA_ASTC_8x6_Format:hh,RGBA_ASTC_8x8_Format:fh,RGBA_BPTC_Format:Rl,RGBA_ETC2_EAC_Format:sh,RGBA_PVRTC_2BPPV1_Format:eh,RGBA_PVRTC_4BPPV1_Format:th,RGBA_S3TC_DXT1_Format:Al,RGBA_S3TC_DXT3_Format:Cl,RGBA_S3TC_DXT5_Format:wl,RGBDepthPacking:Yb,RGBFormat:xm,RGBIntegerFormat:kb,RGB_BPTC_SIGNED_Format:yh,RGB_BPTC_UNSIGNED_Format:xh,RGB_ETC1_Format:nh,RGB_ETC2_Format:ih,RGB_PVRTC_2BPPV1_Format:$u,RGB_PVRTC_4BPPV1_Format:Qu,RGB_S3TC_DXT1_Format:Tl,RGDepthPacking:Zb,RGFormat:Sm,RGIntegerFormat:Hh,RawShaderMaterial:Dx,Ray:Ro,Raycaster:sS,RectAreaLight:Kx,RedFormat:Fh,RedIntegerFormat:Ql,ReinhardToneMapping:Oy,RenderTarget:Am,RenderTarget3D:GT,RepeatWrapping:Ol,ReplaceStencilOp:jb,ReverseSubtractEquation:vy,RingGeometry:rf,SIGNED_RED_GREEN_RGTC2_Format:bh,SIGNED_RED_RGTC1_Format:Sh,SRGBColorSpace:On,SRGBTransfer:Fe,Scene:Rm,ShaderChunk:ye,ShaderLib:qi,ShaderMaterial:Zi,ShadowMaterial:Rx,Shape:ar,ShapeGeometry:of,ShapePath:mA,ShapeUtils:Yi,ShortType:vm,Skeleton:Kh,SkeletonHelper:nA,SkinnedMesh:fx,Source:ua,Sphere:An,SphereGeometry:ic,Spherical:KT,SphericalHarmonics3:jx,SplineCurve:Fm,SpotLight:Xx,SpotLightHelper:eA,Sprite:ux,SpriteMaterial:Dm,SrcAlphaFactor:ku,SrcAlphaSaturateFactor:wy,SrcColorFactor:My,StaticCopyUsage:pE,StaticDrawUsage:Vl,StaticReadUsage:hE,StereoCamera:ET,StreamCopyUsage:gE,StreamDrawUsage:uE,StreamReadUsage:dE,StringKeyframeTrack:fr,SubtractEquation:gy,SubtractiveBlending:Yp,TOUCH:Bb,TangentSpaceNormalMap:pa,TetrahedronGeometry:lf,Texture:an,TextureLoader:gT,TextureUtils:SA,Timer:YT,TimestampQuery:_E,TorusGeometry:cf,TorusKnotGeometry:uf,Triangle:ei,TriangleFanDrawMode:qb,TriangleStripDrawMode:Xb,TrianglesDrawMode:Wb,TubeGeometry:hf,UVMapping:Ih,Uint16BufferAttribute:Cm,Uint32BufferAttribute:wm,Uint8BufferAttribute:i1,Uint8ClampedBufferAttribute:s1,Uniform:Qm,UniformsGroup:WT,UniformsLib:It,UniformsUtils:rx,UnsignedByteType:Pi,UnsignedInt248Type:vo,UnsignedInt5999Type:_m,UnsignedIntType:Os,UnsignedShort4444Type:Bh,UnsignedShort5551Type:zh,UnsignedShortType:go,VSMShadowMap:Xi,Vector2:dt,Vector3:O,Vector4:Re,VectorKeyframeTrack:Yl,VideoFrameTexture:C1,VideoTexture:vx,WebGL3DRenderTarget:WE,WebGLArrayRenderTarget:kE,WebGLCoordinateSystem:yi,WebGLCubeRenderTarget:lx,WebGLRenderTarget:os,WebGLRenderer:dS,WebGLUtils:hS,WebGPUCoordinateSystem:xo,WebXRController:Hu,WireframeGeometry:wx,WrapAroundEnding:Fl,ZeroCurvatureEnding:tr,ZeroFactor:xy,ZeroSlopeEnding:er,ZeroStencilOp:Kb,createCanvasElement:nx},Symbol.toStringTag,{value:"Module"}));var wp={exports:{}},Rp={},Dp={exports:{}},Up={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var W_;function i3(){if(W_)return Up;W_=1;var s=dm();function t(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var e=typeof Object.is=="function"?Object.is:t,n=s.useState,i=s.useEffect,o=s.useLayoutEffect,l=s.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),b=x[0].inst,S=x[1];return o(function(){b.value=v,b.getSnapshot=g,h(b)&&S({inst:b})},[m,v,g]),i(function(){return h(b)&&S({inst:b}),m(function(){h(b)&&S({inst:b})})},[m]),l(v),v}function h(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!e(m,v)}catch{return!0}}function f(m,g){return g()}var p=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return Up.useSyncExternalStore=s.useSyncExternalStore!==void 0?s.useSyncExternalStore:p,Up}var X_;function s3(){return X_||(X_=1,Dp.exports=i3()),Dp.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var q_;function a3(){if(q_)return Rp;q_=1;var s=dm(),t=s3();function e(f,p){return f===p&&(f!==0||1/f===1/p)||f!==f&&p!==p}var n=typeof Object.is=="function"?Object.is:e,i=t.useSyncExternalStore,o=s.useRef,l=s.useEffect,c=s.useMemo,h=s.useDebugValue;return Rp.useSyncExternalStoreWithSelector=function(f,p,m,g,v){var x=o(null);if(x.current===null){var b={hasValue:!1,value:null};x.current=b}else b=x.current;x=c(function(){function _(D){if(!E){if(E=!0,A=D,D=g(D),v!==void 0&&b.hasValue){var P=b.value;if(v(P,D))return T=P}return T=D}if(P=T,n(A,D))return P;var z=g(D);return v!==void 0&&v(P,z)?(A=D,P):(A=D,T=z)}var E=!1,A,T,U=m===void 0?null:m;return[function(){return _(p())},U===null?void 0:function(){return _(U())}]},[p,m,g,v]);var S=i(f,x[0],x[1]);return l(function(){b.hasValue=!0,b.value=S},[S]),h(S),S},Rp}var Y_;function r3(){return Y_||(Y_=1,wp.exports=a3()),wp.exports}var o3=r3();const l3=hy(o3),Z_=s=>{let t;const e=new Set,n=(f,p)=>{const m=typeof f=="function"?f(t):f;if(!Object.is(m,t)){const g=t;t=p??(typeof m!="object"||m===null)?m:Object.assign({},t,m),e.forEach(v=>v(t,g))}},i=()=>t,c={setState:n,getState:i,getInitialState:()=>h,subscribe:f=>(e.add(f),()=>e.delete(f))},h=t=s(n,i,c);return c},c3=(s=>s?Z_(s):Z_),{useSyncExternalStoreWithSelector:u3}=l3,h3=s=>s;function f3(s,t=h3,e){const n=u3(s.subscribe,s.getState,s.getInitialState,t,e);return Lb.useDebugValue(n),n}const K_=(s,t)=>{const e=c3(s),n=(i,o=t)=>f3(e,i,o);return Object.assign(n,e),n},d3=((s,t)=>s?K_(s,t):K_);var Np={exports:{}},Lp={exports:{}},Pp={exports:{}},Ip={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var j_;function p3(){return j_||(j_=1,(function(s){function t(F,X){var G=F.length;F.push(X);t:for(;0<G;){var nt=G-1>>>1,lt=F[nt];if(0<i(lt,X))F[nt]=X,F[G]=lt,G=nt;else break t}}function e(F){return F.length===0?null:F[0]}function n(F){if(F.length===0)return null;var X=F[0],G=F.pop();if(G!==X){F[0]=G;t:for(var nt=0,lt=F.length,mt=lt>>>1;nt<mt;){var Nt=2*(nt+1)-1,Jt=F[Nt],zt=Nt+1,st=F[zt];if(0>i(Jt,G))zt<lt&&0>i(st,Jt)?(F[nt]=st,F[zt]=G,nt=zt):(F[nt]=Jt,F[Nt]=G,nt=Nt);else if(zt<lt&&0>i(st,G))F[nt]=st,F[zt]=G,nt=zt;else break t}}return X}function i(F,X){var G=F.sortIndex-X.sortIndex;return G!==0?G:F.id-X.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var o=performance;s.unstable_now=function(){return o.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,b=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function A(F){for(var X=e(f);X!==null;){if(X.callback===null)n(f);else if(X.startTime<=F)n(f),X.sortIndex=X.expirationTime,t(h,X);else break;X=e(f)}}function T(F){if(b=!1,A(F),!x)if(e(h)!==null)x=!0,K();else{var X=e(f);X!==null&&at(T,X.startTime-F)}}var U=!1,D=-1,P=5,z=-1;function w(){return!(s.unstable_now()-z<P)}function C(){if(U){var F=s.unstable_now();z=F;var X=!0;try{t:{x=!1,b&&(b=!1,_(D),D=-1),v=!0;var G=g;try{e:{for(A(F),m=e(h);m!==null&&!(m.expirationTime>F&&w());){var nt=m.callback;if(typeof nt=="function"){m.callback=null,g=m.priorityLevel;var lt=nt(m.expirationTime<=F);if(F=s.unstable_now(),typeof lt=="function"){m.callback=lt,A(F),X=!0;break e}m===e(h)&&n(h),A(F)}else n(h);m=e(h)}if(m!==null)X=!0;else{var mt=e(f);mt!==null&&at(T,mt.startTime-F),X=!1}}break t}finally{m=null,g=G,v=!1}X=void 0}}finally{X?I():U=!1}}}var I;if(typeof E=="function")I=function(){E(C)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,q=$.port2;$.port1.onmessage=C,I=function(){q.postMessage(null)}}else I=function(){S(C,0)};function K(){U||(U=!0,I())}function at(F,X){D=S(function(){F(s.unstable_now())},X)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(F){F.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,K())},s.unstable_forceFrameRate=function(F){0>F||125<F?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<F?Math.floor(1e3/F):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(F){switch(g){case 1:case 2:case 3:var X=3;break;default:X=g}var G=g;g=X;try{return F()}finally{g=G}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(F,X){switch(F){case 1:case 2:case 3:case 4:case 5:break;default:F=3}var G=g;g=F;try{return X()}finally{g=G}},s.unstable_scheduleCallback=function(F,X,G){var nt=s.unstable_now();switch(typeof G=="object"&&G!==null?(G=G.delay,G=typeof G=="number"&&0<G?nt+G:nt):G=nt,F){case 1:var lt=-1;break;case 2:lt=250;break;case 5:lt=1073741823;break;case 4:lt=1e4;break;default:lt=5e3}return lt=G+lt,F={id:p++,callback:X,priorityLevel:F,startTime:G,expirationTime:lt,sortIndex:-1},G>nt?(F.sortIndex=G,t(f,F),e(h)===null&&F===e(f)&&(b?(_(D),D=-1):b=!0,at(T,G-nt))):(F.sortIndex=lt,t(h,F),x||v||(x=!0,K())),F},s.unstable_shouldYield=w,s.unstable_wrapCallback=function(F){var X=g;return function(){var G=g;g=X;try{return F.apply(this,arguments)}finally{g=G}}}})(Ip)),Ip}var J_;function m3(){return J_||(J_=1,Pp.exports=p3()),Pp.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Q_;function g3(){return Q_||(Q_=1,(function(s){s.exports=function(t){function e(a,r,u,d){return new jS(a,r,u,d)}function n(){}function i(a){var r="https://react.dev/errors/"+a;if(1<arguments.length){r+="?args[]="+encodeURIComponent(arguments[1]);for(var u=2;u<arguments.length;u++)r+="&args[]="+encodeURIComponent(arguments[u])}return"Minified React error #"+a+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function o(a){return a===null||typeof a!="object"?null:(a=N0&&a[N0]||a["@@iterator"],typeof a=="function"?a:null)}function l(a){if(a==null)return null;if(typeof a=="function")return a.$$typeof===nM?null:a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case xr:return"Fragment";case yr:return"Portal";case sd:return"Profiler";case R0:return"StrictMode";case rd:return"Suspense";case od:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case Ws:return(a.displayName||"Context")+".Provider";case D0:return(a._context.displayName||"Context")+".Consumer";case ad:var r=a.render;return a=a.displayName,a||(a=r.displayName||r.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case ld:return r=a.displayName||null,r!==null?r:l(a.type)||"Memo";case Xs:r=a._payload,a=a._init;try{return l(a(r))}catch{}}return null}function c(a){if(cd===void 0)try{throw Error()}catch(u){var r=u.stack.trim().match(/\n( *(at )?)/);cd=r&&r[1]||"",L0=-1<u.stack.indexOf(`
    at`)?" (<anonymous>)":-1<u.stack.indexOf("@")?"@unknown:0:0":""}return`
`+cd+a+L0}function h(a,r){if(!a||ud)return"";ud=!0;var u=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var d={DetermineComponentFrameRoot:function(){try{if(r){var Ot=function(){throw Error()};if(Object.defineProperty(Ot.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Ot,[])}catch(ge){var Ft=ge}Reflect.construct(a,[],Ot)}else{try{Ot.call()}catch(ge){Ft=ge}a.call(Ot.prototype)}}else{try{throw Error()}catch(ge){Ft=ge}(Ot=a())&&typeof Ot.catch=="function"&&Ot.catch(function(){})}}catch(ge){if(ge&&Ft&&typeof ge.stack=="string")return[ge.stack,Ft.stack]}return[null,null]}};d.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var y=Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot,"name");y&&y.configurable&&Object.defineProperty(d.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var M=d.DetermineComponentFrameRoot(),L=M[0],V=M[1];if(L&&V){var j=L.split(`
`),ut=V.split(`
`);for(y=d=0;d<j.length&&!j[d].includes("DetermineComponentFrameRoot");)d++;for(;y<ut.length&&!ut[y].includes("DetermineComponentFrameRoot");)y++;if(d===j.length||y===ut.length)for(d=j.length-1,y=ut.length-1;1<=d&&0<=y&&j[d]!==ut[y];)y--;for(;1<=d&&0<=y;d--,y--)if(j[d]!==ut[y]){if(d!==1||y!==1)do if(d--,y--,0>y||j[d]!==ut[y]){var At=`
`+j[d].replace(" at new "," at ");return a.displayName&&At.includes("<anonymous>")&&(At=At.replace("<anonymous>",a.displayName)),At}while(1<=d&&0<=y);break}}}finally{ud=!1,Error.prepareStackTrace=u}return(u=a?a.displayName||a.name:"")?c(u):""}function f(a){switch(a.tag){case 26:case 27:case 5:return c(a.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return a=h(a.type,!1),a;case 11:return a=h(a.type.render,!1),a;case 1:return a=h(a.type,!0),a;default:return""}}function p(a){try{var r="";do r+=f(a),a=a.return;while(a);return r}catch(u){return`
Error generating stack: `+u.message+`
`+u.stack}}function m(a){var r=a,u=a;if(a.alternate)for(;r.return;)r=r.return;else{a=r;do r=a,(r.flags&4098)!==0&&(u=r.return),a=r.return;while(a)}return r.tag===3?u:null}function g(a){if(m(a)!==a)throw Error(i(188))}function v(a){var r=a.alternate;if(!r){if(r=m(a),r===null)throw Error(i(188));return r!==a?null:a}for(var u=a,d=r;;){var y=u.return;if(y===null)break;var M=y.alternate;if(M===null){if(d=y.return,d!==null){u=d;continue}break}if(y.child===M.child){for(M=y.child;M;){if(M===u)return g(y),a;if(M===d)return g(y),r;M=M.sibling}throw Error(i(188))}if(u.return!==d.return)u=y,d=M;else{for(var L=!1,V=y.child;V;){if(V===u){L=!0,u=y,d=M;break}if(V===d){L=!0,d=y,u=M;break}V=V.sibling}if(!L){for(V=M.child;V;){if(V===u){L=!0,u=M,d=y;break}if(V===d){L=!0,d=M,u=y;break}V=V.sibling}if(!L)throw Error(i(189))}}if(u.alternate!==d)throw Error(i(190))}if(u.tag!==3)throw Error(i(188));return u.stateNode.current===u?a:r}function x(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(r=x(a),r!==null)return r;a=a.sibling}return null}function b(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(a.tag!==4&&(r=b(a),r!==null))return r;a=a.sibling}return null}function S(a){return{current:a}}function _(a){0>Mr||(a.current=gd[Mr],gd[Mr]=null,Mr--)}function E(a,r){Mr++,gd[Mr]=a.current,a.current=r}function A(a){return a>>>=0,a===0?32:31-(vb(a)/_b|0)|0}function T(a){var r=a&42;if(r!==0)return r;switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return a&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return a}}function U(a,r){var u=a.pendingLanes;if(u===0)return 0;var d=0,y=a.suspendedLanes,M=a.pingedLanes,L=a.warmLanes;a=a.finishedLanes!==0;var V=u&134217727;return V!==0?(u=V&~y,u!==0?d=T(u):(M&=V,M!==0?d=T(M):a||(L=V&~L,L!==0&&(d=T(L))))):(V=u&~y,V!==0?d=T(V):M!==0?d=T(M):a||(L=u&~L,L!==0&&(d=T(L)))),d===0?0:r!==0&&r!==d&&(r&y)===0&&(y=d&-d,L=r&-r,y>=L||y===32&&(L&4194176)!==0)?r:d}function D(a,r){return(a.pendingLanes&~(a.suspendedLanes&~a.pingedLanes)&r)===0}function P(a,r){switch(a){case 1:case 2:case 4:case 8:return r+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function z(){var a=Tc;return Tc<<=1,(Tc&4194176)===0&&(Tc=128),a}function w(){var a=Ac;return Ac<<=1,(Ac&62914560)===0&&(Ac=4194304),a}function C(a){for(var r=[],u=0;31>u;u++)r.push(a);return r}function I(a,r){a.pendingLanes|=r,r!==268435456&&(a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0)}function $(a,r,u,d,y,M){var L=a.pendingLanes;a.pendingLanes=u,a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0,a.expiredLanes&=u,a.entangledLanes&=u,a.errorRecoveryDisabledLanes&=u,a.shellSuspendCounter=0;var V=a.entanglements,j=a.expirationTimes,ut=a.hiddenUpdates;for(u=L&~u;0<u;){var At=31-fi(u),Ot=1<<At;V[At]=0,j[At]=-1;var Ft=ut[At];if(Ft!==null)for(ut[At]=null,At=0;At<Ft.length;At++){var ge=Ft[At];ge!==null&&(ge.lane&=-536870913)}u&=~Ot}d!==0&&q(a,d,0),M!==0&&y===0&&a.tag!==0&&(a.suspendedLanes|=M&~(L&~r))}function q(a,r,u){a.pendingLanes|=r,a.suspendedLanes&=~r;var d=31-fi(r);a.entangledLanes|=r,a.entanglements[d]=a.entanglements[d]|1073741824|u&4194218}function K(a,r){var u=a.entangledLanes|=r;for(a=a.entanglements;u;){var d=31-fi(u),y=1<<d;y&r|a[d]&r&&(a[d]|=r),u&=~y}}function at(a){return a&=-a,2<a?8<a?(a&134217727)!==0?32:268435456:8:2}function F(a){if(di&&typeof di.onCommitFiberRoot=="function")try{di.onCommitFiberRoot(jo,a,void 0,(a.current.flags&128)===128)}catch{}}function X(a){if(typeof bb=="function"&&Eb(a),di&&typeof di.setStrictMode=="function")try{di.setStrictMode(jo,a)}catch{}}function G(a,r){return a===r&&(a!==0||1/a===1/r)||a!==a&&r!==r}function nt(a,r){if(typeof a=="object"&&a!==null){var u=av.get(a);return u!==void 0?u:(r={value:a,source:r,stack:p(r)},av.set(a,r),r)}return{value:a,source:r,stack:p(r)}}function lt(a,r){Er[Tr++]=Rc,Er[Tr++]=wc,wc=a,Rc=r}function mt(a,r,u){Ai[Ci++]=vs,Ai[Ci++]=_s,Ai[Ci++]=Ca,Ca=a;var d=vs;a=_s;var y=32-fi(d)-1;d&=~(1<<y),u+=1;var M=32-fi(r)+y;if(30<M){var L=y-y%5;M=(d&(1<<L)-1).toString(32),d>>=L,y-=L,vs=1<<32-fi(r)+y|u<<y|d,_s=M+a}else vs=1<<M|u<<y|d,_s=a}function Nt(a){a.return!==null&&(lt(a,1),mt(a,1,0))}function Jt(a){for(;a===wc;)wc=Er[--Tr],Er[Tr]=null,Rc=Er[--Tr],Er[Tr]=null;for(;a===Ca;)Ca=Ai[--Ci],Ai[Ci]=null,_s=Ai[--Ci],Ai[Ci]=null,vs=Ai[--Ci],Ai[Ci]=null}function zt(a,r){E(Ys,r),E(Jo,a),E(En,null),a=aM(r),_(En),E(En,a)}function st(){_(En),_(Jo),_(Ys)}function Dt(a){a.memoizedState!==null&&E(Dc,a);var r=En.current,u=rM(r,a.type);r!==u&&(E(Jo,a),E(En,u))}function Tt(a){Jo.current===a&&(_(En),_(Jo)),Dc.current===a&&(_(Dc),gs?Aa._currentValue=Sr:Aa._currentValue2=Sr)}function jt(a){var r=Error(i(418,""));throw H(nt(r,a)),yd}function Yt(a,r){if(!Ei)throw Error(i(175));$M(a.stateNode,a.type,a.memoizedProps,r,a)||jt(a)}function ie(a){for(kn=a.return;kn;)switch(kn.tag){case 3:case 27:ji=!0;return;case 5:case 13:ji=!1;return;default:kn=kn.return}}function Be(a){if(!Ei||a!==kn)return!1;if(!Ne)return ie(a),Ne=!0,!1;var r=!1;if(Un?a.tag!==3&&a.tag!==27&&(a.tag!==5||Z0(a.type)&&!Ec(a.type,a.memoizedProps))&&(r=!0):a.tag!==3&&(a.tag!==5||Z0(a.type)&&!Ec(a.type,a.memoizedProps))&&(r=!0),r&&Nn&&jt(a),ie(a),a.tag===13){if(!Ei)throw Error(i(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(i(317));Nn=nb(a)}else Nn=kn?q0(a.stateNode):null;return!0}function re(){Ei&&(Nn=kn=null,Ne=!1)}function H(a){Hi===null?Hi=[a]:Hi.push(a)}function pt(){for(var a=Ar,r=xd=Ar=0;r<a;){var u=wi[r];wi[r++]=null;var d=wi[r];wi[r++]=null;var y=wi[r];wi[r++]=null;var M=wi[r];if(wi[r++]=null,d!==null&&y!==null){var L=d.pending;L===null?y.next=y:(y.next=L.next,L.next=y),d.pending=y}M!==0&&Rt(u,y,M)}}function ct(a,r,u,d){wi[Ar++]=a,wi[Ar++]=r,wi[Ar++]=u,wi[Ar++]=d,xd|=d,a.lanes|=d,a=a.alternate,a!==null&&(a.lanes|=d)}function vt(a,r,u,d){return ct(a,r,u,d),_t(a)}function ht(a,r){return ct(a,null,null,r),_t(a)}function Rt(a,r,u){a.lanes|=u;var d=a.alternate;d!==null&&(d.lanes|=u);for(var y=!1,M=a.return;M!==null;)M.childLanes|=u,d=M.alternate,d!==null&&(d.childLanes|=u),M.tag===22&&(a=M.stateNode,a===null||a._visibility&1||(y=!0)),a=M,M=M.return;y&&r!==null&&a.tag===3&&(M=a.stateNode,y=31-fi(u),M=M.hiddenUpdates,a=M[y],a===null?M[y]=[r]:a.push(r),r.lane=u|536870912)}function _t(a){if(50<rl)throw rl=0,Od=null,Error(i(185));for(var r=a.return;r!==null;)a=r,r=a.return;return a.tag===3?a.stateNode:null}function Et(a){a!==Cr&&a.next===null&&(Cr===null?Uc=Cr=a:Cr=Cr.next=a),Nc=!0,Sd||(Sd=!0,rt(ue))}function se(a,r){if(!Md&&Nc){Md=!0;do for(var u=!1,d=Uc;d!==null;){if(a!==0){var y=d.pendingLanes;if(y===0)var M=0;else{var L=d.suspendedLanes,V=d.pingedLanes;M=(1<<31-fi(42|a)+1)-1,M&=y&~(L&~V),M=M&201326677?M&201326677|1:M?M|2:0}M!==0&&(u=!0,J(d,M))}else M=Ce,M=U(d,d===Xe?M:0),(M&3)===0||D(d,M)||(u=!0,J(d,M));d=d.next}while(u);Md=!1}}function ue(){Nc=Sd=!1;var a=0;wr!==0&&(pM()&&(a=wr),wr=0);for(var r=Fi(),u=null,d=Uc;d!==null;){var y=d.next,M=B(d,r);M===0?(d.next=null,u===null?Uc=y:u.next=y,y===null&&(Cr=u)):(u=d,(a!==0||(M&3)!==0)&&(Nc=!0)),d=y}se(a)}function B(a,r){for(var u=a.suspendedLanes,d=a.pingedLanes,y=a.expirationTimes,M=a.pendingLanes&-62914561;0<M;){var L=31-fi(M),V=1<<L,j=y[L];j===-1?((V&u)===0||(V&d)!==0)&&(y[L]=P(V,r)):j<=r&&(a.expiredLanes|=V),M&=~V}if(r=Xe,u=Ce,u=U(a,a===r?u:0),d=a.callbackNode,u===0||a===r&&qe===2||a.cancelPendingCommit!==null)return d!==null&&d!==null&&vd(d),a.callbackNode=null,a.callbackPriority=0;if((u&3)===0||D(a,u)){if(r=u&-u,r===a.callbackPriority)return r;switch(d!==null&&vd(d),at(u)){case 2:case 8:u=Sb;break;case 32:u=_d;break;case 268435456:u=Mb;break;default:u=_d}return d=R.bind(null,a),u=Cc(u,d),a.callbackPriority=r,a.callbackNode=u,r}return d!==null&&d!==null&&vd(d),a.callbackPriority=2,a.callbackNode=null,2}function R(a,r){var u=a.callbackNode;if(ba()&&a.callbackNode!==u)return null;var d=Ce;return d=U(a,a===Xe?d:0),d===0?null:(l0(a,d,r),B(a,Fi()),a.callbackNode!=null&&a.callbackNode===u?R.bind(null,a):null)}function J(a,r){if(ba())return null;l0(a,r,!0)}function rt(a){xM?SM(function(){(Ge&6)!==0?Cc(sv,a):a()}):Cc(sv,a)}function gt(){return wr===0&&(wr=z()),wr}function ot(a,r){if(Qo===null){var u=Qo=[];bd=0,Rr=gt(),Dr={status:"pending",value:void 0,then:function(d){u.push(d)}}}return bd++,r.then(Zt,Zt),r}function Zt(){if(--bd===0&&Qo!==null){Dr!==null&&(Dr.status="fulfilled");var a=Qo;Qo=null,Rr=0,Dr=null;for(var r=0;r<a.length;r++)(0,a[r])()}}function Ct(a,r){var u=[],d={status:"pending",value:null,reason:null,then:function(y){u.push(y)}};return a.then(function(){d.status="fulfilled",d.value=r;for(var y=0;y<u.length;y++)(0,u[y])(r)},function(y){for(d.status="rejected",d.reason=y,y=0;y<u.length;y++)(0,u[y])(void 0)}),d}function kt(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function Wt(a,r){a=a.updateQueue,r.updateQueue===a&&(r.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,callbacks:null})}function yt(a){return{lane:a,tag:0,payload:null,callback:null,next:null}}function Lt(a,r,u){var d=a.updateQueue;if(d===null)return null;if(d=d.shared,(Ge&2)!==0){var y=d.pending;return y===null?r.next=r:(r.next=y.next,y.next=r),d.pending=r,r=_t(a),Rt(a,null,u),r}return ct(a,d,r,u),_t(a)}function te(a,r,u){if(r=r.updateQueue,r!==null&&(r=r.shared,(u&4194176)!==0)){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,K(a,u)}}function Kt(a,r){var u=a.updateQueue,d=a.alternate;if(d!==null&&(d=d.updateQueue,u===d)){var y=null,M=null;if(u=u.firstBaseUpdate,u!==null){do{var L={lane:u.lane,tag:u.tag,payload:u.payload,callback:null,next:null};M===null?y=M=L:M=M.next=L,u=u.next}while(u!==null);M===null?y=M=r:M=M.next=r}else y=M=r;u={baseState:d.baseState,firstBaseUpdate:y,lastBaseUpdate:M,shared:d.shared,callbacks:d.callbacks},a.updateQueue=u;return}a=u.lastBaseUpdate,a===null?u.firstBaseUpdate=r:a.next=r,u.lastBaseUpdate=r}function Pt(){if(Ed){var a=Dr;if(a!==null)throw a}}function he(a,r,u,d){Ed=!1;var y=a.updateQueue;Zs=!1;var M=y.firstBaseUpdate,L=y.lastBaseUpdate,V=y.shared.pending;if(V!==null){y.shared.pending=null;var j=V,ut=j.next;j.next=null,L===null?M=ut:L.next=ut,L=j;var At=a.alternate;At!==null&&(At=At.updateQueue,V=At.lastBaseUpdate,V!==L&&(V===null?At.firstBaseUpdate=ut:V.next=ut,At.lastBaseUpdate=j))}if(M!==null){var Ot=y.baseState;L=0,At=ut=j=null,V=M;do{var Ft=V.lane&-536870913,ge=Ft!==V.lane;if(ge?(Ce&Ft)===Ft:(d&Ft)===Ft){Ft!==0&&Ft===Rr&&(Ed=!0),At!==null&&(At=At.next={lane:0,tag:V.tag,payload:V.payload,callback:null,next:null});t:{var Ui=a,ol=V;Ft=r;var Oa=u;switch(ol.tag){case 1:if(Ui=ol.payload,typeof Ui=="function"){Ot=Ui.call(Oa,Ot,Ft);break t}Ot=Ui;break t;case 3:Ui.flags=Ui.flags&-65537|128;case 0:if(Ui=ol.payload,Ft=typeof Ui=="function"?Ui.call(Oa,Ot,Ft):Ui,Ft==null)break t;Ot=id({},Ot,Ft);break t;case 2:Zs=!0}}Ft=V.callback,Ft!==null&&(a.flags|=64,ge&&(a.flags|=8192),ge=y.callbacks,ge===null?y.callbacks=[Ft]:ge.push(Ft))}else ge={lane:Ft,tag:V.tag,payload:V.payload,callback:V.callback,next:null},At===null?(ut=At=ge,j=Ot):At=At.next=ge,L|=Ft;if(V=V.next,V===null){if(V=y.shared.pending,V===null)break;ge=V,V=ge.next,ge.next=null,y.lastBaseUpdate=ge,y.shared.pending=null}}while(!0);At===null&&(j=Ot),y.baseState=j,y.firstBaseUpdate=ut,y.lastBaseUpdate=At,M===null&&(y.shared.lanes=0),Js|=L,a.lanes=L,a.memoizedState=Ot}}function k(a,r){if(typeof a!="function")throw Error(i(191,a));a.call(r)}function bt(a,r){var u=a.callbacks;if(u!==null)for(a.callbacks=null,a=0;a<u.length;a++)k(u[a],r)}function wt(a,r){if(pi(a,r))return!0;if(typeof a!="object"||a===null||typeof r!="object"||r===null)return!1;var u=Object.keys(a),d=Object.keys(r);if(u.length!==d.length)return!1;for(d=0;d<u.length;d++){var y=u[d];if(!Tb.call(r,y)||!pi(a[y],r[y]))return!1}return!0}function Vt(a){return a=a.status,a==="fulfilled"||a==="rejected"}function xt(){}function ft(a,r,u){switch(u=a[u],u===void 0?a.push(r):u!==r&&(r.then(xt,xt),r=u),r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===$o?Error(i(483)):a;default:if(typeof r.status=="string")r.then(xt,xt);else{if(a=Xe,a!==null&&100<a.shellSuspendCounter)throw Error(i(482));a=r,a.status="pending",a.then(function(d){if(r.status==="pending"){var y=r;y.status="fulfilled",y.value=d}},function(d){if(r.status==="pending"){var y=r;y.status="rejected",y.reason=d}})}switch(r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===$o?Error(i(483)):a}throw Ur=r,$o}}function qt(){if(Ur===null)throw Error(i(459));var a=Ur;return Ur=null,a}function le(a){var r=tl;return tl+=1,Nr===null&&(Nr=[]),ft(Nr,a,r)}function Ue(a,r){r=r.props.ref,a.ref=r!==void 0?r:null}function Ee(a,r){throw r.$$typeof===$S?Error(i(525)):(a=Object.prototype.toString.call(r),Error(i(31,a==="[object Object]"?"object with keys {"+Object.keys(r).join(", ")+"}":a)))}function Mi(a){var r=a._init;return r(a._payload)}function ai(a){function r(tt,Z){if(a){var it=tt.deletions;it===null?(tt.deletions=[Z],tt.flags|=16):it.push(Z)}}function u(tt,Z){if(!a)return null;for(;Z!==null;)r(tt,Z),Z=Z.sibling;return null}function d(tt){for(var Z=new Map;tt!==null;)tt.key!==null?Z.set(tt.key,tt):Z.set(tt.index,tt),tt=tt.sibling;return Z}function y(tt,Z){return tt=ks(tt,Z),tt.index=0,tt.sibling=null,tt}function M(tt,Z,it){return tt.index=it,a?(it=tt.alternate,it!==null?(it=it.index,it<Z?(tt.flags|=33554434,Z):it):(tt.flags|=33554434,Z)):(tt.flags|=1048576,Z)}function L(tt){return a&&tt.alternate===null&&(tt.flags|=33554434),tt}function V(tt,Z,it,Mt){return Z===null||Z.tag!==6?(Z=td(it,tt.mode,Mt),Z.return=tt,Z):(Z=y(Z,it),Z.return=tt,Z)}function j(tt,Z,it,Mt){var $t=it.type;return $t===xr?At(tt,Z,it.props.children,Mt,it.key):Z!==null&&(Z.elementType===$t||typeof $t=="object"&&$t!==null&&$t.$$typeof===Xs&&Mi($t)===Z.type)?(Z=y(Z,it.props),Ue(Z,it),Z.return=tt,Z):(Z=Sc(it.type,it.key,it.props,null,tt.mode,Mt),Ue(Z,it),Z.return=tt,Z)}function ut(tt,Z,it,Mt){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==it.containerInfo||Z.stateNode.implementation!==it.implementation?(Z=ed(it,tt.mode,Mt),Z.return=tt,Z):(Z=y(Z,it.children||[]),Z.return=tt,Z)}function At(tt,Z,it,Mt,$t){return Z===null||Z.tag!==7?(Z=Ea(it,tt.mode,Mt,$t),Z.return=tt,Z):(Z=y(Z,it),Z.return=tt,Z)}function Ot(tt,Z,it){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=td(""+Z,tt.mode,it),Z.return=tt,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case Mc:return it=Sc(Z.type,Z.key,Z.props,null,tt.mode,it),Ue(it,Z),it.return=tt,it;case yr:return Z=ed(Z,tt.mode,it),Z.return=tt,Z;case Xs:var Mt=Z._init;return Z=Mt(Z._payload),Ot(tt,Z,it)}if(bc(Z)||o(Z))return Z=Ea(Z,tt.mode,it,null),Z.return=tt,Z;if(typeof Z.then=="function")return Ot(tt,le(Z),it);if(Z.$$typeof===Ws)return Ot(tt,mc(tt,Z),it);Ee(tt,Z)}return null}function Ft(tt,Z,it,Mt){var $t=Z!==null?Z.key:null;if(typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint")return $t!==null?null:V(tt,Z,""+it,Mt);if(typeof it=="object"&&it!==null){switch(it.$$typeof){case Mc:return it.key===$t?j(tt,Z,it,Mt):null;case yr:return it.key===$t?ut(tt,Z,it,Mt):null;case Xs:return $t=it._init,it=$t(it._payload),Ft(tt,Z,it,Mt)}if(bc(it)||o(it))return $t!==null?null:At(tt,Z,it,Mt,null);if(typeof it.then=="function")return Ft(tt,Z,le(it),Mt);if(it.$$typeof===Ws)return Ft(tt,Z,mc(tt,it),Mt);Ee(tt,it)}return null}function ge(tt,Z,it,Mt,$t){if(typeof Mt=="string"&&Mt!==""||typeof Mt=="number"||typeof Mt=="bigint")return tt=tt.get(it)||null,V(Z,tt,""+Mt,$t);if(typeof Mt=="object"&&Mt!==null){switch(Mt.$$typeof){case Mc:return tt=tt.get(Mt.key===null?it:Mt.key)||null,j(Z,tt,Mt,$t);case yr:return tt=tt.get(Mt.key===null?it:Mt.key)||null,ut(Z,tt,Mt,$t);case Xs:var Ke=Mt._init;return Mt=Ke(Mt._payload),ge(tt,Z,it,Mt,$t)}if(bc(Mt)||o(Mt))return tt=tt.get(it)||null,At(Z,tt,Mt,$t,null);if(typeof Mt.then=="function")return ge(tt,Z,it,le(Mt),$t);if(Mt.$$typeof===Ws)return ge(tt,Z,it,mc(Z,Mt),$t);Ee(Z,Mt)}return null}function Ui(tt,Z,it,Mt){for(var $t=null,Ke=null,fe=Z,Le=Z=0,_n=null;fe!==null&&Le<it.length;Le++){fe.index>Le?(_n=fe,fe=null):_n=fe.sibling;var Pe=Ft(tt,fe,it[Le],Mt);if(Pe===null){fe===null&&(fe=_n);break}a&&fe&&Pe.alternate===null&&r(tt,fe),Z=M(Pe,Z,Le),Ke===null?$t=Pe:Ke.sibling=Pe,Ke=Pe,fe=_n}if(Le===it.length)return u(tt,fe),Ne&&lt(tt,Le),$t;if(fe===null){for(;Le<it.length;Le++)fe=Ot(tt,it[Le],Mt),fe!==null&&(Z=M(fe,Z,Le),Ke===null?$t=fe:Ke.sibling=fe,Ke=fe);return Ne&&lt(tt,Le),$t}for(fe=d(fe);Le<it.length;Le++)_n=ge(fe,tt,Le,it[Le],Mt),_n!==null&&(a&&_n.alternate!==null&&fe.delete(_n.key===null?Le:_n.key),Z=M(_n,Z,Le),Ke===null?$t=_n:Ke.sibling=_n,Ke=_n);return a&&fe.forEach(function($s){return r(tt,$s)}),Ne&&lt(tt,Le),$t}function ol(tt,Z,it,Mt){if(it==null)throw Error(i(151));for(var $t=null,Ke=null,fe=Z,Le=Z=0,_n=null,Pe=it.next();fe!==null&&!Pe.done;Le++,Pe=it.next()){fe.index>Le?(_n=fe,fe=null):_n=fe.sibling;var $s=Ft(tt,fe,Pe.value,Mt);if($s===null){fe===null&&(fe=_n);break}a&&fe&&$s.alternate===null&&r(tt,fe),Z=M($s,Z,Le),Ke===null?$t=$s:Ke.sibling=$s,Ke=$s,fe=_n}if(Pe.done)return u(tt,fe),Ne&&lt(tt,Le),$t;if(fe===null){for(;!Pe.done;Le++,Pe=it.next())Pe=Ot(tt,Pe.value,Mt),Pe!==null&&(Z=M(Pe,Z,Le),Ke===null?$t=Pe:Ke.sibling=Pe,Ke=Pe);return Ne&&lt(tt,Le),$t}for(fe=d(fe);!Pe.done;Le++,Pe=it.next())Pe=ge(fe,tt,Le,Pe.value,Mt),Pe!==null&&(a&&Pe.alternate!==null&&fe.delete(Pe.key===null?Le:Pe.key),Z=M(Pe,Z,Le),Ke===null?$t=Pe:Ke.sibling=Pe,Ke=Pe);return a&&fe.forEach(function(Nb){return r(tt,Nb)}),Ne&&lt(tt,Le),$t}function Oa(tt,Z,it,Mt){if(typeof it=="object"&&it!==null&&it.type===xr&&it.key===null&&(it=it.props.children),typeof it=="object"&&it!==null){switch(it.$$typeof){case Mc:t:{for(var $t=it.key;Z!==null;){if(Z.key===$t){if($t=it.type,$t===xr){if(Z.tag===7){u(tt,Z.sibling),Mt=y(Z,it.props.children),Mt.return=tt,tt=Mt;break t}}else if(Z.elementType===$t||typeof $t=="object"&&$t!==null&&$t.$$typeof===Xs&&Mi($t)===Z.type){u(tt,Z.sibling),Mt=y(Z,it.props),Ue(Mt,it),Mt.return=tt,tt=Mt;break t}u(tt,Z);break}else r(tt,Z);Z=Z.sibling}it.type===xr?(Mt=Ea(it.props.children,tt.mode,Mt,it.key),Mt.return=tt,tt=Mt):(Mt=Sc(it.type,it.key,it.props,null,tt.mode,Mt),Ue(Mt,it),Mt.return=tt,tt=Mt)}return L(tt);case yr:t:{for($t=it.key;Z!==null;){if(Z.key===$t)if(Z.tag===4&&Z.stateNode.containerInfo===it.containerInfo&&Z.stateNode.implementation===it.implementation){u(tt,Z.sibling),Mt=y(Z,it.children||[]),Mt.return=tt,tt=Mt;break t}else{u(tt,Z);break}else r(tt,Z);Z=Z.sibling}Mt=ed(it,tt.mode,Mt),Mt.return=tt,tt=Mt}return L(tt);case Xs:return $t=it._init,it=$t(it._payload),Oa(tt,Z,it,Mt)}if(bc(it))return Ui(tt,Z,it,Mt);if(o(it)){if($t=o(it),typeof $t!="function")throw Error(i(150));return it=$t.call(it),ol(tt,Z,it,Mt)}if(typeof it.then=="function")return Oa(tt,Z,le(it),Mt);if(it.$$typeof===Ws)return Oa(tt,Z,mc(tt,it),Mt);Ee(tt,it)}return typeof it=="string"&&it!==""||typeof it=="number"||typeof it=="bigint"?(it=""+it,Z!==null&&Z.tag===6?(u(tt,Z.sibling),Mt=y(Z,it),Mt.return=tt,tt=Mt):(u(tt,Z),Mt=td(it,tt.mode,Mt),Mt.return=tt,tt=Mt),L(tt)):u(tt,Z)}return function(tt,Z,it,Mt){try{tl=0;var $t=Oa(tt,Z,it,Mt);return Nr=null,$t}catch(fe){if(fe===$o)throw fe;var Ke=e(29,fe,null,tt.mode);return Ke.lanes=Mt,Ke.return=tt,Ke}finally{}}}function Po(a,r){a=Ms,E(Pc,a),E(Lr,r),Ms=a|r.baseLanes}function Oi(){E(Pc,Ms),E(Lr,Lr.current)}function _a(){Ms=Pc.current,_(Lr),_(Pc)}function Bi(a){var r=a.alternate;E(hn,hn.current&1),E(Ri,a),Ji===null&&(r===null||Lr.current!==null||r.memoizedState!==null)&&(Ji=a)}function Io(a){if(a.tag===22){if(E(hn,hn.current),E(Ri,a),Ji===null){var r=a.alternate;r!==null&&r.memoizedState!==null&&(Ji=a)}}else ri()}function ri(){E(hn,hn.current),E(Ri,Ri.current)}function bi(a){_(Ri),Ji===a&&(Ji=null),_(hn)}function us(a){for(var r=a;r!==null;){if(r.tag===13){var u=r.memoizedState;if(u!==null&&(u=u.dehydrated,u===null||dd(u)||pd(u)))return r}else if(r.tag===19&&r.memoizedProps.revealOrder!==void 0){if((r.flags&128)!==0)return r}else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}return null}function je(){throw Error(i(321))}function dr(a,r){if(r===null)return!1;for(var u=0;u<r.length&&u<a.length;u++)if(!pi(a[u],r[u]))return!1;return!0}function Oo(a,r,u,d,y,M){return Ks=M,Se=r,r.memoizedState=null,r.updateQueue=null,r.lanes=0,pe.H=a===null||a.memoizedState===null?Da:js,Ra=!1,M=u(d,y),Ra=!1,Pr&&(M=cc(r,u,d,y)),lc(a),M}function lc(a){pe.H=Qi;var r=Ve!==null&&Ve.next!==null;if(Ks=0,on=Ve=Se=null,Ic=!1,el=0,Ir=null,r)throw Error(i(300));a===null||gn||(a=a.dependencies,a!==null&&pc(a)&&(gn=!0))}function cc(a,r,u,d){Se=a;var y=0;do{if(Pr&&(Ir=null),el=0,Pr=!1,25<=y)throw Error(i(301));if(y+=1,on=Ve=null,a.updateQueue!=null){var M=a.updateQueue;M.lastEffect=null,M.events=null,M.stores=null,M.memoCache!=null&&(M.memoCache.index=0)}pe.H=Ua,M=r(u,d)}while(Pr);return M}function mf(){var a=pe.H,r=a.useState()[0];return r=typeof r.then=="function"?et(r):r,a=a.useState()[0],(Ve!==null?Ve.memoizedState:null)!==a&&(Se.flags|=1024),r}function Bo(){var a=Oc!==0;return Oc=0,a}function zo(a,r,u){r.updateQueue=a.updateQueue,r.flags&=-2053,a.lanes&=~u}function N(a){if(Ic){for(a=a.memoizedState;a!==null;){var r=a.queue;r!==null&&(r.pending=null),a=a.next}Ic=!1}Ks=0,on=Ve=Se=null,Pr=!1,el=Oc=0,Ir=null}function W(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return on===null?Se.memoizedState=on=a:on=on.next=a,on}function Q(){if(Ve===null){var a=Se.alternate;a=a!==null?a.memoizedState:null}else a=Ve.next;var r=on===null?Se.memoizedState:on.next;if(r!==null)on=r,Ve=a;else{if(a===null)throw Se.alternate===null?Error(i(467)):Error(i(310));Ve=a,a={memoizedState:Ve.memoizedState,baseState:Ve.baseState,baseQueue:Ve.baseQueue,queue:Ve.queue,next:null},on===null?Se.memoizedState=on=a:on=on.next=a}return on}function et(a){var r=el;return el+=1,Ir===null&&(Ir=[]),a=ft(Ir,a,r),r=Se,(on===null?r.memoizedState:on.next)===null&&(r=r.alternate,pe.H=r===null||r.memoizedState===null?Da:js),a}function Y(a){if(a!==null&&typeof a=="object"){if(typeof a.then=="function")return et(a);if(a.$$typeof===Ws)return Rn(a)}throw Error(i(438,String(a)))}function St(a){var r=null,u=Se.updateQueue;if(u!==null&&(r=u.memoCache),r==null){var d=Se.alternate;d!==null&&(d=d.updateQueue,d!==null&&(d=d.memoCache,d!=null&&(r={data:d.data.map(function(y){return y.slice()}),index:0})))}if(r==null&&(r={data:[],index:0}),u===null&&(u=Ad(),Se.updateQueue=u),u.memoCache=r,u=r.data[r.index],u===void 0)for(u=r.data[r.index]=Array(a),d=0;d<a;d++)u[d]=eM;return r.index++,u}function Ut(a,r){return typeof r=="function"?r(a):r}function Gt(a){var r=Q();return Ht(r,Ve,a)}function Ht(a,r,u){var d=a.queue;if(d===null)throw Error(i(311));d.lastRenderedReducer=u;var y=a.baseQueue,M=d.pending;if(M!==null){if(y!==null){var L=y.next;y.next=M.next,M.next=L}r.baseQueue=y=M,d.pending=null}if(M=a.baseState,y===null)a.memoizedState=M;else{r=y.next;var V=L=null,j=null,ut=r,At=!1;do{var Ot=ut.lane&-536870913;if(Ot!==ut.lane?(Ce&Ot)===Ot:(Ks&Ot)===Ot){var Ft=ut.revertLane;if(Ft===0)j!==null&&(j=j.next={lane:0,revertLane:0,action:ut.action,hasEagerState:ut.hasEagerState,eagerState:ut.eagerState,next:null}),Ot===Rr&&(At=!0);else if((Ks&Ft)===Ft){ut=ut.next,Ft===Rr&&(At=!0);continue}else Ot={lane:0,revertLane:ut.revertLane,action:ut.action,hasEagerState:ut.hasEagerState,eagerState:ut.eagerState,next:null},j===null?(V=j=Ot,L=M):j=j.next=Ot,Se.lanes|=Ft,Js|=Ft;Ot=ut.action,Ra&&u(M,Ot),M=ut.hasEagerState?ut.eagerState:u(M,Ot)}else Ft={lane:Ot,revertLane:ut.revertLane,action:ut.action,hasEagerState:ut.hasEagerState,eagerState:ut.eagerState,next:null},j===null?(V=j=Ft,L=M):j=j.next=Ft,Se.lanes|=Ot,Js|=Ot;ut=ut.next}while(ut!==null&&ut!==r);if(j===null?L=M:j.next=V,!pi(M,a.memoizedState)&&(gn=!0,At&&(u=Dr,u!==null)))throw u;a.memoizedState=M,a.baseState=L,a.baseQueue=j,d.lastRenderedState=M}return y===null&&(d.lanes=0),[a.memoizedState,d.dispatch]}function ne(a){var r=Q(),u=r.queue;if(u===null)throw Error(i(311));u.lastRenderedReducer=a;var d=u.dispatch,y=u.pending,M=r.memoizedState;if(y!==null){u.pending=null;var L=y=y.next;do M=a(M,L.action),L=L.next;while(L!==y);pi(M,r.memoizedState)||(gn=!0),r.memoizedState=M,r.baseQueue===null&&(r.baseState=M),u.lastRenderedState=M}return[M,d]}function ae(a,r,u){var d=Se,y=Q(),M=Ne;if(M){if(u===void 0)throw Error(i(407));u=u()}else u=r();var L=!pi((Ve||y).memoizedState,u);if(L&&(y.memoizedState=u,gn=!0),y=y.queue,gf(Ie.bind(null,d,y,a),[a]),y.getSnapshot!==r||L||on!==null&&on.memoizedState.tag&1){if(d.flags|=2048,Kn(9,xe.bind(null,d,y,u,r),{destroy:void 0},null),Xe===null)throw Error(i(349));M||(Ks&60)!==0||Qt(d,r,u)}return u}function Qt(a,r,u){a.flags|=16384,a={getSnapshot:r,value:u},r=Se.updateQueue,r===null?(r=Ad(),Se.updateQueue=r,r.stores=[a]):(u=r.stores,u===null?r.stores=[a]:u.push(a))}function xe(a,r,u,d){r.value=u,r.getSnapshot=d,Ye(r)&&He(a)}function Ie(a,r,u){return u(function(){Ye(r)&&He(a)})}function Ye(a){var r=a.getSnapshot;a=a.value;try{var u=r();return!pi(a,u)}catch{return!0}}function He(a){var r=ht(a,2);r!==null&&Gn(r,a,2)}function Oe(a){var r=W();if(typeof a=="function"){var u=a;if(a=u(),Ra){X(!0);try{u()}finally{X(!1)}}}return r.memoizedState=r.baseState=a,r.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ut,lastRenderedState:a},r}function ee(a,r,u,d){return a.baseState=u,Ht(a,Ve,typeof d=="function"?d:Ut)}function Ze(a,r,u,d,y){if(fc(a))throw Error(i(485));if(a=r.action,a!==null){var M={payload:y,action:a,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(L){M.listeners.push(L)}};pe.T!==null?u(!0):M.isTransition=!1,d(M),u=r.pending,u===null?(M.next=r.pending=M,Te(r,M)):(M.next=u.next,r.pending=u.next=M)}}function Te(a,r){var u=r.action,d=r.payload,y=a.state;if(r.isTransition){var M=pe.T,L={};pe.T=L;try{var V=u(y,d),j=pe.S;j!==null&&j(L,V),Cn(a,r,V)}catch(ut){Mn(a,r,ut)}finally{pe.T=M}}else try{M=u(y,d),Cn(a,r,M)}catch(ut){Mn(a,r,ut)}}function Cn(a,r,u){u!==null&&typeof u=="object"&&typeof u.then=="function"?u.then(function(d){hs(a,r,d)},function(d){return Mn(a,r,d)}):hs(a,r,u)}function hs(a,r,u){r.status="fulfilled",r.value=u,zs(r),a.state=u,r=a.pending,r!==null&&(u=r.next,u===r?a.pending=null:(u=u.next,r.next=u,Te(a,u)))}function Mn(a,r,u){var d=a.pending;if(a.pending=null,d!==null){d=d.next;do r.status="rejected",r.reason=u,zs(r),r=r.next;while(r!==d)}a.action=null}function zs(a){a=a.listeners;for(var r=0;r<a.length;r++)(0,a[r])()}function We(a,r){return r}function Hn(a,r){if(Ne){var u=Xe.formState;if(u!==null){t:{var d=Se;if(Ne){if(Nn){var y=qM(Nn,ji);if(y){Nn=q0(y),d=YM(y);break t}}jt(d)}d=!1}d&&(r=u[0])}}u=W(),u.memoizedState=u.baseState=r,d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:We,lastRenderedState:r},u.queue=d,u=vg.bind(null,Se,d),d.dispatch=u,d=Oe(!1);var M=xf.bind(null,Se,!1,d.queue);return d=W(),y={state:r,dispatch:null,action:a,pending:null},d.queue=y,u=Ze.bind(null,Se,y,M,u),y.dispatch=u,d.memoizedState=a,[r,u,!1]}function Vn(a){var r=Q();return mn(r,Ve,a)}function mn(a,r,u){r=Ht(a,r,We)[0],a=Gt(Ut)[0],r=typeof r=="object"&&r!==null&&typeof r.then=="function"?et(r):r;var d=Q(),y=d.queue,M=y.dispatch;return u!==d.memoizedState&&(Se.flags|=2048,Kn(9,wn.bind(null,y,u),{destroy:void 0},null)),[r,M,a]}function wn(a,r){a.action=r}function pr(a){var r=Q(),u=Ve;if(u!==null)return mn(r,u,a);Q(),r=r.memoizedState,u=Q();var d=u.queue.dispatch;return u.memoizedState=a,[r,d,!1]}function Kn(a,r,u,d){return a={tag:a,create:r,inst:u,deps:d,next:null},r=Se.updateQueue,r===null&&(r=Ad(),Se.updateQueue=r),u=r.lastEffect,u===null?r.lastEffect=a.next=a:(d=u.next,u.next=a,a.next=d,r.lastEffect=a),a}function sg(){return Q().memoizedState}function uc(a,r,u,d){var y=W();Se.flags|=a,y.memoizedState=Kn(1|r,u,{destroy:void 0},d===void 0?null:d)}function hc(a,r,u,d){var y=Q();d=d===void 0?null:d;var M=y.memoizedState.inst;Ve!==null&&d!==null&&dr(d,Ve.memoizedState.deps)?y.memoizedState=Kn(r,u,M,d):(Se.flags|=a,y.memoizedState=Kn(1|r,u,M,d))}function ag(a,r){uc(8390656,8,a,r)}function gf(a,r){hc(2048,8,a,r)}function rg(a,r){return hc(4,2,a,r)}function og(a,r){return hc(4,4,a,r)}function lg(a,r){if(typeof r=="function"){a=a();var u=r(a);return function(){typeof u=="function"?u():r(null)}}if(r!=null)return a=a(),r.current=a,function(){r.current=null}}function cg(a,r,u){u=u!=null?u.concat([a]):null,hc(4,4,lg.bind(null,r,a),u)}function vf(){}function ug(a,r){var u=Q();r=r===void 0?null:r;var d=u.memoizedState;return r!==null&&dr(r,d[1])?d[0]:(u.memoizedState=[a,r],a)}function hg(a,r){var u=Q();r=r===void 0?null:r;var d=u.memoizedState;if(r!==null&&dr(r,d[1]))return d[0];if(d=a(),Ra){X(!0);try{a()}finally{X(!1)}}return u.memoizedState=[d,r],d}function _f(a,r,u){return u===void 0||(Ks&1073741824)!==0?a.memoizedState=r:(a.memoizedState=u,a=o0(),Se.lanes|=a,Js|=a,u)}function fg(a,r,u,d){return pi(u,r)?u:Lr.current!==null?(a=_f(a,u,d),pi(a,r)||(gn=!0),a):(Ks&42)===0?(gn=!0,a.memoizedState=u):(a=o0(),Se.lanes|=a,Js|=a,r)}function dg(a,r,u,d,y){var M=Ta();Jn(M!==0&&8>M?M:8);var L=pe.T,V={};pe.T=V,xf(a,!1,r,u);try{var j=y(),ut=pe.S;if(ut!==null&&ut(V,j),j!==null&&typeof j=="object"&&typeof j.then=="function"){var At=Ct(j,d);Fo(a,r,At,ui(a))}else Fo(a,r,d,ui(a))}catch(Ot){Fo(a,r,{then:function(){},status:"rejected",reason:Ot},ui())}finally{Jn(M),pe.T=L}}function pg(a){var r=a.memoizedState;if(r!==null)return r;r={memoizedState:Sr,baseState:Sr,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ut,lastRenderedState:Sr},next:null};var u={};return r.next={memoizedState:u,baseState:u,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ut,lastRenderedState:u},next:null},a.memoizedState=r,a=a.alternate,a!==null&&(a.memoizedState=r),r}function yf(){return Rn(Aa)}function mg(){return Q().memoizedState}function gg(){return Q().memoizedState}function LS(a){for(var r=a.return;r!==null;){switch(r.tag){case 24:case 3:var u=ui();a=yt(u);var d=Lt(r,a,u);d!==null&&(Gn(d,r,u),te(d,r,u)),r={cache:Lf()},a.payload=r;return}r=r.return}}function PS(a,r,u){var d=ui();u={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null},fc(a)?_g(r,u):(u=vt(a,r,u,d),u!==null&&(Gn(u,a,d),yg(u,r,d)))}function vg(a,r,u){var d=ui();Fo(a,r,u,d)}function Fo(a,r,u,d){var y={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null};if(fc(a))_g(r,y);else{var M=a.alternate;if(a.lanes===0&&(M===null||M.lanes===0)&&(M=r.lastRenderedReducer,M!==null))try{var L=r.lastRenderedState,V=M(L,u);if(y.hasEagerState=!0,y.eagerState=V,pi(V,L))return ct(a,r,y,0),Xe===null&&pt(),!1}catch{}finally{}if(u=vt(a,r,y,d),u!==null)return Gn(u,a,d),yg(u,r,d),!0}return!1}function xf(a,r,u,d){if(d={lane:2,revertLane:gt(),action:d,hasEagerState:!1,eagerState:null,next:null},fc(a)){if(r)throw Error(i(479))}else r=vt(a,u,d,2),r!==null&&Gn(r,a,2)}function fc(a){var r=a.alternate;return a===Se||r!==null&&r===Se}function _g(a,r){Pr=Ic=!0;var u=a.pending;u===null?r.next=r:(r.next=u.next,u.next=r),a.pending=r}function yg(a,r,u){if((u&4194176)!==0){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,K(a,u)}}function Sf(a,r,u,d){r=a.memoizedState,u=u(d,r),u=u==null?r:id({},r,u),a.memoizedState=u,a.lanes===0&&(a.updateQueue.baseState=u)}function xg(a,r,u,d,y,M,L){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(d,M,L):r.prototype&&r.prototype.isPureReactComponent?!wt(u,d)||!wt(y,M):!0}function Sg(a,r,u,d){a=r.state,typeof r.componentWillReceiveProps=="function"&&r.componentWillReceiveProps(u,d),typeof r.UNSAFE_componentWillReceiveProps=="function"&&r.UNSAFE_componentWillReceiveProps(u,d),r.state!==a&&Cd.enqueueReplaceState(r,r.state,null)}function ya(a,r){var u=r;if("ref"in r){u={};for(var d in r)d!=="ref"&&(u[d]=r[d])}if(a=a.defaultProps){u===r&&(u=id({},u));for(var y in a)u[y]===void 0&&(u[y]=a[y])}return u}function dc(a,r){try{var u=a.onUncaughtError;u(r.value,{componentStack:r.stack})}catch(d){setTimeout(function(){throw d})}}function Mg(a,r,u){try{var d=a.onCaughtError;d(u.value,{componentStack:u.stack,errorBoundary:r.tag===1?r.stateNode:null})}catch(y){setTimeout(function(){throw y})}}function Mf(a,r,u){return u=yt(u),u.tag=3,u.payload={element:null},u.callback=function(){dc(a,r)},u}function bg(a){return a=yt(a),a.tag=3,a}function Eg(a,r,u,d){var y=u.type.getDerivedStateFromError;if(typeof y=="function"){var M=d.value;a.payload=function(){return y(M)},a.callback=function(){Mg(r,u,d)}}var L=u.stateNode;L!==null&&typeof L.componentDidCatch=="function"&&(a.callback=function(){Mg(r,u,d),typeof y!="function"&&(Qs===null?Qs=new Set([this]):Qs.add(this));var V=d.stack;this.componentDidCatch(d.value,{componentStack:V!==null?V:""})})}function IS(a,r,u,d,y){if(u.flags|=32768,d!==null&&typeof d=="object"&&typeof d.then=="function"){if(r=u.alternate,r!==null&&Vo(r,u,y,!0),u=Ri.current,u!==null){switch(u.tag){case 13:return Ji===null?jf():u.alternate===null&&nn===0&&(nn=3),u.flags&=-257,u.flags|=65536,u.lanes=y,d===Lc?u.flags|=16384:(r=u.updateQueue,r===null?u.updateQueue=new Set([d]):r.add(d),Qf(a,d,y)),!1;case 22:return u.flags|=65536,d===Lc?u.flags|=16384:(r=u.updateQueue,r===null?(r={transitions:null,markerInstances:null,retryQueue:new Set([d])},u.updateQueue=r):(u=r.retryQueue,u===null?r.retryQueue=new Set([d]):u.add(d)),Qf(a,d,y)),!1}throw Error(i(435,u.tag))}return Qf(a,d,y),jf(),!1}if(Ne)return r=Ri.current,r!==null?((r.flags&65536)===0&&(r.flags|=256),r.flags|=65536,r.lanes=y,d!==yd&&(a=Error(i(422),{cause:d}),H(nt(a,u)))):(d!==yd&&(r=Error(i(423),{cause:d}),H(nt(r,u))),a=a.current.alternate,a.flags|=65536,y&=-y,a.lanes|=y,d=nt(d,u),y=Mf(a.stateNode,d,y),Kt(a,y),nn!==4&&(nn=2)),!1;var M=Error(i(520),{cause:d});if(M=nt(M,u),il===null?il=[M]:il.push(M),nn!==4&&(nn=2),r===null)return!0;d=nt(d,u),u=r;do{switch(u.tag){case 3:return u.flags|=65536,a=y&-y,u.lanes|=a,a=Mf(u.stateNode,d,a),Kt(u,a),!1;case 1:if(r=u.type,M=u.stateNode,(u.flags&128)===0&&(typeof r.getDerivedStateFromError=="function"||M!==null&&typeof M.componentDidCatch=="function"&&(Qs===null||!Qs.has(M))))return u.flags|=65536,y&=-y,u.lanes|=y,y=bg(y),Eg(y,a,u,d),Kt(u,y),!1}u=u.return}while(u!==null);return!1}function bn(a,r,u,d){r.child=a===null?rv(r,null,u,d):wa(r,a.child,u,d)}function Tg(a,r,u,d,y){u=u.render;var M=r.ref;if("ref"in d){var L={};for(var V in d)V!=="ref"&&(L[V]=d[V])}else L=d;return xa(r),d=Oo(a,r,u,L,M,y),V=Bo(),a!==null&&!gn?(zo(a,r,y),fs(a,r,y)):(Ne&&V&&Nt(r),r.flags|=1,bn(a,r,d,y),r.child)}function Ag(a,r,u,d,y){if(a===null){var M=u.type;return typeof M=="function"&&!$f(M)&&M.defaultProps===void 0&&u.compare===null?(r.tag=15,r.type=M,Cg(a,r,M,d,y)):(a=Sc(u.type,null,d,r,r.mode,y),a.ref=r.ref,a.return=r,r.child=a)}if(M=a.child,!Df(a,y)){var L=M.memoizedProps;if(u=u.compare,u=u!==null?u:wt,u(L,d)&&a.ref===r.ref)return fs(a,r,y)}return r.flags|=1,a=ks(M,d),a.ref=r.ref,a.return=r,r.child=a}function Cg(a,r,u,d,y){if(a!==null){var M=a.memoizedProps;if(wt(M,d)&&a.ref===r.ref)if(gn=!1,r.pendingProps=d=M,Df(a,y))(a.flags&131072)!==0&&(gn=!0);else return r.lanes=a.lanes,fs(a,r,y)}return bf(a,r,u,d,y)}function wg(a,r,u){var d=r.pendingProps,y=d.children,M=(r.stateNode._pendingVisibility&2)!==0,L=a!==null?a.memoizedState:null;if(Ho(a,r),d.mode==="hidden"||M){if((r.flags&128)!==0){if(d=L!==null?L.baseLanes|u:u,a!==null){for(y=r.child=a.child,M=0;y!==null;)M=M|y.lanes|y.childLanes,y=y.sibling;r.childLanes=M&~d}else r.childLanes=0,r.child=null;return Rg(a,r,d,u)}if((u&536870912)!==0)r.memoizedState={baseLanes:0,cachePool:null},a!==null&&gc(r,L!==null?L.cachePool:null),L!==null?Po(r,L):Oi(),Io(r);else return r.lanes=r.childLanes=536870912,Rg(a,r,L!==null?L.baseLanes|u:u,u)}else L!==null?(gc(r,L.cachePool),Po(r,L),ri(),r.memoizedState=null):(a!==null&&gc(r,null),Oi(),ri());return bn(a,r,y,u),r.child}function Rg(a,r,u,d){var y=Pf();return y=y===null?null:{parent:gs?tn._currentValue:tn._currentValue2,pool:y},r.memoizedState={baseLanes:u,cachePool:y},a!==null&&gc(r,null),Oi(),Io(r),a!==null&&Vo(a,r,d,!0),null}function Ho(a,r){var u=r.ref;if(u===null)a!==null&&a.ref!==null&&(r.flags|=2097664);else{if(typeof u!="function"&&typeof u!="object")throw Error(i(284));(a===null||a.ref!==u)&&(r.flags|=2097664)}}function bf(a,r,u,d,y){return xa(r),u=Oo(a,r,u,d,void 0,y),d=Bo(),a!==null&&!gn?(zo(a,r,y),fs(a,r,y)):(Ne&&d&&Nt(r),r.flags|=1,bn(a,r,u,y),r.child)}function Dg(a,r,u,d,y,M){return xa(r),r.updateQueue=null,u=cc(r,d,u,y),lc(a),d=Bo(),a!==null&&!gn?(zo(a,r,M),fs(a,r,M)):(Ne&&d&&Nt(r),r.flags|=1,bn(a,r,u,M),r.child)}function Ug(a,r,u,d,y){if(xa(r),r.stateNode===null){var M=br,L=u.contextType;typeof L=="object"&&L!==null&&(M=Rn(L)),M=new u(d,M),r.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,M.updater=Cd,r.stateNode=M,M._reactInternals=r,M=r.stateNode,M.props=d,M.state=r.memoizedState,M.refs={},kt(r),L=u.contextType,M.context=typeof L=="object"&&L!==null?Rn(L):br,M.state=r.memoizedState,L=u.getDerivedStateFromProps,typeof L=="function"&&(Sf(r,u,L,d),M.state=r.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(L=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),L!==M.state&&Cd.enqueueReplaceState(M,M.state,null),he(r,d,M,y),Pt(),M.state=r.memoizedState),typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!0}else if(a===null){M=r.stateNode;var V=r.memoizedProps,j=ya(u,V);M.props=j;var ut=M.context,At=u.contextType;L=br,typeof At=="object"&&At!==null&&(L=Rn(At));var Ot=u.getDerivedStateFromProps;At=typeof Ot=="function"||typeof M.getSnapshotBeforeUpdate=="function",V=r.pendingProps!==V,At||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(V||ut!==L)&&Sg(r,M,d,L),Zs=!1;var Ft=r.memoizedState;M.state=Ft,he(r,d,M,y),Pt(),ut=r.memoizedState,V||Ft!==ut||Zs?(typeof Ot=="function"&&(Sf(r,u,Ot,d),ut=r.memoizedState),(j=Zs||xg(r,u,j,d,Ft,ut,L))?(At||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount()),typeof M.componentDidMount=="function"&&(r.flags|=4194308)):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),r.memoizedProps=d,r.memoizedState=ut),M.props=d,M.state=ut,M.context=L,d=j):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!1)}else{M=r.stateNode,Wt(a,r),L=r.memoizedProps,At=ya(u,L),M.props=At,Ot=r.pendingProps,Ft=M.context,ut=u.contextType,j=br,typeof ut=="object"&&ut!==null&&(j=Rn(ut)),V=u.getDerivedStateFromProps,(ut=typeof V=="function"||typeof M.getSnapshotBeforeUpdate=="function")||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(L!==Ot||Ft!==j)&&Sg(r,M,d,j),Zs=!1,Ft=r.memoizedState,M.state=Ft,he(r,d,M,y),Pt();var ge=r.memoizedState;L!==Ot||Ft!==ge||Zs||a!==null&&a.dependencies!==null&&pc(a.dependencies)?(typeof V=="function"&&(Sf(r,u,V,d),ge=r.memoizedState),(At=Zs||xg(r,u,At,d,Ft,ge,j)||a!==null&&a.dependencies!==null&&pc(a.dependencies))?(ut||typeof M.UNSAFE_componentWillUpdate!="function"&&typeof M.componentWillUpdate!="function"||(typeof M.componentWillUpdate=="function"&&M.componentWillUpdate(d,ge,j),typeof M.UNSAFE_componentWillUpdate=="function"&&M.UNSAFE_componentWillUpdate(d,ge,j)),typeof M.componentDidUpdate=="function"&&(r.flags|=4),typeof M.getSnapshotBeforeUpdate=="function"&&(r.flags|=1024)):(typeof M.componentDidUpdate!="function"||L===a.memoizedProps&&Ft===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||L===a.memoizedProps&&Ft===a.memoizedState||(r.flags|=1024),r.memoizedProps=d,r.memoizedState=ge),M.props=d,M.state=ge,M.context=j,d=At):(typeof M.componentDidUpdate!="function"||L===a.memoizedProps&&Ft===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||L===a.memoizedProps&&Ft===a.memoizedState||(r.flags|=1024),d=!1)}return M=d,Ho(a,r),d=(r.flags&128)!==0,M||d?(M=r.stateNode,u=d&&typeof u.getDerivedStateFromError!="function"?null:M.render(),r.flags|=1,a!==null&&d?(r.child=wa(r,a.child,null,y),r.child=wa(r,null,u,y)):bn(a,r,u,y),r.memoizedState=M.state,a=r.child):a=fs(a,r,y),a}function Ng(a,r,u,d){return re(),r.flags|=256,bn(a,r,u,d),r.child}function Ef(a){return{baseLanes:a,cachePool:zg()}}function Tf(a,r,u){return a=a!==null?a.childLanes&~u:0,r&&(a|=Di),a}function Lg(a,r,u){var d=r.pendingProps,y=!1,M=(r.flags&128)!==0,L;if((L=M)||(L=a!==null&&a.memoizedState===null?!1:(hn.current&2)!==0),L&&(y=!0,r.flags&=-129),L=(r.flags&32)!==0,r.flags&=-33,a===null){if(Ne){if(y?Bi(r):ri(),Ne){var V=Nn,j;(j=V)&&(V=QM(V,ji),V!==null?(r.memoizedState={dehydrated:V,treeContext:Ca!==null?{id:vs,overflow:_s}:null,retryLane:536870912},j=e(18,null,null,0),j.stateNode=V,j.return=r,r.child=j,kn=r,Nn=null,j=!0):j=!1),j||jt(r)}if(V=r.memoizedState,V!==null&&(V=V.dehydrated,V!==null))return pd(V)?r.lanes=16:r.lanes=536870912,null;bi(r)}return V=d.children,d=d.fallback,y?(ri(),y=r.mode,V=Cf({mode:"hidden",children:V},y),d=Ea(d,y,u,null),V.return=r,d.return=r,V.sibling=d,r.child=V,y=r.child,y.memoizedState=Ef(u),y.childLanes=Tf(a,L,u),r.memoizedState=wd,d):(Bi(r),Af(r,V))}if(j=a.memoizedState,j!==null&&(V=j.dehydrated,V!==null)){if(M)r.flags&256?(Bi(r),r.flags&=-257,r=wf(a,r,u)):r.memoizedState!==null?(ri(),r.child=a.child,r.flags|=128,r=null):(ri(),y=d.fallback,V=r.mode,d=Cf({mode:"visible",children:d.children},V),y=Ea(y,V,u,null),y.flags|=2,d.return=r,y.return=r,d.sibling=y,r.child=d,wa(r,a.child,null,u),d=r.child,d.memoizedState=Ef(u),d.childLanes=Tf(a,L,u),r.memoizedState=wd,r=y);else if(Bi(r),pd(V))L=WM(V).digest,d=Error(i(419)),d.stack="",d.digest=L,H({value:d,source:null,stack:null}),r=wf(a,r,u);else if(gn||Vo(a,r,u,!1),L=(u&a.childLanes)!==0,gn||L){if(L=Xe,L!==null){if(d=u&-u,(d&42)!==0)d=1;else switch(d){case 2:d=1;break;case 8:d=4;break;case 32:d=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:d=64;break;case 268435456:d=134217728;break;default:d=0}if(d=(d&(L.suspendedLanes|u))!==0?0:d,d!==0&&d!==j.retryLane)throw j.retryLane=d,ht(a,d),Gn(L,a,d),lv}dd(V)||jf(),r=wf(a,r,u)}else dd(V)?(r.flags|=128,r.child=a.child,r=YS.bind(null,a),XM(V,r),r=null):(a=j.treeContext,Ei&&(Nn=KM(V),kn=r,Ne=!0,Hi=null,ji=!1,a!==null&&(Ai[Ci++]=vs,Ai[Ci++]=_s,Ai[Ci++]=Ca,vs=a.id,_s=a.overflow,Ca=r)),r=Af(r,d.children),r.flags|=4096);return r}return y?(ri(),y=d.fallback,V=r.mode,j=a.child,M=j.sibling,d=ks(j,{mode:"hidden",children:d.children}),d.subtreeFlags=j.subtreeFlags&31457280,M!==null?y=ks(M,y):(y=Ea(y,V,u,null),y.flags|=2),y.return=r,d.return=r,d.sibling=y,r.child=d,d=y,y=r.child,V=a.child.memoizedState,V===null?V=Ef(u):(j=V.cachePool,j!==null?(M=gs?tn._currentValue:tn._currentValue2,j=j.parent!==M?{parent:M,pool:M}:j):j=zg(),V={baseLanes:V.baseLanes|u,cachePool:j}),y.memoizedState=V,y.childLanes=Tf(a,L,u),r.memoizedState=wd,d):(Bi(r),u=a.child,a=u.sibling,u=ks(u,{mode:"visible",children:d.children}),u.return=r,u.sibling=null,a!==null&&(L=r.deletions,L===null?(r.deletions=[a],r.flags|=16):L.push(a)),r.child=u,r.memoizedState=null,u)}function Af(a,r){return r=Cf({mode:"visible",children:r},a.mode),r.return=a,a.child=r}function Cf(a,r){return b0(a,r,0,null)}function wf(a,r,u){return wa(r,a.child,null,u),a=Af(r,r.pendingProps.children),a.flags|=2,r.memoizedState=null,a}function Pg(a,r,u){a.lanes|=r;var d=a.alternate;d!==null&&(d.lanes|=r),Uf(a.return,r,u)}function Rf(a,r,u,d,y){var M=a.memoizedState;M===null?a.memoizedState={isBackwards:r,rendering:null,renderingStartTime:0,last:d,tail:u,tailMode:y}:(M.isBackwards=r,M.rendering=null,M.renderingStartTime=0,M.last=d,M.tail=u,M.tailMode=y)}function Ig(a,r,u){var d=r.pendingProps,y=d.revealOrder,M=d.tail;if(bn(a,r,d.children,u),d=hn.current,(d&2)!==0)d=d&1|2,r.flags|=128;else{if(a!==null&&(a.flags&128)!==0)t:for(a=r.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&Pg(a,u,r);else if(a.tag===19)Pg(a,u,r);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===r)break t;for(;a.sibling===null;){if(a.return===null||a.return===r)break t;a=a.return}a.sibling.return=a.return,a=a.sibling}d&=1}switch(E(hn,d),y){case"forwards":for(u=r.child,y=null;u!==null;)a=u.alternate,a!==null&&us(a)===null&&(y=u),u=u.sibling;u=y,u===null?(y=r.child,r.child=null):(y=u.sibling,u.sibling=null),Rf(r,!1,y,u,M);break;case"backwards":for(u=null,y=r.child,r.child=null;y!==null;){if(a=y.alternate,a!==null&&us(a)===null){r.child=y;break}a=y.sibling,y.sibling=u,u=y,y=a}Rf(r,!0,u,null,M);break;case"together":Rf(r,!1,null,null,void 0);break;default:r.memoizedState=null}return r.child}function fs(a,r,u){if(a!==null&&(r.dependencies=a.dependencies),Js|=r.lanes,(u&r.childLanes)===0)if(a!==null){if(Vo(a,r,u,!1),(u&r.childLanes)===0)return null}else return null;if(a!==null&&r.child!==a.child)throw Error(i(153));if(r.child!==null){for(a=r.child,u=ks(a,a.pendingProps),r.child=u,u.return=r;a.sibling!==null;)a=a.sibling,u=u.sibling=ks(a,a.pendingProps),u.return=r;u.sibling=null}return r.child}function Df(a,r){return(a.lanes&r)!==0?!0:(a=a.dependencies,!!(a!==null&&pc(a)))}function OS(a,r,u){switch(r.tag){case 3:zt(r,r.stateNode.containerInfo),Fs(r,tn,a.memoizedState.cache),re();break;case 27:case 5:Dt(r);break;case 4:zt(r,r.stateNode.containerInfo);break;case 10:Fs(r,r.type,r.memoizedProps.value);break;case 13:var d=r.memoizedState;if(d!==null)return d.dehydrated!==null?(Bi(r),r.flags|=128,null):(u&r.child.childLanes)!==0?Lg(a,r,u):(Bi(r),a=fs(a,r,u),a!==null?a.sibling:null);Bi(r);break;case 19:var y=(a.flags&128)!==0;if(d=(u&r.childLanes)!==0,d||(Vo(a,r,u,!1),d=(u&r.childLanes)!==0),y){if(d)return Ig(a,r,u);r.flags|=128}if(y=r.memoizedState,y!==null&&(y.rendering=null,y.tail=null,y.lastEffect=null),E(hn,hn.current),d)break;return null;case 22:case 23:return r.lanes=0,wg(a,r,u);case 24:Fs(r,tn,a.memoizedState.cache)}return fs(a,r,u)}function Og(a,r,u){if(a!==null)if(a.memoizedProps!==r.pendingProps)gn=!0;else{if(!Df(a,u)&&(r.flags&128)===0)return gn=!1,OS(a,r,u);gn=(a.flags&131072)!==0}else gn=!1,Ne&&(r.flags&1048576)!==0&&mt(r,Rc,r.index);switch(r.lanes=0,r.tag){case 16:t:{a=r.pendingProps;var d=r.elementType,y=d._init;if(d=y(d._payload),r.type=d,typeof d=="function")$f(d)?(a=ya(d,a),r.tag=1,r=Ug(null,r,d,a,u)):(r.tag=0,r=bf(null,r,d,a,u));else{if(d!=null){if(y=d.$$typeof,y===ad){r.tag=11,r=Tg(null,r,d,a,u);break t}else if(y===ld){r.tag=14,r=Ag(null,r,d,a,u);break t}}throw r=l(d)||d,Error(i(306,r,""))}}return r;case 0:return bf(a,r,r.type,r.pendingProps,u);case 1:return d=r.type,y=ya(d,r.pendingProps),Ug(a,r,d,y,u);case 3:t:{if(zt(r,r.stateNode.containerInfo),a===null)throw Error(i(387));var M=r.pendingProps;y=r.memoizedState,d=y.element,Wt(a,r),he(r,M,null,u);var L=r.memoizedState;if(M=L.cache,Fs(r,tn,M),M!==y.cache&&Nf(r,[tn],u,!0),Pt(),M=L.element,Ei&&y.isDehydrated)if(y={element:M,isDehydrated:!1,cache:L.cache},r.updateQueue.baseState=y,r.memoizedState=y,r.flags&256){r=Ng(a,r,M,u);break t}else if(M!==d){d=nt(Error(i(424)),r),H(d),r=Ng(a,r,M,u);break t}else for(Ei&&(Nn=ZM(r.stateNode.containerInfo),kn=r,Ne=!0,Hi=null,ji=!0),u=rv(r,null,M,u),r.child=u;u;)u.flags=u.flags&-3|4096,u=u.sibling;else{if(re(),M===d){r=fs(a,r,u);break t}bn(a,r,M,u)}r=r.child}return r;case 26:if(Ti)return Ho(a,r),a===null?(u=j0(r.type,null,r.pendingProps,null))?r.memoizedState=u:Ne||(r.stateNode=ub(r.type,r.pendingProps,Ys.current,r)):r.memoizedState=j0(r.type,a.memoizedProps,r.pendingProps,a.memoizedState),null;case 27:if(Un)return Dt(r),a===null&&Un&&Ne&&(d=r.stateNode=nv(r.type,r.pendingProps,Ys.current,En.current,!1),kn=r,ji=!0,Nn=Y0(d)),d=r.pendingProps.children,a!==null||Ne?bn(a,r,d,u):r.child=wa(r,null,d,u),Ho(a,r),r.child;case 5:return a===null&&Ne&&(ob(r.type,r.pendingProps,En.current),(y=d=Nn)&&(d=jM(d,r.type,r.pendingProps,ji),d!==null?(r.stateNode=d,kn=r,Nn=Y0(d),ji=!1,y=!0):y=!1),y||jt(r)),Dt(r),y=r.type,M=r.pendingProps,L=a!==null?a.memoizedProps:null,d=M.children,Ec(y,M)?d=null:L!==null&&Ec(y,L)&&(r.flags|=32),r.memoizedState!==null&&(y=Oo(a,r,mf,null,null,u),gs?Aa._currentValue=y:Aa._currentValue2=y),Ho(a,r),bn(a,r,d,u),r.child;case 6:return a===null&&Ne&&(lb(r.pendingProps,En.current),(a=u=Nn)&&(u=JM(u,r.pendingProps,ji),u!==null?(r.stateNode=u,kn=r,Nn=null,a=!0):a=!1),a||jt(r)),null;case 13:return Lg(a,r,u);case 4:return zt(r,r.stateNode.containerInfo),d=r.pendingProps,a===null?r.child=wa(r,null,d,u):bn(a,r,d,u),r.child;case 11:return Tg(a,r,r.type,r.pendingProps,u);case 7:return bn(a,r,r.pendingProps,u),r.child;case 8:return bn(a,r,r.pendingProps.children,u),r.child;case 12:return bn(a,r,r.pendingProps.children,u),r.child;case 10:return d=r.pendingProps,Fs(r,r.type,d.value),bn(a,r,d.children,u),r.child;case 9:return y=r.type._context,d=r.pendingProps.children,xa(r),y=Rn(y),d=d(y),r.flags|=1,bn(a,r,d,u),r.child;case 14:return Ag(a,r,r.type,r.pendingProps,u);case 15:return Cg(a,r,r.type,r.pendingProps,u);case 19:return Ig(a,r,u);case 22:return wg(a,r,u);case 24:return xa(r),d=Rn(tn),a===null?(y=Pf(),y===null&&(y=Xe,M=Lf(),y.pooledCache=M,M.refCount++,M!==null&&(y.pooledCacheLanes|=u),y=M),r.memoizedState={parent:d,cache:y},kt(r),Fs(r,tn,y)):((a.lanes&u)!==0&&(Wt(a,r),he(r,null,null,u),Pt()),y=a.memoizedState,M=r.memoizedState,y.parent!==d?(y={parent:d,cache:d},r.memoizedState=y,r.lanes===0&&(r.memoizedState=r.updateQueue.baseState=y),Fs(r,tn,d)):(d=M.cache,Fs(r,tn,d),d!==y.cache&&Nf(r,[tn],u,!0))),bn(a,r,r.pendingProps.children,u),r.child;case 29:throw r.pendingProps}throw Error(i(156,r.tag))}function Fs(a,r,u){gs?(E(Bc,r._currentValue),r._currentValue=u):(E(Bc,r._currentValue2),r._currentValue2=u)}function ds(a){var r=Bc.current;gs?a._currentValue=r:a._currentValue2=r,_(Bc)}function Uf(a,r,u){for(;a!==null;){var d=a.alternate;if((a.childLanes&r)!==r?(a.childLanes|=r,d!==null&&(d.childLanes|=r)):d!==null&&(d.childLanes&r)!==r&&(d.childLanes|=r),a===u)break;a=a.return}}function Nf(a,r,u,d){var y=a.child;for(y!==null&&(y.return=a);y!==null;){var M=y.dependencies;if(M!==null){var L=y.child;M=M.firstContext;t:for(;M!==null;){var V=M;M=y;for(var j=0;j<r.length;j++)if(V.context===r[j]){M.lanes|=u,V=M.alternate,V!==null&&(V.lanes|=u),Uf(M.return,u,a),d||(L=null);break t}M=V.next}}else if(y.tag===18){if(L=y.return,L===null)throw Error(i(341));L.lanes|=u,M=L.alternate,M!==null&&(M.lanes|=u),Uf(L,u,a),L=null}else L=y.child;if(L!==null)L.return=y;else for(L=y;L!==null;){if(L===a){L=null;break}if(y=L.sibling,y!==null){y.return=L.return,L=y;break}L=L.return}y=L}}function Vo(a,r,u,d){a=null;for(var y=r,M=!1;y!==null;){if(!M){if((y.flags&524288)!==0)M=!0;else if((y.flags&262144)!==0)break}if(y.tag===10){var L=y.alternate;if(L===null)throw Error(i(387));if(L=L.memoizedProps,L!==null){var V=y.type;pi(y.pendingProps.value,L.value)||(a!==null?a.push(V):a=[V])}}else if(y===Dc.current){if(L=y.alternate,L===null)throw Error(i(387));L.memoizedState.memoizedState!==y.memoizedState.memoizedState&&(a!==null?a.push(Aa):a=[Aa])}y=y.return}a!==null&&Nf(r,a,u,d),r.flags|=262144}function pc(a){for(a=a.firstContext;a!==null;){var r=a.context;if(!pi(gs?r._currentValue:r._currentValue2,a.memoizedValue))return!0;a=a.next}return!1}function xa(a){Na=a,ys=null,a=a.dependencies,a!==null&&(a.firstContext=null)}function Rn(a){return Bg(Na,a)}function mc(a,r){return Na===null&&xa(a),Bg(a,r)}function Bg(a,r){var u=gs?r._currentValue:r._currentValue2;if(r={context:r,memoizedValue:u,next:null},ys===null){if(a===null)throw Error(i(308));ys=r,a.dependencies={lanes:0,firstContext:r},a.flags|=524288}else ys=ys.next=r;return u}function Lf(){return{controller:new Cb,data:new Map,refCount:0}}function Go(a){a.refCount--,a.refCount===0&&wb(Rb,function(){a.controller.abort()})}function Pf(){var a=La.current;return a!==null?a:Xe.pooledCache}function gc(a,r){r===null?E(La,La.current):E(La,r.pool)}function zg(){var a=Pf();return a===null?null:{parent:gs?tn._currentValue:tn._currentValue2,pool:a}}function oi(a){a.flags|=4}function Fg(a,r){if(a!==null&&a.child===r.child)return!1;if((r.flags&16)!==0)return!0;for(a=r.child;a!==null;){if((a.flags&13878)!==0||(a.subtreeFlags&13878)!==0)return!0;a=a.sibling}return!1}function If(a,r,u,d){if(Dn)for(u=r.child;u!==null;){if(u.tag===5||u.tag===6)hd(a,u.stateNode);else if(!(u.tag===4||Un&&u.tag===27)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===r)break;for(;u.sibling===null;){if(u.return===null||u.return===r)return;u=u.return}u.sibling.return=u.return,u=u.sibling}else if(qs)for(var y=r.child;y!==null;){if(y.tag===5){var M=y.stateNode;u&&d&&(M=W0(M,y.type,y.memoizedProps)),hd(a,M)}else if(y.tag===6)M=y.stateNode,u&&d&&(M=X0(M,y.memoizedProps)),hd(a,M);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)M=y.child,M!==null&&(M.return=y),If(a,y,!0,!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===r)break;for(;y.sibling===null;){if(y.return===null||y.return===r)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function Hg(a,r,u,d){if(qs)for(var y=r.child;y!==null;){if(y.tag===5){var M=y.stateNode;u&&d&&(M=W0(M,y.type,y.memoizedProps)),G0(a,M)}else if(y.tag===6)M=y.stateNode,u&&d&&(M=X0(M,y.memoizedProps)),G0(a,M);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)M=y.child,M!==null&&(M.return=y),Hg(a,y,!(y.memoizedProps!==null&&y.memoizedProps.mode==="manual"),!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===r)break;for(;y.sibling===null;){if(y.return===null||y.return===r)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function Vg(a,r){if(qs&&Fg(a,r)){a=r.stateNode;var u=a.containerInfo,d=V0();Hg(d,r,!1,!1),a.pendingChildren=d,oi(r),kM(u,d)}}function Of(a,r,u,d){if(Dn)a.memoizedProps!==d&&oi(r);else if(qs){var y=a.stateNode,M=a.memoizedProps;if((a=Fg(a,r))||M!==d){var L=En.current;M=GM(y,u,M,d,!a,null),M===y?r.stateNode=y:(I0(M,u,d,L)&&oi(r),r.stateNode=M,a?If(M,r,!1,!1):oi(r))}else r.stateNode=y}}function Bf(a,r,u){if(gM(r,u)){if(a.flags|=16777216,!z0(r,u))if(f0())a.flags|=8192;else throw Ur=Lc,Td}else a.flags&=-16777217}function Gg(a,r){if(fb(r)){if(a.flags|=16777216,!ev(r))if(f0())a.flags|=8192;else throw Ur=Lc,Td}else a.flags&=-16777217}function vc(a,r){r!==null&&(a.flags|=4),a.flags&16384&&(r=a.tag!==22?w():536870912,a.lanes|=r,zr|=r)}function ko(a,r){if(!Ne)switch(a.tailMode){case"hidden":r=a.tail;for(var u=null;r!==null;)r.alternate!==null&&(u=r),r=r.sibling;u===null?a.tail=null:u.sibling=null;break;case"collapsed":u=a.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?r||a.tail===null?a.tail=null:a.tail.sibling=null:d.sibling=null}}function Je(a){var r=a.alternate!==null&&a.alternate.child===a.child,u=0,d=0;if(r)for(var y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags&31457280,d|=y.flags&31457280,y.return=a,y=y.sibling;else for(y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags,d|=y.flags,y.return=a,y=y.sibling;return a.subtreeFlags|=d,a.childLanes=u,r}function BS(a,r,u){var d=r.pendingProps;switch(Jt(r),r.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Je(r),null;case 1:return Je(r),null;case 3:return u=r.stateNode,d=null,a!==null&&(d=a.memoizedState.cache),r.memoizedState.cache!==d&&(r.flags|=2048),ds(tn),st(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(a===null||a.child===null)&&(Be(r)?oi(r):a===null||a.memoizedState.isDehydrated&&(r.flags&256)===0||(r.flags|=1024,Hi!==null&&(Zf(Hi),Hi=null))),Vg(a,r),Je(r),null;case 26:if(Ti){u=r.type;var y=r.memoizedState;return a===null?(oi(r),y!==null?(Je(r),Gg(r,y)):(Je(r),Bf(r,u,d))):y?y!==a.memoizedState?(oi(r),Je(r),Gg(r,y)):(Je(r),r.flags&=-16777217):(Dn?a.memoizedProps!==d&&oi(r):Of(a,r,u,d),Je(r),Bf(r,u,d)),null}case 27:if(Un){if(Tt(r),u=Ys.current,y=r.type,a!==null&&r.stateNode!=null)Dn?a.memoizedProps!==d&&oi(r):Of(a,r,y,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Je(r),null}a=En.current,Be(r)?Yt(r,a):(a=nv(y,d,u,a,!0),r.stateNode=a,oi(r))}return Je(r),null}case 5:if(Tt(r),u=r.type,a!==null&&r.stateNode!=null)Of(a,r,u,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Je(r),null}a=En.current,Be(r)?Yt(r,a):(y=cM(u,d,Ys.current,a,r),If(y,r,!1,!1),r.stateNode=y,I0(y,u,d,a)&&oi(r))}return Je(r),Bf(r,r.type,r.pendingProps),null;case 6:if(a&&r.stateNode!=null)u=a.memoizedProps,Dn?u!==d&&oi(r):qs&&(u!==d?(r.stateNode=O0(d,Ys.current,En.current,r),oi(r)):r.stateNode=a.stateNode);else{if(typeof d!="string"&&r.stateNode===null)throw Error(i(166));if(a=Ys.current,u=En.current,Be(r)){if(!Ei)throw Error(i(176));if(a=r.stateNode,u=r.memoizedProps,d=null,y=kn,y!==null)switch(y.tag){case 27:case 5:d=y.memoizedProps}tb(a,u,r,d)||jt(r)}else r.stateNode=O0(d,a,u,r)}return Je(r),null;case 13:if(d=r.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(y=Be(r),d!==null&&d.dehydrated!==null){if(a===null){if(!y)throw Error(i(318));if(!Ei)throw Error(i(344));if(y=r.memoizedState,y=y!==null?y.dehydrated:null,!y)throw Error(i(317));eb(y,r)}else re(),(r.flags&128)===0&&(r.memoizedState=null),r.flags|=4;Je(r),y=!1}else Hi!==null&&(Zf(Hi),Hi=null),y=!0;if(!y)return r.flags&256?(bi(r),r):(bi(r),null)}if(bi(r),(r.flags&128)!==0)return r.lanes=u,r;if(u=d!==null,a=a!==null&&a.memoizedState!==null,u){d=r.child,y=null,d.alternate!==null&&d.alternate.memoizedState!==null&&d.alternate.memoizedState.cachePool!==null&&(y=d.alternate.memoizedState.cachePool.pool);var M=null;d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(M=d.memoizedState.cachePool.pool),M!==y&&(d.flags|=2048)}return u!==a&&u&&(r.child.flags|=8192),vc(r,r.updateQueue),Je(r),null;case 4:return st(),Vg(a,r),a===null&&fM(r.stateNode.containerInfo),Je(r),null;case 10:return ds(r.type),Je(r),null;case 19:if(_(hn),y=r.memoizedState,y===null)return Je(r),null;if(d=(r.flags&128)!==0,M=y.rendering,M===null)if(d)ko(y,!1);else{if(nn!==0||a!==null&&(a.flags&128)!==0)for(a=r.child;a!==null;){if(M=us(a),M!==null){for(r.flags|=128,ko(y,!1),a=M.updateQueue,r.updateQueue=a,vc(r,a),r.subtreeFlags=0,a=u,u=r.child;u!==null;)M0(u,a),u=u.sibling;return E(hn,hn.current&1|2),r.child}a=a.sibling}y.tail!==null&&Fi()>sl&&(r.flags|=128,d=!0,ko(y,!1),r.lanes=4194304)}else{if(!d)if(a=us(M),a!==null){if(r.flags|=128,d=!0,a=a.updateQueue,r.updateQueue=a,vc(r,a),ko(y,!0),y.tail===null&&y.tailMode==="hidden"&&!M.alternate&&!Ne)return Je(r),null}else 2*Fi()-y.renderingStartTime>sl&&u!==536870912&&(r.flags|=128,d=!0,ko(y,!1),r.lanes=4194304);y.isBackwards?(M.sibling=r.child,r.child=M):(a=y.last,a!==null?a.sibling=M:r.child=M,y.last=M)}return y.tail!==null?(r=y.tail,y.rendering=r,y.tail=r.sibling,y.renderingStartTime=Fi(),r.sibling=null,a=hn.current,E(hn,d?a&1|2:a&1),r):(Je(r),null);case 22:case 23:return bi(r),_a(),d=r.memoizedState!==null,a!==null?a.memoizedState!==null!==d&&(r.flags|=8192):d&&(r.flags|=8192),d?(u&536870912)!==0&&(r.flags&128)===0&&(Je(r),r.subtreeFlags&6&&(r.flags|=8192)):Je(r),u=r.updateQueue,u!==null&&vc(r,u.retryQueue),u=null,a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),d=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(d=r.memoizedState.cachePool.pool),d!==u&&(r.flags|=2048),a!==null&&_(La),null;case 24:return u=null,a!==null&&(u=a.memoizedState.cache),r.memoizedState.cache!==u&&(r.flags|=2048),ds(tn),Je(r),null;case 25:return null}throw Error(i(156,r.tag))}function zS(a,r){switch(Jt(r),r.tag){case 1:return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 3:return ds(tn),st(),a=r.flags,(a&65536)!==0&&(a&128)===0?(r.flags=a&-65537|128,r):null;case 26:case 27:case 5:return Tt(r),null;case 13:if(bi(r),a=r.memoizedState,a!==null&&a.dehydrated!==null){if(r.alternate===null)throw Error(i(340));re()}return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 19:return _(hn),null;case 4:return st(),null;case 10:return ds(r.type),null;case 22:case 23:return bi(r),_a(),a!==null&&_(La),a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 24:return ds(tn),null;case 25:return null;default:return null}}function kg(a,r){switch(Jt(r),r.tag){case 3:ds(tn),st();break;case 26:case 27:case 5:Tt(r);break;case 4:st();break;case 13:bi(r);break;case 19:_(hn);break;case 10:ds(r.type);break;case 22:case 23:bi(r),_a(),a!==null&&_(La);break;case 24:ds(tn)}}function Wo(a,r){try{var u=r.updateQueue,d=u!==null?u.lastEffect:null;if(d!==null){var y=d.next;u=y;do{if((u.tag&a)===a){d=void 0;var M=u.create,L=u.inst;d=M(),L.destroy=d}u=u.next}while(u!==y)}}catch(V){ze(r,r.return,V)}}function Hs(a,r,u){try{var d=r.updateQueue,y=d!==null?d.lastEffect:null;if(y!==null){var M=y.next;d=M;do{if((d.tag&a)===a){var L=d.inst,V=L.destroy;if(V!==void 0){L.destroy=void 0,y=r;var j=u;try{V()}catch(ut){ze(y,j,ut)}}}d=d.next}while(d!==M)}}catch(ut){ze(r,r.return,ut)}}function Wg(a){var r=a.updateQueue;if(r!==null){var u=a.stateNode;try{bt(r,u)}catch(d){ze(a,a.return,d)}}}function Xg(a,r,u){u.props=ya(a.type,a.memoizedProps),u.state=a.memoizedState;try{u.componentWillUnmount()}catch(d){ze(a,r,d)}}function Sa(a,r){try{var u=a.ref;if(u!==null){var d=a.stateNode;switch(a.tag){case 26:case 27:case 5:var y=Yo(d);break;default:y=d}typeof u=="function"?a.refCleanup=u(y):u.current=y}}catch(M){ze(a,r,M)}}function li(a,r){var u=a.ref,d=a.refCleanup;if(u!==null)if(typeof d=="function")try{d()}catch(y){ze(a,r,y)}finally{a.refCleanup=null,a=a.alternate,a!=null&&(a.refCleanup=null)}else if(typeof u=="function")try{u(null)}catch(y){ze(a,r,y)}else u.current=null}function qg(a){var r=a.type,u=a.memoizedProps,d=a.stateNode;try{UM(d,r,u,a)}catch(y){ze(a,a.return,y)}}function Yg(a,r,u){try{NM(a.stateNode,a.type,u,r,a)}catch(d){ze(a,a.return,d)}}function Zg(a){return a.tag===5||a.tag===3||(Ti?a.tag===26:!1)||(Un?a.tag===27:!1)||a.tag===4}function zf(a){t:for(;;){for(;a.sibling===null;){if(a.return===null||Zg(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&(!Un||a.tag!==27)&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue t;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function Ff(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?PM(u,a,r):RM(u,a);else if(!(d===4||Un&&d===27)&&(a=a.child,a!==null))for(Ff(a,r,u),a=a.sibling;a!==null;)Ff(a,r,u),a=a.sibling}function _c(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?LM(u,a,r):wM(u,a);else if(!(d===4||Un&&d===27)&&(a=a.child,a!==null))for(_c(a,r,u),a=a.sibling;a!==null;)_c(a,r,u),a=a.sibling}function Kg(a,r,u){a=a.containerInfo;try{k0(a,u)}catch(d){ze(r,r.return,d)}}function FS(a,r){for(oM(a.containerInfo),vn=r;vn!==null;)if(a=vn,r=a.child,(a.subtreeFlags&1028)!==0&&r!==null)r.return=a,vn=r;else for(;vn!==null;){a=vn;var u=a.alternate;switch(r=a.flags,a.tag){case 0:break;case 11:case 15:break;case 1:if((r&1024)!==0&&u!==null){r=void 0;var d=a,y=u.memoizedProps;u=u.memoizedState;var M=d.stateNode;try{var L=ya(d.type,y,d.elementType===d.type);r=M.getSnapshotBeforeUpdate(L,u),M.__reactInternalSnapshotBeforeUpdate=r}catch(V){ze(d,d.return,V)}}break;case 3:(r&1024)!==0&&Dn&&VM(a.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((r&1024)!==0)throw Error(i(163))}if(r=a.sibling,r!==null){r.return=a.return,vn=r;break}vn=a.return}return L=hv,hv=!1,L}function jg(a,r,u){var d=u.flags;switch(u.tag){case 0:case 11:case 15:ps(a,u),d&4&&Wo(5,u);break;case 1:if(ps(a,u),d&4)if(a=u.stateNode,r===null)try{a.componentDidMount()}catch(V){ze(u,u.return,V)}else{var y=ya(u.type,r.memoizedProps);r=r.memoizedState;try{a.componentDidUpdate(y,r,a.__reactInternalSnapshotBeforeUpdate)}catch(V){ze(u,u.return,V)}}d&64&&Wg(u),d&512&&Sa(u,u.return);break;case 3:if(ps(a,u),d&64&&(d=u.updateQueue,d!==null)){if(a=null,u.child!==null)switch(u.child.tag){case 27:case 5:a=Yo(u.child.stateNode);break;case 1:a=u.child.stateNode}try{bt(d,a)}catch(V){ze(u,u.return,V)}}break;case 26:if(Ti){ps(a,u),d&512&&Sa(u,u.return);break}case 27:case 5:ps(a,u),r===null&&d&4&&qg(u),d&512&&Sa(u,u.return);break;case 12:ps(a,u);break;case 13:ps(a,u),d&4&&Qg(a,u);break;case 22:if(y=u.memoizedState!==null||xs,!y){r=r!==null&&r.memoizedState!==null||en;var M=xs,L=en;xs=y,(en=r)&&!L?Vs(a,u,(u.subtreeFlags&8772)!==0):ps(a,u),xs=M,en=L}d&512&&(u.memoizedProps.mode==="manual"?Sa(u,u.return):li(u,u.return));break;default:ps(a,u)}}function Jg(a){var r=a.alternate;r!==null&&(a.alternate=null,Jg(r)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(r=a.stateNode,r!==null&&mM(r)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function zi(a,r,u){for(u=u.child;u!==null;)Hf(a,r,u),u=u.sibling}function Hf(a,r,u){if(di&&typeof di.onCommitFiberUnmount=="function")try{di.onCommitFiberUnmount(jo,u)}catch{}switch(u.tag){case 26:if(Ti){en||li(u,r),zi(a,r,u),u.memoizedState?Q0(u.memoizedState):u.stateNode&&tv(u.stateNode);break}case 27:if(Un){en||li(u,r);var d=ln,y=mi;ln=u.stateNode,zi(a,r,u),gb(u.stateNode),ln=d,mi=y;break}case 5:en||li(u,r);case 6:if(Dn){if(d=ln,y=mi,ln=null,zi(a,r,u),ln=d,mi=y,ln!==null)if(mi)try{OM(ln,u.stateNode)}catch(M){ze(u,r,M)}else try{IM(ln,u.stateNode)}catch(M){ze(u,r,M)}}else zi(a,r,u);break;case 18:Dn&&ln!==null&&(mi?rb(ln,u.stateNode):ab(ln,u.stateNode));break;case 4:Dn?(d=ln,y=mi,ln=u.stateNode.containerInfo,mi=!0,zi(a,r,u),ln=d,mi=y):(qs&&Kg(u.stateNode,u,V0()),zi(a,r,u));break;case 0:case 11:case 14:case 15:en||Hs(2,u,r),en||Hs(4,u,r),zi(a,r,u);break;case 1:en||(li(u,r),d=u.stateNode,typeof d.componentWillUnmount=="function"&&Xg(u,r,d)),zi(a,r,u);break;case 21:zi(a,r,u);break;case 22:en||li(u,r),en=(d=en)||u.memoizedState!==null,zi(a,r,u),en=d;break;default:zi(a,r,u)}}function Qg(a,r){if(Ei&&r.memoizedState===null&&(a=r.alternate,a!==null&&(a=a.memoizedState,a!==null&&(a=a.dehydrated,a!==null))))try{sb(a)}catch(u){ze(r,r.return,u)}}function HS(a){switch(a.tag){case 13:case 19:var r=a.stateNode;return r===null&&(r=a.stateNode=new uv),r;case 22:return a=a.stateNode,r=a._retryCache,r===null&&(r=a._retryCache=new uv),r;default:throw Error(i(435,a.tag))}}function Vf(a,r){var u=HS(a);r.forEach(function(d){var y=ZS.bind(null,a,d);u.has(d)||(u.add(d),d.then(y,y))})}function jn(a,r){var u=r.deletions;if(u!==null)for(var d=0;d<u.length;d++){var y=u[d],M=a,L=r;if(Dn){var V=L;t:for(;V!==null;){switch(V.tag){case 27:case 5:ln=V.stateNode,mi=!1;break t;case 3:ln=V.stateNode.containerInfo,mi=!0;break t;case 4:ln=V.stateNode.containerInfo,mi=!0;break t}V=V.return}if(ln===null)throw Error(i(160));Hf(M,L,y),ln=null,mi=!1}else Hf(M,L,y);M=y.alternate,M!==null&&(M.return=null),y.return=null}if(r.subtreeFlags&13878)for(r=r.child;r!==null;)$g(r,a),r=r.sibling}function $g(a,r){var u=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:jn(r,a),ci(a),d&4&&(Hs(3,a,a.return),Wo(3,a),Hs(5,a,a.return));break;case 1:jn(r,a),ci(a),d&512&&(en||u===null||li(u,u.return)),d&64&&xs&&(a=a.updateQueue,a!==null&&(d=a.callbacks,d!==null&&(u=a.shared.hiddenCallbacks,a.shared.hiddenCallbacks=u===null?d:u.concat(d))));break;case 26:if(Ti){var y=Vi;jn(r,a),ci(a),d&512&&(en||u===null||li(u,u.return)),d&4&&(d=u!==null?u.memoizedState:null,r=a.memoizedState,u===null?r===null?a.stateNode===null?a.stateNode=cb(y,a.type,a.memoizedProps,a):$0(y,a.type,a.stateNode):a.stateNode=J0(y,r,a.memoizedProps):d!==r?(d===null?u.stateNode!==null&&tv(u.stateNode):Q0(d),r===null?$0(y,a.type,a.stateNode):J0(y,r,a.memoizedProps)):r===null&&a.stateNode!==null&&Yg(a,a.memoizedProps,u.memoizedProps));break}case 27:if(Un&&d&4&&a.alternate===null){y=a.stateNode;var M=a.memoizedProps;try{pb(y),mb(a.type,M,y,a)}catch(At){ze(a,a.return,At)}}case 5:if(jn(r,a),ci(a),d&512&&(en||u===null||li(u,u.return)),Dn){if(a.flags&32){r=a.stateNode;try{H0(r)}catch(At){ze(a,a.return,At)}}d&4&&a.stateNode!=null&&(r=a.memoizedProps,Yg(a,r,u!==null?u.memoizedProps:r)),d&1024&&(Rd=!0)}break;case 6:if(jn(r,a),ci(a),d&4&&Dn){if(a.stateNode===null)throw Error(i(162));d=a.memoizedProps,u=u!==null?u.memoizedProps:d,r=a.stateNode;try{DM(r,u,d)}catch(At){ze(a,a.return,At)}}break;case 3:if(Ti?(hb(),y=Vi,Vi=md(r.containerInfo),jn(r,a),Vi=y):jn(r,a),ci(a),d&4){if(Dn&&Ei&&u!==null&&u.memoizedState.isDehydrated)try{ib(r.containerInfo)}catch(At){ze(a,a.return,At)}if(qs){d=r.containerInfo,u=r.pendingChildren;try{k0(d,u)}catch(At){ze(a,a.return,At)}}}Rd&&(Rd=!1,t0(a));break;case 4:Ti?(u=Vi,Vi=md(a.stateNode.containerInfo),jn(r,a),ci(a),Vi=u):(jn(r,a),ci(a)),d&4&&qs&&Kg(a.stateNode,a,a.stateNode.pendingChildren);break;case 12:jn(r,a),ci(a);break;case 13:jn(r,a),ci(a),a.child.flags&8192&&a.memoizedState!==null!=(u!==null&&u.memoizedState!==null)&&(Ld=Fi()),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,Vf(a,d)));break;case 22:d&512&&(en||u===null||li(u,u.return)),y=a.memoizedState!==null;var L=u!==null&&u.memoizedState!==null,V=xs,j=en;if(xs=V||y,en=j||L,jn(r,a),en=j,xs=V,ci(a),r=a.stateNode,r._current=a,r._visibility&=-3,r._visibility|=r._pendingVisibility&2,d&8192&&(r._visibility=y?r._visibility&-2:r._visibility|1,y&&(r=xs||en,u===null||L||r||mr(a)),Dn&&(a.memoizedProps===null||a.memoizedProps.mode!=="manual"))){t:if(u=null,Dn)for(r=a;;){if(r.tag===5||Ti&&r.tag===26||Un&&r.tag===27){if(u===null){L=u=r;try{M=L.stateNode,y?BM(M):FM(L.stateNode,L.memoizedProps)}catch(At){ze(L,L.return,At)}}}else if(r.tag===6){if(u===null){L=r;try{var ut=L.stateNode;y?zM(ut):HM(ut,L.memoizedProps)}catch(At){ze(L,L.return,At)}}}else if((r.tag!==22&&r.tag!==23||r.memoizedState===null||r===a)&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break t;for(;r.sibling===null;){if(r.return===null||r.return===a)break t;u===r&&(u=null),r=r.return}u===r&&(u=null),r.sibling.return=r.return,r=r.sibling}}d&4&&(d=a.updateQueue,d!==null&&(u=d.retryQueue,u!==null&&(d.retryQueue=null,Vf(a,u))));break;case 19:jn(r,a),ci(a),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,Vf(a,d)));break;case 21:break;default:jn(r,a),ci(a)}}function ci(a){var r=a.flags;if(r&2){try{if(Dn&&(!Un||a.tag!==27)){t:{for(var u=a.return;u!==null;){if(Zg(u)){var d=u;break t}u=u.return}throw Error(i(160))}switch(d.tag){case 27:if(Un){var y=d.stateNode,M=zf(a);_c(a,M,y);break}case 5:var L=d.stateNode;d.flags&32&&(H0(L),d.flags&=-33);var V=zf(a);_c(a,V,L);break;case 3:case 4:var j=d.stateNode.containerInfo,ut=zf(a);Ff(a,ut,j);break;default:throw Error(i(161))}}}catch(At){ze(a,a.return,At)}a.flags&=-3}r&4096&&(a.flags&=-4097)}function t0(a){if(a.subtreeFlags&1024)for(a=a.child;a!==null;){var r=a;t0(r),r.tag===5&&r.flags&1024&&yM(r.stateNode),a=a.sibling}}function ps(a,r){if(r.subtreeFlags&8772)for(r=r.child;r!==null;)jg(a,r.alternate,r),r=r.sibling}function mr(a){for(a=a.child;a!==null;){var r=a;switch(r.tag){case 0:case 11:case 14:case 15:Hs(4,r,r.return),mr(r);break;case 1:li(r,r.return);var u=r.stateNode;typeof u.componentWillUnmount=="function"&&Xg(r,r.return,u),mr(r);break;case 26:case 27:case 5:li(r,r.return),mr(r);break;case 22:li(r,r.return),r.memoizedState===null&&mr(r);break;default:mr(r)}a=a.sibling}}function Vs(a,r,u){for(u=u&&(r.subtreeFlags&8772)!==0,r=r.child;r!==null;){var d=r.alternate,y=a,M=r,L=M.flags;switch(M.tag){case 0:case 11:case 15:Vs(y,M,u),Wo(4,M);break;case 1:if(Vs(y,M,u),d=M,y=d.stateNode,typeof y.componentDidMount=="function")try{y.componentDidMount()}catch(ut){ze(d,d.return,ut)}if(d=M,y=d.updateQueue,y!==null){var V=d.stateNode;try{var j=y.shared.hiddenCallbacks;if(j!==null)for(y.shared.hiddenCallbacks=null,y=0;y<j.length;y++)k(j[y],V)}catch(ut){ze(d,d.return,ut)}}u&&L&64&&Wg(M),Sa(M,M.return);break;case 26:case 27:case 5:Vs(y,M,u),u&&d===null&&L&4&&qg(M),Sa(M,M.return);break;case 12:Vs(y,M,u);break;case 13:Vs(y,M,u),u&&L&4&&Qg(y,M);break;case 22:M.memoizedState===null&&Vs(y,M,u),Sa(M,M.return);break;default:Vs(y,M,u)}r=r.sibling}}function Gf(a,r){var u=null;a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),a=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(a=r.memoizedState.cachePool.pool),a!==u&&(a!=null&&a.refCount++,u!=null&&Go(u))}function kf(a,r){a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&Go(a))}function Gs(a,r,u,d){if(r.subtreeFlags&10256)for(r=r.child;r!==null;)e0(a,r,u,d),r=r.sibling}function e0(a,r,u,d){var y=r.flags;switch(r.tag){case 0:case 11:case 15:Gs(a,r,u,d),y&2048&&Wo(9,r);break;case 3:Gs(a,r,u,d),y&2048&&(a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&Go(a)));break;case 12:if(y&2048){Gs(a,r,u,d),a=r.stateNode;try{var M=r.memoizedProps,L=M.id,V=M.onPostCommit;typeof V=="function"&&V(L,r.alternate===null?"mount":"update",a.passiveEffectDuration,-0)}catch(j){ze(r,r.return,j)}}else Gs(a,r,u,d);break;case 23:break;case 22:M=r.stateNode,r.memoizedState!==null?M._visibility&4?Gs(a,r,u,d):Xo(a,r):M._visibility&4?Gs(a,r,u,d):(M._visibility|=4,gr(a,r,u,d,(r.subtreeFlags&10256)!==0)),y&2048&&Gf(r.alternate,r);break;case 24:Gs(a,r,u,d),y&2048&&kf(r.alternate,r);break;default:Gs(a,r,u,d)}}function gr(a,r,u,d,y){for(y=y&&(r.subtreeFlags&10256)!==0,r=r.child;r!==null;){var M=a,L=r,V=u,j=d,ut=L.flags;switch(L.tag){case 0:case 11:case 15:gr(M,L,V,j,y),Wo(8,L);break;case 23:break;case 22:var At=L.stateNode;L.memoizedState!==null?At._visibility&4?gr(M,L,V,j,y):Xo(M,L):(At._visibility|=4,gr(M,L,V,j,y)),y&&ut&2048&&Gf(L.alternate,L);break;case 24:gr(M,L,V,j,y),y&&ut&2048&&kf(L.alternate,L);break;default:gr(M,L,V,j,y)}r=r.sibling}}function Xo(a,r){if(r.subtreeFlags&10256)for(r=r.child;r!==null;){var u=a,d=r,y=d.flags;switch(d.tag){case 22:Xo(u,d),y&2048&&Gf(d.alternate,d);break;case 24:Xo(u,d),y&2048&&kf(d.alternate,d);break;default:Xo(u,d)}r=r.sibling}}function Ma(a){if(a.subtreeFlags&Or)for(a=a.child;a!==null;)n0(a),a=a.sibling}function n0(a){switch(a.tag){case 26:Ma(a),a.flags&Or&&(a.memoizedState!==null?db(Vi,a.memoizedState,a.memoizedProps):F0(a.type,a.memoizedProps));break;case 5:Ma(a),a.flags&Or&&F0(a.type,a.memoizedProps);break;case 3:case 4:if(Ti){var r=Vi;Vi=md(a.stateNode.containerInfo),Ma(a),Vi=r}else Ma(a);break;case 22:a.memoizedState===null&&(r=a.alternate,r!==null&&r.memoizedState!==null?(r=Or,Or=16777216,Ma(a),Or=r):Ma(a));break;default:Ma(a)}}function i0(a){var r=a.alternate;if(r!==null&&(a=r.child,a!==null)){r.child=null;do r=a.sibling,a.sibling=null,a=r;while(a!==null)}}function qo(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];vn=d,a0(d,a)}i0(a)}if(a.subtreeFlags&10256)for(a=a.child;a!==null;)s0(a),a=a.sibling}function s0(a){switch(a.tag){case 0:case 11:case 15:qo(a),a.flags&2048&&Hs(9,a,a.return);break;case 3:qo(a);break;case 12:qo(a);break;case 22:var r=a.stateNode;a.memoizedState!==null&&r._visibility&4&&(a.return===null||a.return.tag!==13)?(r._visibility&=-5,yc(a)):qo(a);break;default:qo(a)}}function yc(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];vn=d,a0(d,a)}i0(a)}for(a=a.child;a!==null;){switch(r=a,r.tag){case 0:case 11:case 15:Hs(8,r,r.return),yc(r);break;case 22:u=r.stateNode,u._visibility&4&&(u._visibility&=-5,yc(r));break;default:yc(r)}a=a.sibling}}function a0(a,r){for(;vn!==null;){var u=vn;switch(u.tag){case 0:case 11:case 15:Hs(8,u,r);break;case 23:case 22:if(u.memoizedState!==null&&u.memoizedState.cachePool!==null){var d=u.memoizedState.cachePool.pool;d!=null&&d.refCount++}break;case 24:Go(u.memoizedState.cache)}if(d=u.child,d!==null)d.return=u,vn=d;else t:for(u=a;vn!==null;){d=vn;var y=d.sibling,M=d.return;if(Jg(d),d===u){vn=null;break t}if(y!==null){y.return=M,vn=y;break t}vn=M}}}function Wf(a){var r=B0(a);if(r!=null){if(typeof r.memoizedProps["data-testname"]!="string")throw Error(i(364));return r}if(a=MM(a),a===null)throw Error(i(362));return a.stateNode.current}function Xf(a,r){var u=a.tag;switch(r.$$typeof){case zc:if(a.type===r.value)return!0;break;case Fc:t:{for(r=r.value,a=[a,0],u=0;u<a.length;){var d=a[u++],y=d.tag,M=a[u++],L=r[M];if(y!==5&&y!==26&&y!==27||!Ko(d)){for(;L!=null&&Xf(d,L);)M++,L=r[M];if(M===r.length){r=!0;break t}else for(d=d.child;d!==null;)a.push(d,M),d=d.sibling}}r=!1}return r;case Hc:if((u===5||u===26||u===27)&&TM(a.stateNode,r.value))return!0;break;case Gc:if((u===5||u===6||u===26||u===27)&&(a=EM(a),a!==null&&0<=a.indexOf(r.value)))return!0;break;case Vc:if((u===5||u===26||u===27)&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===r.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function qf(a){switch(a.$$typeof){case zc:return"<"+(l(a.value)||"Unknown")+">";case Fc:return":has("+(qf(a)||"")+")";case Hc:return'[role="'+a.value+'"]';case Gc:return'"'+a.value+'"';case Vc:return'[data-testname="'+a.value+'"]';default:throw Error(i(365))}}function r0(a,r){var u=[];a=[a,0];for(var d=0;d<a.length;){var y=a[d++],M=y.tag,L=a[d++],V=r[L];if(M!==5&&M!==26&&M!==27||!Ko(y)){for(;V!=null&&Xf(y,V);)L++,V=r[L];if(L===r.length)u.push(y);else for(y=y.child;y!==null;)a.push(y,L),y=y.sibling}}return u}function Yf(a,r){if(!Zo)throw Error(i(363));a=Wf(a),a=r0(a,r),r=[],a=Array.from(a);for(var u=0;u<a.length;){var d=a[u++],y=d.tag;if(y===5||y===26||y===27)Ko(d)||r.push(d.stateNode);else for(d=d.child;d!==null;)a.push(d),d=d.sibling}return r}function ui(){if((Ge&2)!==0&&Ce!==0)return Ce&-Ce;if(pe.T!==null){var a=Rr;return a!==0?a:gt()}return dM()}function o0(){Di===0&&(Di=(Ce&536870912)===0||Ne?z():536870912);var a=Ri.current;return a!==null&&(a.flags|=32),Di}function Gn(a,r,u){(a===Xe&&qe===2||a.cancelPendingCommit!==null)&&(vr(a,0),ms(a,Ce,Di,!1)),I(a,u),((Ge&2)===0||a!==Xe)&&(a===Xe&&((Ge&2)===0&&(Pa|=u),nn===4&&ms(a,Ce,Di,!1)),Et(a))}function l0(a,r,u){if((Ge&6)!==0)throw Error(i(327));var d=!u&&(r&60)===0&&(r&a.expiredLanes)===0||D(a,r),y=d?kS(a,r):Jf(a,r,!0),M=d;do{if(y===0){Br&&!d&&ms(a,r,0,!1);break}else if(y===6)ms(a,r,0,!Ss);else{if(u=a.current.alternate,M&&!VS(u)){y=Jf(a,r,!1),M=!1;continue}if(y===2){if(M=r,a.errorRecoveryDisabledLanes&M)var L=0;else L=a.pendingLanes&-536870913,L=L!==0?L:L&536870912?536870912:0;if(L!==0){r=L;t:{var V=a;y=il;var j=Ei&&V.current.memoizedState.isDehydrated;if(j&&(vr(V,L).flags|=256),L=Jf(V,L,!1),L!==2){if(Dd&&!j){V.errorRecoveryDisabledLanes|=M,Pa|=M,y=4;break t}M=$i,$i=y,M!==null&&Zf(M)}y=L}if(M=!1,y!==2)continue}}if(y===1){vr(a,0),ms(a,r,0,!0);break}t:{switch(d=a,y){case 0:case 1:throw Error(i(345));case 4:if((r&4194176)===r){ms(d,r,Di,!Ss);break t}break;case 2:$i=null;break;case 3:case 5:break;default:throw Error(i(329))}if(d.finishedWork=u,d.finishedLanes=r,(r&62914560)===r&&(M=Ld+300-Fi(),10<M)){if(ms(d,r,Di,!Ss),U(d,0)!==0)break t;d.timeoutHandle=uM(c0.bind(null,d,u,$i,kc,Nd,r,Di,Pa,zr,Ss,2,-0,0),M);break t}c0(d,u,$i,kc,Nd,r,Di,Pa,zr,Ss,0,-0,0)}}break}while(!0);Et(a)}function Zf(a){$i===null?$i=a:$i.push.apply($i,a)}function c0(a,r,u,d,y,M,L,V,j,ut,At,Ot,Ft){var ge=r.subtreeFlags;if((ge&8192||(ge&16785408)===16785408)&&(vM(),n0(r),r=_M(),r!==null)){a.cancelPendingCommit=r(_0.bind(null,a,u,d,y,L,V,j,1,Ot,Ft)),ms(a,M,L,!ut);return}_0(a,u,d,y,L,V,j,At,Ot,Ft)}function VS(a){for(var r=a;;){var u=r.tag;if((u===0||u===11||u===15)&&r.flags&16384&&(u=r.updateQueue,u!==null&&(u=u.stores,u!==null)))for(var d=0;d<u.length;d++){var y=u[d],M=y.getSnapshot;y=y.value;try{if(!pi(M(),y))return!1}catch{return!1}}if(u=r.child,r.subtreeFlags&16384&&u!==null)u.return=r,r=u;else{if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return!0;r=r.return}r.sibling.return=r.return,r=r.sibling}}return!0}function ms(a,r,u,d){r&=~Ud,r&=~Pa,a.suspendedLanes|=r,a.pingedLanes&=~r,d&&(a.warmLanes|=r),d=a.expirationTimes;for(var y=r;0<y;){var M=31-fi(y),L=1<<M;d[M]=-1,y&=~L}u!==0&&q(a,u,r)}function u0(){return(Ge&6)===0?(se(0),!1):!0}function Kf(){if(be!==null){if(qe===0)var a=be.return;else a=be,ys=Na=null,N(a),Nr=null,tl=0,a=be;for(;a!==null;)kg(a.alternate,a),a=a.return;be=null}}function vr(a,r){a.finishedWork=null,a.finishedLanes=0;var u=a.timeoutHandle;u!==fd&&(a.timeoutHandle=fd,hM(u)),u=a.cancelPendingCommit,u!==null&&(a.cancelPendingCommit=null,u()),Kf(),Xe=a,be=u=ks(a.current,null),Ce=r,qe=0,gi=null,Ss=!1,Br=D(a,r),Dd=!1,zr=Di=Ud=Pa=Js=nn=0,$i=il=null,Nd=!1,(r&8)!==0&&(r|=r&32);var d=a.entangledLanes;if(d!==0)for(a=a.entanglements,d&=r;0<d;){var y=31-fi(d),M=1<<y;r|=a[y],d&=~M}return Ms=r,pt(),u}function h0(a,r){Se=null,pe.H=Qi,r===$o?(r=qt(),qe=3):r===Td?(r=qt(),qe=4):qe=r===lv?8:r!==null&&typeof r=="object"&&typeof r.then=="function"?6:1,gi=r,be===null&&(nn=1,dc(a,nt(r,a.current)))}function f0(){var a=Ri.current;return a===null?!0:(Ce&4194176)===Ce?Ji===null:(Ce&62914560)===Ce||(Ce&536870912)!==0?a===Ji:!1}function d0(){var a=pe.H;return pe.H=Qi,a===null?Qi:a}function p0(){var a=pe.A;return pe.A=Db,a}function jf(){nn=4,Ss||(Ce&4194176)!==Ce&&Ri.current!==null||(Br=!0),(Js&134217727)===0&&(Pa&134217727)===0||Xe===null||ms(Xe,Ce,Di,!1)}function Jf(a,r,u){var d=Ge;Ge|=2;var y=d0(),M=p0();(Xe!==a||Ce!==r)&&(kc=null,vr(a,r)),r=!1;var L=nn;t:do try{if(qe!==0&&be!==null){var V=be,j=gi;switch(qe){case 8:Kf(),L=6;break t;case 3:case 2:case 6:Ri.current===null&&(r=!0);var ut=qe;if(qe=0,gi=null,_r(a,V,j,ut),u&&Br){L=0;break t}break;default:ut=qe,qe=0,gi=null,_r(a,V,j,ut)}}GS(),L=nn;break}catch(At){h0(a,At)}while(!0);return r&&a.shellSuspendCounter++,ys=Na=null,Ge=d,pe.H=y,pe.A=M,be===null&&(Xe=null,Ce=0,pt()),L}function GS(){for(;be!==null;)m0(be)}function kS(a,r){var u=Ge;Ge|=2;var d=d0(),y=p0();Xe!==a||Ce!==r?(kc=null,sl=Fi()+500,vr(a,r)):Br=D(a,r);t:do try{if(qe!==0&&be!==null){r=be;var M=gi;e:switch(qe){case 1:qe=0,gi=null,_r(a,r,M,1);break;case 2:if(Vt(M)){qe=0,gi=null,g0(r);break}r=function(){qe===2&&Xe===a&&(qe=7),Et(a)},M.then(r,r);break t;case 3:qe=7;break t;case 4:qe=5;break t;case 7:Vt(M)?(qe=0,gi=null,g0(r)):(qe=0,gi=null,_r(a,r,M,7));break;case 5:var L=null;switch(be.tag){case 26:L=be.memoizedState;case 5:case 27:var V=be,j=V.type,ut=V.pendingProps;if(L?ev(L):z0(j,ut)){qe=0,gi=null;var At=V.sibling;if(At!==null)be=At;else{var Ot=V.return;Ot!==null?(be=Ot,xc(Ot)):be=null}break e}}qe=0,gi=null,_r(a,r,M,5);break;case 6:qe=0,gi=null,_r(a,r,M,6);break;case 8:Kf(),nn=6;break t;default:throw Error(i(462))}}WS();break}catch(Ft){h0(a,Ft)}while(!0);return ys=Na=null,pe.H=d,pe.A=y,Ge=u,be!==null?0:(Xe=null,Ce=0,pt(),nn)}function WS(){for(;be!==null&&!yb();)m0(be)}function m0(a){var r=Og(a.alternate,a,Ms);a.memoizedProps=a.pendingProps,r===null?xc(a):be=r}function g0(a){var r=a,u=r.alternate;switch(r.tag){case 15:case 0:r=Dg(u,r,r.pendingProps,r.type,void 0,Ce);break;case 11:r=Dg(u,r,r.pendingProps,r.type.render,r.ref,Ce);break;case 5:N(r);default:kg(u,r),r=be=M0(r,Ms),r=Og(u,r,Ms)}a.memoizedProps=a.pendingProps,r===null?xc(a):be=r}function _r(a,r,u,d){ys=Na=null,N(r),Nr=null,tl=0;var y=r.return;try{if(IS(a,y,r,u,Ce)){nn=1,dc(a,nt(u,a.current)),be=null;return}}catch(M){if(y!==null)throw be=y,M;nn=1,dc(a,nt(u,a.current)),be=null;return}r.flags&32768?(Ne||d===1?a=!0:Br||(Ce&536870912)!==0?a=!1:(Ss=a=!0,(d===2||d===3||d===6)&&(d=Ri.current,d!==null&&d.tag===13&&(d.flags|=16384))),v0(r,a)):xc(r)}function xc(a){var r=a;do{if((r.flags&32768)!==0){v0(r,Ss);return}a=r.return;var u=BS(r.alternate,r,Ms);if(u!==null){be=u;return}if(r=r.sibling,r!==null){be=r;return}be=r=a}while(r!==null);nn===0&&(nn=5)}function v0(a,r){do{var u=zS(a.alternate,a);if(u!==null){u.flags&=32767,be=u;return}if(u=a.return,u!==null&&(u.flags|=32768,u.subtreeFlags=0,u.deletions=null),!r&&(a=a.sibling,a!==null)){be=a;return}be=a=u}while(a!==null);nn=6,be=null}function _0(a,r,u,d,y,M,L,V,j,ut){var At=pe.T,Ot=Ta();try{Jn(2),pe.T=null,XS(a,r,u,d,Ot,y,M,L,V,j,ut)}finally{pe.T=At,Jn(Ot)}}function XS(a,r,u,d,y,M,L,V){do ba();while(Ia!==null);if((Ge&6)!==0)throw Error(i(327));var j=a.finishedWork;if(d=a.finishedLanes,j===null)return null;if(a.finishedWork=null,a.finishedLanes=0,j===a.current)throw Error(i(177));a.callbackNode=null,a.callbackPriority=0,a.cancelPendingCommit=null;var ut=j.lanes|j.childLanes;if(ut|=xd,$(a,d,ut,M,L,V),a===Xe&&(be=Xe=null,Ce=0),(j.subtreeFlags&10256)===0&&(j.flags&10256)===0||Wc||(Wc=!0,Pd=ut,Id=u,KS(_d,function(){return ba(),null})),u=(j.flags&15990)!==0,(j.subtreeFlags&15990)!==0||u?(u=pe.T,pe.T=null,M=Ta(),Jn(2),L=Ge,Ge|=4,FS(a,j),$g(j,a),lM(a.containerInfo),a.current=j,jg(a,j.alternate,j),xb(),Ge=L,Jn(M),pe.T=u):a.current=j,Wc?(Wc=!1,Ia=a,al=d):y0(a,ut),ut=a.pendingLanes,ut===0&&(Qs=null),F(j.stateNode),Et(a),r!==null)for(y=a.onRecoverableError,j=0;j<r.length;j++)ut=r[j],y(ut.value,{componentStack:ut.stack});return(al&3)!==0&&ba(),ut=a.pendingLanes,(d&4194218)!==0&&(ut&42)!==0?a===Od?rl++:(rl=0,Od=a):rl=0,se(0),null}function y0(a,r){(a.pooledCacheLanes&=r)===0&&(r=a.pooledCache,r!=null&&(a.pooledCache=null,Go(r)))}function ba(){if(Ia!==null){var a=Ia,r=Pd;Pd=0;var u=at(al),d=32>u?32:u;u=pe.T;var y=Ta();try{if(Jn(d),pe.T=null,Ia===null)var M=!1;else{d=Id,Id=null;var L=Ia,V=al;if(Ia=null,al=0,(Ge&6)!==0)throw Error(i(331));var j=Ge;if(Ge|=4,s0(L.current),e0(L,L.current,V,d),Ge=j,se(0,!1),di&&typeof di.onPostCommitFiberRoot=="function")try{di.onPostCommitFiberRoot(jo,L)}catch{}M=!0}return M}finally{Jn(y),pe.T=u,y0(a,r)}}return!1}function x0(a,r,u){r=nt(u,r),r=Mf(a.stateNode,r,2),a=Lt(a,r,2),a!==null&&(I(a,2),Et(a))}function ze(a,r,u){if(a.tag===3)x0(a,a,u);else for(;r!==null;){if(r.tag===3){x0(r,a,u);break}else if(r.tag===1){var d=r.stateNode;if(typeof r.type.getDerivedStateFromError=="function"||typeof d.componentDidCatch=="function"&&(Qs===null||!Qs.has(d))){a=nt(u,a),u=bg(2),d=Lt(r,u,2),d!==null&&(Eg(u,d,r,a),I(d,2),Et(d));break}}r=r.return}}function Qf(a,r,u){var d=a.pingCache;if(d===null){d=a.pingCache=new Ub;var y=new Set;d.set(r,y)}else y=d.get(r),y===void 0&&(y=new Set,d.set(r,y));y.has(u)||(Dd=!0,y.add(u),a=qS.bind(null,a,r,u),r.then(a,a))}function qS(a,r,u){var d=a.pingCache;d!==null&&d.delete(r),a.pingedLanes|=a.suspendedLanes&u,a.warmLanes&=~u,Xe===a&&(Ce&u)===u&&(nn===4||nn===3&&(Ce&62914560)===Ce&&300>Fi()-Ld?(Ge&2)===0&&vr(a,0):Ud|=u,zr===Ce&&(zr=0)),Et(a)}function S0(a,r){r===0&&(r=w()),a=ht(a,r),a!==null&&(I(a,r),Et(a))}function YS(a){var r=a.memoizedState,u=0;r!==null&&(u=r.retryLane),S0(a,u)}function ZS(a,r){var u=0;switch(a.tag){case 13:var d=a.stateNode,y=a.memoizedState;y!==null&&(u=y.retryLane);break;case 19:d=a.stateNode;break;case 22:d=a.stateNode._retryCache;break;default:throw Error(i(314))}d!==null&&d.delete(r),S0(a,u)}function KS(a,r){return Cc(a,r)}function jS(a,r,u,d){this.tag=a,this.key=u,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=r,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function $f(a){return a=a.prototype,!(!a||!a.isReactComponent)}function ks(a,r){var u=a.alternate;return u===null?(u=e(a.tag,r,a.key,a.mode),u.elementType=a.elementType,u.type=a.type,u.stateNode=a.stateNode,u.alternate=a,a.alternate=u):(u.pendingProps=r,u.type=a.type,u.flags=0,u.subtreeFlags=0,u.deletions=null),u.flags=a.flags&31457280,u.childLanes=a.childLanes,u.lanes=a.lanes,u.child=a.child,u.memoizedProps=a.memoizedProps,u.memoizedState=a.memoizedState,u.updateQueue=a.updateQueue,r=a.dependencies,u.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext},u.sibling=a.sibling,u.index=a.index,u.ref=a.ref,u.refCleanup=a.refCleanup,u}function M0(a,r){a.flags&=31457282;var u=a.alternate;return u===null?(a.childLanes=0,a.lanes=r,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=u.childLanes,a.lanes=u.lanes,a.child=u.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=u.memoizedProps,a.memoizedState=u.memoizedState,a.updateQueue=u.updateQueue,a.type=u.type,r=u.dependencies,a.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext}),a}function Sc(a,r,u,d,y,M){var L=0;if(d=a,typeof a=="function")$f(a)&&(L=1);else if(typeof a=="string")L=Ti&&Un?K0(a,u,En.current)?26:iv(a)?27:5:Ti?K0(a,u,En.current)?26:5:Un&&iv(a)?27:5;else t:switch(a){case xr:return Ea(u.children,y,M,r);case R0:L=8,y|=24;break;case sd:return a=e(12,u,r,y|2),a.elementType=sd,a.lanes=M,a;case rd:return a=e(13,u,r,y),a.elementType=rd,a.lanes=M,a;case od:return a=e(19,u,r,y),a.elementType=od,a.lanes=M,a;case U0:return b0(u,y,M,r);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case tM:case Ws:L=10;break t;case D0:L=9;break t;case ad:L=11;break t;case ld:L=14;break t;case Xs:L=16,d=null;break t}L=29,u=Error(i(130,a===null?"null":typeof a,"")),d=null}return r=e(L,u,r,y),r.elementType=a,r.type=d,r.lanes=M,r}function Ea(a,r,u,d){return a=e(7,a,d,r),a.lanes=u,a}function b0(a,r,u,d){a=e(22,a,d,r),a.elementType=U0,a.lanes=u;var y={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var M=y._current;if(M===null)throw Error(i(456));if((y._pendingVisibility&2)===0){var L=ht(M,2);L!==null&&(y._pendingVisibility|=2,Gn(L,M,2))}},attach:function(){var M=y._current;if(M===null)throw Error(i(456));if((y._pendingVisibility&2)!==0){var L=ht(M,2);L!==null&&(y._pendingVisibility&=-3,Gn(L,M,2))}}};return a.stateNode=y,a}function td(a,r,u){return a=e(6,a,null,r),a.lanes=u,a}function ed(a,r,u){return r=e(4,a.children!==null?a.children:[],a.key,r),r.lanes=u,r.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},r}function JS(a,r,u,d,y,M,L,V){this.tag=1,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=fd,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=C(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=C(0),this.hiddenUpdates=C(null),this.identifierPrefix=d,this.onUncaughtError=y,this.onCaughtError=M,this.onRecoverableError=L,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=V,this.incompleteTransitions=new Map}function E0(a,r,u,d,y,M,L,V,j,ut,At,Ot){return a=new JS(a,r,u,L,V,j,ut,Ot),r=1,M===!0&&(r|=24),M=e(3,null,null,r),a.current=M,M.stateNode=a,r=Lf(),r.refCount++,a.pooledCache=r,r.refCount++,M.memoizedState={element:d,isDehydrated:u,cache:r},kt(M),a}function T0(a){return a?(a=br,a):br}function A0(a){var r=a._reactInternals;if(r===void 0)throw typeof a.render=="function"?Error(i(188)):(a=Object.keys(a).join(","),Error(i(268,a)));return a=v(r),a=a!==null?x(a):null,a===null?null:Yo(a.stateNode)}function C0(a,r,u,d,y,M){y=T0(y),d.context===null?d.context=y:d.pendingContext=y,d=yt(r),d.payload={element:u},M=M===void 0?null:M,M!==null&&(d.callback=M),u=Lt(a,d,r),u!==null&&(Gn(u,a,r),te(u,a,r))}function w0(a,r){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var u=a.retryLane;a.retryLane=u!==0&&u<r?u:r}}function nd(a,r){w0(a,r),(a=a.alternate)&&w0(a,r)}var Me={},QS=dm(),hi=m3(),id=Object.assign,$S=Symbol.for("react.element"),Mc=Symbol.for("react.transitional.element"),yr=Symbol.for("react.portal"),xr=Symbol.for("react.fragment"),R0=Symbol.for("react.strict_mode"),sd=Symbol.for("react.profiler"),tM=Symbol.for("react.provider"),D0=Symbol.for("react.consumer"),Ws=Symbol.for("react.context"),ad=Symbol.for("react.forward_ref"),rd=Symbol.for("react.suspense"),od=Symbol.for("react.suspense_list"),ld=Symbol.for("react.memo"),Xs=Symbol.for("react.lazy"),U0=Symbol.for("react.offscreen"),eM=Symbol.for("react.memo_cache_sentinel"),N0=Symbol.iterator,nM=Symbol.for("react.client.reference"),pe=QS.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,cd,L0,ud=!1,bc=Array.isArray,iM=t.rendererVersion,sM=t.rendererPackageName,P0=t.extraDevToolsConfig,Yo=t.getPublicInstance,aM=t.getRootHostContext,rM=t.getChildHostContext,oM=t.prepareForCommit,lM=t.resetAfterCommit,cM=t.createInstance,hd=t.appendInitialChild,I0=t.finalizeInitialChildren,Ec=t.shouldSetTextContent,O0=t.createTextInstance,uM=t.scheduleTimeout,hM=t.cancelTimeout,fd=t.noTimeout,gs=t.isPrimaryRenderer;t.warnsIfNotActing;var Dn=t.supportsMutation,qs=t.supportsPersistence,Ei=t.supportsHydration,B0=t.getInstanceFromNode;t.beforeActiveInstanceBlur,t.afterActiveInstanceBlur;var fM=t.preparePortalMount;t.prepareScopeUpdate,t.getInstanceFromScope;var Jn=t.setCurrentUpdatePriority,Ta=t.getCurrentUpdatePriority,dM=t.resolveUpdatePriority;t.resolveEventType,t.resolveEventTimeStamp;var pM=t.shouldAttemptEagerTransition,mM=t.detachDeletedInstance;t.requestPostPaintCallback;var gM=t.maySuspendCommit,z0=t.preloadInstance,vM=t.startSuspendingCommit,F0=t.suspendInstance,_M=t.waitForCommitToBeReady,Sr=t.NotPendingTransition,Aa=t.HostTransitionContext,yM=t.resetFormInstance;t.bindToConsole;var xM=t.supportsMicrotasks,SM=t.scheduleMicrotask,Zo=t.supportsTestSelectors,MM=t.findFiberRoot,bM=t.getBoundingRect,EM=t.getTextContent,Ko=t.isHiddenSubtree,TM=t.matchAccessibilityRole,AM=t.setFocusIfFocusable,CM=t.setupIntersectionObserver,wM=t.appendChild,RM=t.appendChildToContainer,DM=t.commitTextUpdate,UM=t.commitMount,NM=t.commitUpdate,LM=t.insertBefore,PM=t.insertInContainerBefore,IM=t.removeChild,OM=t.removeChildFromContainer,H0=t.resetTextContent,BM=t.hideInstance,zM=t.hideTextInstance,FM=t.unhideInstance,HM=t.unhideTextInstance,VM=t.clearContainer,GM=t.cloneInstance,V0=t.createContainerChildSet,G0=t.appendChildToContainerChildSet,kM=t.finalizeContainerChildren,k0=t.replaceContainerChildren,W0=t.cloneHiddenInstance,X0=t.cloneHiddenTextInstance,dd=t.isSuspenseInstancePending,pd=t.isSuspenseInstanceFallback,WM=t.getSuspenseInstanceFallbackErrorDetails,XM=t.registerSuspenseInstanceRetry,qM=t.canHydrateFormStateMarker,YM=t.isFormStateMarkerMatching,q0=t.getNextHydratableSibling,Y0=t.getFirstHydratableChild,ZM=t.getFirstHydratableChildWithinContainer,KM=t.getFirstHydratableChildWithinSuspenseInstance,jM=t.canHydrateInstance,JM=t.canHydrateTextInstance,QM=t.canHydrateSuspenseInstance,$M=t.hydrateInstance,tb=t.hydrateTextInstance,eb=t.hydrateSuspenseInstance,nb=t.getNextHydratableInstanceAfterSuspenseInstance,ib=t.commitHydratedContainer,sb=t.commitHydratedSuspenseInstance,ab=t.clearSuspenseBoundary,rb=t.clearSuspenseBoundaryFromContainer,Z0=t.shouldDeleteUnhydratedTailInstances;t.diffHydratedPropsForDevWarnings,t.diffHydratedTextForDevWarnings,t.describeHydratableInstanceForDevWarnings;var ob=t.validateHydratableInstance,lb=t.validateHydratableTextInstance,Ti=t.supportsResources,K0=t.isHostHoistableType,md=t.getHoistableRoot,j0=t.getResource,J0=t.acquireResource,Q0=t.releaseResource,cb=t.hydrateHoistable,$0=t.mountHoistable,tv=t.unmountHoistable,ub=t.createHoistableInstance,hb=t.prepareToCommitHoistables,fb=t.mayResourceSuspendCommit,ev=t.preloadResource,db=t.suspendResource,Un=t.supportsSingletons,nv=t.resolveSingletonInstance,pb=t.clearSingleton,mb=t.acquireSingletonInstance,gb=t.releaseSingletonInstance,iv=t.isHostSingletonType,gd=[],Mr=-1,br={},fi=Math.clz32?Math.clz32:A,vb=Math.log,_b=Math.LN2,Tc=128,Ac=4194304,Cc=hi.unstable_scheduleCallback,vd=hi.unstable_cancelCallback,yb=hi.unstable_shouldYield,xb=hi.unstable_requestPaint,Fi=hi.unstable_now,sv=hi.unstable_ImmediatePriority,Sb=hi.unstable_UserBlockingPriority,_d=hi.unstable_NormalPriority,Mb=hi.unstable_IdlePriority,bb=hi.log,Eb=hi.unstable_setDisableYieldValue,jo=null,di=null,pi=typeof Object.is=="function"?Object.is:G,av=new WeakMap,Er=[],Tr=0,wc=null,Rc=0,Ai=[],Ci=0,Ca=null,vs=1,_s="",En=S(null),Jo=S(null),Ys=S(null),Dc=S(null),kn=null,Nn=null,Ne=!1,Hi=null,ji=!1,yd=Error(i(519)),wi=[],Ar=0,xd=0,Uc=null,Cr=null,Sd=!1,Nc=!1,Md=!1,wr=0,Qo=null,bd=0,Rr=0,Dr=null,Zs=!1,Ed=!1,Tb=Object.prototype.hasOwnProperty,$o=Error(i(460)),Td=Error(i(474)),Lc={then:function(){}},Ur=null,Nr=null,tl=0,wa=ai(!0),rv=ai(!1),Lr=S(null),Pc=S(0),Ri=S(null),Ji=null,hn=S(0),Ks=0,Se=null,Ve=null,on=null,Ic=!1,Pr=!1,Ra=!1,Oc=0,el=0,Ir=null,Ab=0,Ad=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},Qi={readContext:Rn,use:Y,useCallback:je,useContext:je,useEffect:je,useImperativeHandle:je,useLayoutEffect:je,useInsertionEffect:je,useMemo:je,useReducer:je,useRef:je,useState:je,useDebugValue:je,useDeferredValue:je,useTransition:je,useSyncExternalStore:je,useId:je};Qi.useCacheRefresh=je,Qi.useMemoCache=je,Qi.useHostTransitionStatus=je,Qi.useFormState=je,Qi.useActionState=je,Qi.useOptimistic=je;var Da={readContext:Rn,use:Y,useCallback:function(a,r){return W().memoizedState=[a,r===void 0?null:r],a},useContext:Rn,useEffect:ag,useImperativeHandle:function(a,r,u){u=u!=null?u.concat([a]):null,uc(4194308,4,lg.bind(null,r,a),u)},useLayoutEffect:function(a,r){return uc(4194308,4,a,r)},useInsertionEffect:function(a,r){uc(4,2,a,r)},useMemo:function(a,r){var u=W();r=r===void 0?null:r;var d=a();if(Ra){X(!0);try{a()}finally{X(!1)}}return u.memoizedState=[d,r],d},useReducer:function(a,r,u){var d=W();if(u!==void 0){var y=u(r);if(Ra){X(!0);try{u(r)}finally{X(!1)}}}else y=r;return d.memoizedState=d.baseState=y,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:y},d.queue=a,a=a.dispatch=PS.bind(null,Se,a),[d.memoizedState,a]},useRef:function(a){var r=W();return a={current:a},r.memoizedState=a},useState:function(a){a=Oe(a);var r=a.queue,u=vg.bind(null,Se,r);return r.dispatch=u,[a.memoizedState,u]},useDebugValue:vf,useDeferredValue:function(a,r){var u=W();return _f(u,a,r)},useTransition:function(){var a=Oe(!1);return a=dg.bind(null,Se,a.queue,!0,!1),W().memoizedState=a,[!1,a]},useSyncExternalStore:function(a,r,u){var d=Se,y=W();if(Ne){if(u===void 0)throw Error(i(407));u=u()}else{if(u=r(),Xe===null)throw Error(i(349));(Ce&60)!==0||Qt(d,r,u)}y.memoizedState=u;var M={value:u,getSnapshot:r};return y.queue=M,ag(Ie.bind(null,d,M,a),[a]),d.flags|=2048,Kn(9,xe.bind(null,d,M,u,r),{destroy:void 0},null),u},useId:function(){var a=W(),r=Xe.identifierPrefix;if(Ne){var u=_s,d=vs;u=(d&~(1<<32-fi(d)-1)).toString(32)+u,r=":"+r+"R"+u,u=Oc++,0<u&&(r+="H"+u.toString(32)),r+=":"}else u=Ab++,r=":"+r+"r"+u.toString(32)+":";return a.memoizedState=r},useCacheRefresh:function(){return W().memoizedState=LS.bind(null,Se)}};Da.useMemoCache=St,Da.useHostTransitionStatus=yf,Da.useFormState=Hn,Da.useActionState=Hn,Da.useOptimistic=function(a){var r=W();r.memoizedState=r.baseState=a;var u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return r.queue=u,r=xf.bind(null,Se,!0,u),u.dispatch=r,[a,r]};var js={readContext:Rn,use:Y,useCallback:ug,useContext:Rn,useEffect:gf,useImperativeHandle:cg,useInsertionEffect:rg,useLayoutEffect:og,useMemo:hg,useReducer:Gt,useRef:sg,useState:function(){return Gt(Ut)},useDebugValue:vf,useDeferredValue:function(a,r){var u=Q();return fg(u,Ve.memoizedState,a,r)},useTransition:function(){var a=Gt(Ut)[0],r=Q().memoizedState;return[typeof a=="boolean"?a:et(a),r]},useSyncExternalStore:ae,useId:mg};js.useCacheRefresh=gg,js.useMemoCache=St,js.useHostTransitionStatus=yf,js.useFormState=Vn,js.useActionState=Vn,js.useOptimistic=function(a,r){var u=Q();return ee(u,Ve,a,r)};var Ua={readContext:Rn,use:Y,useCallback:ug,useContext:Rn,useEffect:gf,useImperativeHandle:cg,useInsertionEffect:rg,useLayoutEffect:og,useMemo:hg,useReducer:ne,useRef:sg,useState:function(){return ne(Ut)},useDebugValue:vf,useDeferredValue:function(a,r){var u=Q();return Ve===null?_f(u,a,r):fg(u,Ve.memoizedState,a,r)},useTransition:function(){var a=ne(Ut)[0],r=Q().memoizedState;return[typeof a=="boolean"?a:et(a),r]},useSyncExternalStore:ae,useId:mg};Ua.useCacheRefresh=gg,Ua.useMemoCache=St,Ua.useHostTransitionStatus=yf,Ua.useFormState=pr,Ua.useActionState=pr,Ua.useOptimistic=function(a,r){var u=Q();return Ve!==null?ee(u,Ve,a,r):(u.baseState=a,[a,u.queue.dispatch])};var Cd={isMounted:function(a){return(a=a._reactInternals)?m(a)===a:!1},enqueueSetState:function(a,r,u){a=a._reactInternals;var d=ui(),y=yt(d);y.payload=r,u!=null&&(y.callback=u),r=Lt(a,y,d),r!==null&&(Gn(r,a,d),te(r,a,d))},enqueueReplaceState:function(a,r,u){a=a._reactInternals;var d=ui(),y=yt(d);y.tag=1,y.payload=r,u!=null&&(y.callback=u),r=Lt(a,y,d),r!==null&&(Gn(r,a,d),te(r,a,d))},enqueueForceUpdate:function(a,r){a=a._reactInternals;var u=ui(),d=yt(u);d.tag=2,r!=null&&(d.callback=r),r=Lt(a,d,u),r!==null&&(Gn(r,a,u),te(r,a,u))}},ov=typeof reportError=="function"?reportError:function(a){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var r=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof a=="object"&&a!==null&&typeof a.message=="string"?String(a.message):String(a),error:a});if(!window.dispatchEvent(r))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",a);return}console.error(a)},lv=Error(i(461)),gn=!1,wd={dehydrated:null,treeContext:null,retryLane:0},Bc=S(null),Na=null,ys=null,Cb=typeof AbortController<"u"?AbortController:function(){var a=[],r=this.signal={aborted:!1,addEventListener:function(u,d){a.push(d)}};this.abort=function(){r.aborted=!0,a.forEach(function(u){return u()})}},wb=hi.unstable_scheduleCallback,Rb=hi.unstable_NormalPriority,tn={$$typeof:Ws,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},cv=pe.S;pe.S=function(a,r){typeof r=="object"&&r!==null&&typeof r.then=="function"&&ot(a,r),cv!==null&&cv(a,r)};var La=S(null),xs=!1,en=!1,Rd=!1,uv=typeof WeakSet=="function"?WeakSet:Set,vn=null,hv=!1,ln=null,mi=!1,Vi=null,Or=8192,Db={getCacheForType:function(a){var r=Rn(tn),u=r.data.get(a);return u===void 0&&(u=a(),r.data.set(a,u)),u}},zc=0,Fc=1,Hc=2,Vc=3,Gc=4;if(typeof Symbol=="function"&&Symbol.for){var nl=Symbol.for;zc=nl("selector.component"),Fc=nl("selector.has_pseudo_class"),Hc=nl("selector.role"),Vc=nl("selector.test_id"),Gc=nl("selector.text")}var Ub=typeof WeakMap=="function"?WeakMap:Map,Ge=0,Xe=null,be=null,Ce=0,qe=0,gi=null,Ss=!1,Br=!1,Dd=!1,Ms=0,nn=0,Js=0,Pa=0,Ud=0,Di=0,zr=0,il=null,$i=null,Nd=!1,Ld=0,sl=1/0,kc=null,Qs=null,Wc=!1,Ia=null,al=0,Pd=0,Id=null,rl=0,Od=null;return Me.attemptContinuousHydration=function(a){if(a.tag===13){var r=ht(a,67108864);r!==null&&Gn(r,a,67108864),nd(a,67108864)}},Me.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var r=ui(),u=ht(a,r);u!==null&&Gn(u,a,r),nd(a,r)}},Me.attemptSynchronousHydration=function(a){switch(a.tag){case 3:if(a=a.stateNode,a.current.memoizedState.isDehydrated){var r=T(a.pendingLanes);if(r!==0){for(a.pendingLanes|=2,a.entangledLanes|=2;r;){var u=1<<31-fi(r);a.entanglements[1]|=u,r&=~u}Et(a),(Ge&6)===0&&(sl=Fi()+500,se(0))}}break;case 13:r=ht(a,2),r!==null&&Gn(r,a,2),u0(),nd(a,2)}},Me.batchedUpdates=function(a,r){return a(r)},Me.createComponentSelector=function(a){return{$$typeof:zc,value:a}},Me.createContainer=function(a,r,u,d,y,M,L,V,j,ut){return E0(a,r,!1,null,u,d,M,L,V,j,ut,null)},Me.createHasPseudoClassSelector=function(a){return{$$typeof:Fc,value:a}},Me.createHydrationContainer=function(a,r,u,d,y,M,L,V,j,ut,At,Ot,Ft){return a=E0(u,d,!0,a,y,M,V,j,ut,At,Ot,Ft),a.context=T0(null),u=a.current,d=ui(),y=yt(d),y.callback=r??null,Lt(u,y,d),a.current.lanes=d,I(a,d),Et(a),a},Me.createPortal=function(a,r,u){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:yr,key:d==null?null:""+d,children:a,containerInfo:r,implementation:u}},Me.createRoleSelector=function(a){return{$$typeof:Hc,value:a}},Me.createTestNameSelector=function(a){return{$$typeof:Vc,value:a}},Me.createTextSelector=function(a){return{$$typeof:Gc,value:a}},Me.defaultOnCaughtError=function(a){console.error(a)},Me.defaultOnRecoverableError=function(a){ov(a)},Me.defaultOnUncaughtError=function(a){ov(a)},Me.deferredUpdates=function(a){var r=pe.T,u=Ta();try{return Jn(32),pe.T=null,a()}finally{Jn(u),pe.T=r}},Me.discreteUpdates=function(a,r,u,d,y){var M=pe.T,L=Ta();try{return Jn(2),pe.T=null,a(r,u,d,y)}finally{Jn(L),pe.T=M,Ge===0&&(sl=Fi()+500)}},Me.findAllNodes=Yf,Me.findBoundingRects=function(a,r){if(!Zo)throw Error(i(363));r=Yf(a,r),a=[];for(var u=0;u<r.length;u++)a.push(bM(r[u]));for(r=a.length-1;0<r;r--){u=a[r];for(var d=u.x,y=d+u.width,M=u.y,L=M+u.height,V=r-1;0<=V;V--)if(r!==V){var j=a[V],ut=j.x,At=ut+j.width,Ot=j.y,Ft=Ot+j.height;if(d>=ut&&M>=Ot&&y<=At&&L<=Ft){a.splice(r,1);break}else if(d!==ut||u.width!==j.width||Ft<M||Ot>L){if(!(M!==Ot||u.height!==j.height||At<d||ut>y)){ut>d&&(j.width+=ut-d,j.x=d),At<y&&(j.width=y-ut),a.splice(r,1);break}}else{Ot>M&&(j.height+=Ot-M,j.y=M),Ft<L&&(j.height=L-Ot),a.splice(r,1);break}}}return a},Me.findHostInstance=A0,Me.findHostInstanceWithNoPortals=function(a){return a=v(a),a=a!==null?b(a):null,a===null?null:Yo(a.stateNode)},Me.findHostInstanceWithWarning=function(a){return A0(a)},Me.flushPassiveEffects=ba,Me.flushSyncFromReconciler=function(a){var r=Ge;Ge|=1;var u=pe.T,d=Ta();try{if(Jn(2),pe.T=null,a)return a()}finally{Jn(d),pe.T=u,Ge=r,(Ge&6)===0&&se(0)}},Me.flushSyncWork=u0,Me.focusWithin=function(a,r){if(!Zo)throw Error(i(363));for(a=Wf(a),r=r0(a,r),r=Array.from(r),a=0;a<r.length;){var u=r[a++],d=u.tag;if(!Ko(u)){if((d===5||d===26||d===27)&&AM(u.stateNode))return!0;for(u=u.child;u!==null;)r.push(u),u=u.sibling}}return!1},Me.getFindAllNodesFailureDescription=function(a,r){if(!Zo)throw Error(i(363));var u=0,d=[];a=[Wf(a),0];for(var y=0;y<a.length;){var M=a[y++],L=M.tag,V=a[y++],j=r[V];if((L!==5&&L!==26&&L!==27||!Ko(M))&&(Xf(M,j)&&(d.push(qf(j)),V++,V>u&&(u=V)),V<r.length))for(M=M.child;M!==null;)a.push(M,V),M=M.sibling}if(u<r.length){for(a=[];u<r.length;u++)a.push(qf(r[u]));return`findAllNodes was able to match part of the selector:
  `+(d.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},Me.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 27:case 5:return Yo(a.child.stateNode);default:return a.child.stateNode}},Me.injectIntoDevTools=function(){var a={bundleType:0,version:iM,rendererPackageName:sM,currentDispatcherRef:pe,findFiberByHostInstance:B0,reconcilerVersion:"19.0.0"};if(P0!==null&&(a.rendererConfig=P0),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var r=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(r.isDisabled||!r.supportsFiber)a=!0;else{try{jo=r.inject(a),di=r}catch{}a=!!r.checkDCE}}return a},Me.isAlreadyRendering=function(){return!1},Me.observeVisibleRects=function(a,r,u,d){if(!Zo)throw Error(i(363));a=Yf(a,r);var y=CM(a,u,d).disconnect;return{disconnect:function(){y()}}},Me.shouldError=function(){return null},Me.shouldSuspend=function(){return!1},Me.startHostTransition=function(a,r,u,d){if(a.tag!==5)throw Error(i(476));var y=pg(a).queue;dg(a,y,r,Sr,u===null?n:function(){var M=pg(a).next.queue;return Fo(a,M,{},ui()),u(d)})},Me.updateContainer=function(a,r,u,d){var y=r.current,M=ui();return C0(y,M,a,r,u,d),M},Me.updateContainerSync=function(a,r,u,d){return r.tag===0&&ba(),C0(r.current,2,a,r,u,d),2},Me},s.exports.default=s.exports,Object.defineProperty(s.exports,"__esModule",{value:!0})})(Lp)),Lp.exports}var $_;function v3(){return $_||($_=1,Np.exports=g3()),Np.exports}var _3=v3();const y3=hy(_3);var Op={exports:{}},Bp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ty;function x3(){return ty||(ty=1,(function(s){function t(F,X){var G=F.length;F.push(X);t:for(;0<G;){var nt=G-1>>>1,lt=F[nt];if(0<i(lt,X))F[nt]=X,F[G]=lt,G=nt;else break t}}function e(F){return F.length===0?null:F[0]}function n(F){if(F.length===0)return null;var X=F[0],G=F.pop();if(G!==X){F[0]=G;t:for(var nt=0,lt=F.length,mt=lt>>>1;nt<mt;){var Nt=2*(nt+1)-1,Jt=F[Nt],zt=Nt+1,st=F[zt];if(0>i(Jt,G))zt<lt&&0>i(st,Jt)?(F[nt]=st,F[zt]=G,nt=zt):(F[nt]=Jt,F[Nt]=G,nt=Nt);else if(zt<lt&&0>i(st,G))F[nt]=st,F[zt]=G,nt=zt;else break t}}return X}function i(F,X){var G=F.sortIndex-X.sortIndex;return G!==0?G:F.id-X.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var o=performance;s.unstable_now=function(){return o.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,b=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function A(F){for(var X=e(f);X!==null;){if(X.callback===null)n(f);else if(X.startTime<=F)n(f),X.sortIndex=X.expirationTime,t(h,X);else break;X=e(f)}}function T(F){if(b=!1,A(F),!x)if(e(h)!==null)x=!0,K();else{var X=e(f);X!==null&&at(T,X.startTime-F)}}var U=!1,D=-1,P=5,z=-1;function w(){return!(s.unstable_now()-z<P)}function C(){if(U){var F=s.unstable_now();z=F;var X=!0;try{t:{x=!1,b&&(b=!1,_(D),D=-1),v=!0;var G=g;try{e:{for(A(F),m=e(h);m!==null&&!(m.expirationTime>F&&w());){var nt=m.callback;if(typeof nt=="function"){m.callback=null,g=m.priorityLevel;var lt=nt(m.expirationTime<=F);if(F=s.unstable_now(),typeof lt=="function"){m.callback=lt,A(F),X=!0;break e}m===e(h)&&n(h),A(F)}else n(h);m=e(h)}if(m!==null)X=!0;else{var mt=e(f);mt!==null&&at(T,mt.startTime-F),X=!1}}break t}finally{m=null,g=G,v=!1}X=void 0}}finally{X?I():U=!1}}}var I;if(typeof E=="function")I=function(){E(C)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,q=$.port2;$.port1.onmessage=C,I=function(){q.postMessage(null)}}else I=function(){S(C,0)};function K(){U||(U=!0,I())}function at(F,X){D=S(function(){F(s.unstable_now())},X)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(F){F.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,K())},s.unstable_forceFrameRate=function(F){0>F||125<F?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<F?Math.floor(1e3/F):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(F){switch(g){case 1:case 2:case 3:var X=3;break;default:X=g}var G=g;g=X;try{return F()}finally{g=G}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(F,X){switch(F){case 1:case 2:case 3:case 4:case 5:break;default:F=3}var G=g;g=F;try{return X()}finally{g=G}},s.unstable_scheduleCallback=function(F,X,G){var nt=s.unstable_now();switch(typeof G=="object"&&G!==null?(G=G.delay,G=typeof G=="number"&&0<G?nt+G:nt):G=nt,F){case 1:var lt=-1;break;case 2:lt=250;break;case 5:lt=1073741823;break;case 4:lt=1e4;break;default:lt=5e3}return lt=G+lt,F={id:p++,callback:X,priorityLevel:F,startTime:G,expirationTime:lt,sortIndex:-1},G>nt?(F.sortIndex=G,t(f,F),e(h)===null&&F===e(f)&&(b?(_(D),D=-1):b=!0,at(T,G-nt))):(F.sortIndex=lt,t(h,F),x||v||(x=!0,K())),F},s.unstable_shouldYield=w,s.unstable_wrapCallback=function(F){var X=g;return function(){var G=g;g=X;try{return F.apply(this,arguments)}finally{g=G}}}})(Bp)),Bp}var ey;function S3(){return ey||(ey=1,Op.exports=x3()),Op.exports}var ny=S3();function eg(s,t,e){if(!s)return;if(e(s)===!0)return s;let n=t?s.return:s.child;for(;n;){const i=eg(n,t,e);if(i)return i;n=t?null:n.sibling}}function pS(s){try{return Object.defineProperties(s,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return s}}const ng=pS(de.createContext(null));class mS extends de.Component{render(){return de.createElement(ng.Provider,{value:this._reactInternals},this.props.children)}}function gS(){const s=de.useContext(ng);if(s===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=de.useId();return de.useMemo(()=>{for(const e of[s,s?.alternate]){if(!e)continue;const n=eg(e,!1,i=>{let o=i.memoizedState;for(;o;){if(o.memoizedState===t)return!0;o=o.next}});if(n)return n}},[s,t])}const M3=Symbol.for("react.context"),b3=s=>s!==null&&typeof s=="object"&&"$$typeof"in s&&s.$$typeof===M3;function E3(){const s=gS(),[t]=de.useState(()=>new Map);t.clear();let e=s;for(;e;){const n=e.type;b3(n)&&n!==ng&&!t.has(n)&&t.set(n,de.use(pS(n))),e=e.return}return t}function T3(){const s=E3();return de.useMemo(()=>Array.from(s.keys()).reduce((t,e)=>n=>de.createElement(t,null,de.createElement(e.Provider,{...n,value:s.get(e)})),t=>de.createElement(mS,{...t})),[s])}function vS(s){let t=s.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const _S=s=>s&&s.isOrthographicCamera,A3=s=>s&&s.hasOwnProperty("current"),C3=s=>s!=null&&(typeof s=="string"||typeof s=="number"||s.isColor),oc=((s,t)=>typeof window<"u"&&(((s=window.document)==null?void 0:s.createElement)||((t=window.navigator)==null?void 0:t.product)==="ReactNative"))()?de.useLayoutEffect:de.useEffect;function yS(s){const t=de.useRef(s);return oc(()=>void(t.current=s),[s]),t}function w3(){const s=gS(),t=T3();return de.useMemo(()=>({children:e})=>{const i=!!eg(s,!0,o=>o.type===de.StrictMode)?de.StrictMode:de.Fragment;return xn.jsx(i,{children:xn.jsx(t,{children:e})})},[s,t])}function R3({set:s}){return oc(()=>(s(new Promise(()=>null)),()=>s(!1)),[s]),null}const D3=(s=>(s=class extends de.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}},s.getDerivedStateFromError=()=>({error:!0}),s))();function xS(s){var t;const e=typeof window<"u"?(t=window.devicePixelRatio)!=null?t:2:1;return Array.isArray(s)?Math.min(Math.max(s[0],e),s[1]):s}function ro(s){var t;return(t=s.__r3f)==null?void 0:t.root.getState()}const Qe={obj:s=>s===Object(s)&&!Qe.arr(s)&&typeof s!="function",fun:s=>typeof s=="function",str:s=>typeof s=="string",num:s=>typeof s=="number",boo:s=>typeof s=="boolean",und:s=>s===void 0,nul:s=>s===null,arr:s=>Array.isArray(s),equ(s,t,{arrays:e="shallow",objects:n="reference",strict:i=!0}={}){if(typeof s!=typeof t||!!s!=!!t)return!1;if(Qe.str(s)||Qe.num(s)||Qe.boo(s))return s===t;const o=Qe.obj(s);if(o&&n==="reference")return s===t;const l=Qe.arr(s);if(l&&e==="reference")return s===t;if((l||o)&&s===t)return!0;let c;for(c in s)if(!(c in t))return!1;if(o&&e==="shallow"&&n==="shallow"){for(c in i?t:s)if(!Qe.equ(s[c],t[c],{strict:i,objects:"reference"}))return!1}else for(c in i?t:s)if(s[c]!==t[c])return!1;if(Qe.und(c)){if(l&&s.length===0&&t.length===0||o&&Object.keys(s).length===0&&Object.keys(t).length===0)return!0;if(s!==t)return!1}return!0}};function U3(s){s.type!=="Scene"&&(s.dispose==null||s.dispose());for(const t in s){const e=s[t];e?.type!=="Scene"&&(e==null||e.dispose==null||e.dispose())}}const SS=["children","key","ref"];function N3(s){const t={};for(const e in s)SS.includes(e)||(t[e]=s[e]);return t}function Rh(s,t,e,n){const i=s;let o=i?.__r3f;return o||(o={root:t,type:e,parent:null,children:[],props:N3(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=o)),o}function jl(s,t){let e=s[t];if(!t.includes("-"))return{root:s,key:t,target:e};e=s;for(const i of t.split("-")){var n;t=i,s=e,e=(n=e)==null?void 0:n[t]}return{root:s,key:t,target:e}}const iy=/-\d+$/;function Dh(s,t){if(Qe.str(t.props.attach)){if(iy.test(t.props.attach)){const i=t.props.attach.replace(iy,""),{root:o,key:l}=jl(s.object,i);Array.isArray(o[l])||(o[l]=[])}const{root:e,key:n}=jl(s.object,t.props.attach);t.previousAttach=e[n],e[n]=t.object}else Qe.fun(t.props.attach)&&(t.previousAttach=t.props.attach(s.object,t.object))}function Uh(s,t){if(Qe.str(t.props.attach)){const{root:e,key:n}=jl(s.object,t.props.attach),i=t.previousAttach;i===void 0?delete e[n]:e[n]=i}else t.previousAttach==null||t.previousAttach(s.object,t.object);delete t.previousAttach}const om=[...SS,"args","dispose","attach","object","onUpdate","dispose"],sy=new Map;function L3(s){let t=sy.get(s.constructor);try{t||(t=new s.constructor,sy.set(s.constructor,t))}catch{}return t}function P3(s,t){const e={};for(const n in t)if(!om.includes(n)&&!Qe.equ(t[n],s.props[n])){e[n]=t[n];for(const i in t)i.startsWith(`${n}-`)&&(e[i]=t[i])}for(const n in s.props){if(om.includes(n)||t.hasOwnProperty(n))continue;const{root:i,key:o}=jl(s.object,n);if(i.constructor&&i.constructor.length===0){const l=L3(i);Qe.und(l)||(e[o]=l[o])}else e[o]=0}return e}const I3=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],O3=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function ca(s,t){var e;const n=s.__r3f,i=n&&vS(n).getState(),o=n?.eventCount;for(const c in t){let h=t[c];if(om.includes(c))continue;if(n&&O3.test(c)){typeof h=="function"?n.handlers[c]=h:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(h===void 0)continue;let{root:f,key:p,target:m}=jl(s,c);if(m instanceof Mo&&h instanceof Mo)m.mask=h.mask;else if(m instanceof Bt&&C3(h))m.set(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&h!=null&&h.constructor&&m.constructor===h.constructor)m.copy(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(h))typeof m.fromArray=="function"?m.fromArray(h):m.set(...h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof h=="number")typeof m.setScalar=="function"?m.setScalar(h):m.set(h);else{var l;f[p]=h,i&&!i.linear&&I3.includes(p)&&(l=f[p])!=null&&l.isTexture&&f[p].format===Bn&&f[p].type===Pi&&(f[p].colorSpace=On)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(e=n.object)!=null&&e.isObject3D&&o!==n.eventCount){const c=n.object,h=i.internal.interaction.indexOf(c);h>-1&&i.internal.interaction.splice(h,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&Lo(n),s}function Lo(s){var t;if(!s.parent)return;s.props.onUpdate==null||s.props.onUpdate(s.object);const e=(t=s.root)==null||t.getState==null?void 0:t.getState();e&&e.internal.frames===0&&e.invalidate()}function B3(s,t){s.manual||(_S(s)?(s.left=t.width/-2,s.right=t.width/2,s.top=t.height/2,s.bottom=t.height/-2):s.aspect=t.width/t.height,s.updateProjectionMatrix())}const ti=s=>s?.isObject3D;function Ou(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}function MS(s,t,e,n){const i=e.get(t);i&&(e.delete(t),e.size===0&&(s.delete(n),i.target.releasePointerCapture(n)))}function z3(s,t){const{internal:e}=s.getState();e.interaction=e.interaction.filter(n=>n!==t),e.initialHits=e.initialHits.filter(n=>n!==t),e.hovered.forEach((n,i)=>{(n.eventObject===t||n.object===t)&&e.hovered.delete(i)}),e.capturedMap.forEach((n,i)=>{MS(e.capturedMap,t,n,i)})}function F3(s){function t(h){const{internal:f}=s.getState(),p=h.offsetX-f.initialClick[0],m=h.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}function e(h){return h.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}function n(h,f){const p=s.getState(),m=new Set,g=[],v=f?f(p.internal.interaction):p.internal.interaction;for(let _=0;_<v.length;_++){const E=ro(v[_]);E&&(E.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(h,p);function x(_){const E=ro(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var A;E.events.compute==null||E.events.compute(h,E,(A=E.previousRoot)==null?void 0:A.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let b=v.flatMap(x).sort((_,E)=>{const A=ro(_.object),T=ro(E.object);return!A||!T?_.distance-E.distance:T.events.priority-A.events.priority||_.distance-E.distance}).filter(_=>{const E=Ou(_);return m.has(E)?!1:(m.add(E),!0)});p.events.filter&&(b=p.events.filter(b,p));for(const _ of b){let E=_.object;for(;E;){var S;(S=E.__r3f)!=null&&S.eventCount&&g.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in h&&p.internal.capturedMap.has(h.pointerId))for(let _ of p.internal.capturedMap.get(h.pointerId).values())m.has(Ou(_.intersection))||g.push(_.intersection);return g}function i(h,f,p,m){if(h.length){const g={stopped:!1};for(const v of h){let x=ro(v.object);if(x||v.object.traverseAncestors(b=>{const S=ro(b);if(S)return x=S,!1}),x){const{raycaster:b,pointer:S,camera:_,internal:E}=x,A=new O(S.x,S.y,0).unproject(_),T=w=>{var C,I;return(C=(I=E.capturedMap.get(w))==null?void 0:I.has(v.eventObject))!=null?C:!1},U=w=>{const C={intersection:v,target:f.target};E.capturedMap.has(w)?E.capturedMap.get(w).set(v.eventObject,C):E.capturedMap.set(w,new Map([[v.eventObject,C]])),f.target.setPointerCapture(w)},D=w=>{const C=E.capturedMap.get(w);C&&MS(E.capturedMap,v.eventObject,C,w)};let P={};for(let w in f){let C=f[w];typeof C!="function"&&(P[w]=C)}let z={...v,...P,pointer:S,intersections:h,stopped:g.stopped,delta:p,unprojectedPoint:A,ray:b.ray,camera:_,stopPropagation(){const w="pointerId"in f&&E.capturedMap.get(f.pointerId);if((!w||w.has(v.eventObject))&&(z.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(C=>C.eventObject===v.eventObject))){const C=h.slice(0,h.indexOf(v));o([...C,v])}},target:{hasPointerCapture:T,setPointerCapture:U,releasePointerCapture:D},currentTarget:{hasPointerCapture:T,setPointerCapture:U,releasePointerCapture:D},nativeEvent:f};if(m(z),g.stopped===!0)break}}}return h}function o(h){const{internal:f}=s.getState();for(const p of f.hovered.values())if(!h.length||!h.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f;if(f.hovered.delete(Ou(p)),g!=null&&g.eventCount){const v=g.handlers,x={...p,intersections:h};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(h,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(h)}}function c(h){switch(h){case"onPointerLeave":case"onPointerCancel":return()=>o([]);case"onLostPointerCapture":return f=>{const{internal:p}=s.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),o([]))})}}return function(p){const{onPointerMissed:m,internal:g}=s.getState();g.lastEvent.current=p;const v=h==="onPointerMove",x=h==="onClick"||h==="onContextMenu"||h==="onDoubleClick",S=n(p,v?e:void 0),_=x?t(p):0;h==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=S.map(A=>A.eventObject)),x&&!S.length&&_<=2&&(l(p,g.interaction),m&&m(p)),v&&o(S);function E(A){const T=A.eventObject,U=T.__r3f;if(!(U!=null&&U.eventCount))return;const D=U.handlers;if(v){if(D.onPointerOver||D.onPointerEnter||D.onPointerOut||D.onPointerLeave){const P=Ou(A),z=g.hovered.get(P);z?z.stopped&&A.stopPropagation():(g.hovered.set(P,A),D.onPointerOver==null||D.onPointerOver(A),D.onPointerEnter==null||D.onPointerEnter(A))}D.onPointerMove==null||D.onPointerMove(A)}else{const P=D[h];P?(!x||g.initialHits.includes(T))&&(l(p,g.interaction.filter(z=>!g.initialHits.includes(z))),P(A)):x&&g.initialHits.includes(T)&&l(p,g.interaction.filter(z=>!g.initialHits.includes(z)))}}i(S,p,_,E)}}return{handlePointer:c}}const ay=s=>!!(s!=null&&s.render),bS=de.createContext(null),H3=(s,t)=>{const e=d3((c,h)=>{const f=new O,p=new O,m=new O;function g(_=h().camera,E=p,A=h().size){const{width:T,height:U,top:D,left:P}=A,z=T/U;E.isVector3?m.copy(E):m.set(...E);const w=_.getWorldPosition(f).distanceTo(m);if(_S(_))return{width:T/_.zoom,height:U/_.zoom,top:D,left:P,factor:1,distance:w,aspect:z};{const C=_.fov*Math.PI/180,I=2*Math.tan(C/2)*w,$=I*(T/U);return{width:$,height:I,top:D,left:P,factor:T/$,distance:w,aspect:z}}}let v;const x=_=>c(E=>({performance:{...E.performance,current:_}})),b=new dt;return{set:c,get:h,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(_=1)=>s(h(),_),advance:(_,E)=>t(_,E,h()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new Km,pointer:b,mouse:b,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=h();v&&clearTimeout(v),_.performance.current!==_.performance.min&&x(_.performance.min),v=setTimeout(()=>x(h().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,A=0,T=0)=>{const U=h().camera,D={width:_,height:E,top:A,left:T};c(P=>({size:D,viewport:{...P.viewport,...g(U,p,D)}}))},setDpr:_=>c(E=>{const A=xS(_);return{viewport:{...E.viewport,dpr:A,initialDpr:E.viewport.initialDpr||A}}}),setFrameloop:(_="always")=>{const E=h().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:de.createRef(),active:!1,frames:0,priority:0,subscribe:(_,E,A)=>{const T=h().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:_,priority:E,store:A}),T.subscribers=T.subscribers.sort((U,D)=>U.priority-D.priority),()=>{const U=h().internal;U!=null&&U.subscribers&&(U.priority=U.priority-(E>0?1:0),U.subscribers=U.subscribers.filter(D=>D.ref!==_))}}}}}),n=e.getState();let i=n.size,o=n.viewport.dpr,l=n.camera;return e.subscribe(()=>{const{camera:c,size:h,viewport:f,gl:p,set:m}=e.getState();if(h.width!==i.width||h.height!==i.height||f.dpr!==o){i=h,o=f.dpr,B3(c,h),f.dpr>0&&p.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&p.domElement instanceof HTMLCanvasElement;p.setSize(h.width,h.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),e.subscribe(c=>s(c)),e};function ES(){const s=de.useContext(bS);if(!s)throw new Error("R3F: Hooks can only be used within the Canvas component!");return s}function V3(s=e=>e,t){return ES()(s,t)}function G3(s,t=0){const e=ES(),n=e.getState().internal.subscribe,i=yS(s);return oc(()=>n(i,t,e),[t,n,e]),null}function k3(s){const t=y3(s);return t.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:de.version}),t}const TS=0,Ao={},W3=/^three(?=[A-Z])/,pf=s=>`${s[0].toUpperCase()}${s.slice(1)}`;let X3=0;const q3=s=>typeof s=="function";function Y3(s){if(q3(s)){const t=`${X3++}`;return Ao[t]=s,t}else Object.assign(Ao,s)}function AS(s,t){const e=pf(s),n=Ao[e];if(s!=="primitive"&&!n)throw new Error(`R3F: ${e} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(s==="primitive"&&!t.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(t.args!==void 0&&!Array.isArray(t.args))throw new Error("R3F: The args prop must be an array!")}function Z3(s,t,e){var n;return s=pf(s)in Ao?s:s.replace(W3,""),AS(s,t),s==="primitive"&&(n=t.object)!=null&&n.__r3f&&delete t.object.__r3f,Rh(t.object,e,s,t)}function K3(s){if(!s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Uh(s.parent,s):ti(s.object)&&(s.object.visible=!1),s.isHidden=!0,Lo(s)}}function CS(s){if(s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Dh(s.parent,s):ti(s.object)&&s.props.visible!==!1&&(s.object.visible=!0),s.isHidden=!1,Lo(s)}}function ig(s,t,e){const n=t.root.getState();if(!(!s.parent&&s.object!==n.scene)){if(!t.object){var i,o;const l=Ao[pf(t.type)];t.object=(i=t.props.object)!=null?i:new l(...(o=t.props.args)!=null?o:[]),t.object.__r3f=t}if(ca(t.object,t.props),t.props.attach)Dh(s,t);else if(ti(t.object)&&ti(s.object)){const l=s.object.children.indexOf(e?.object);if(e&&l!==-1){const c=s.object.children.indexOf(t.object);if(c!==-1){s.object.children.splice(c,1);const h=c<l?l-1:l;s.object.children.splice(h,0,t.object)}else t.object.parent=s.object,s.object.children.splice(l,0,t.object),t.object.dispatchEvent({type:"added"}),s.object.dispatchEvent({type:"childadded",child:t.object})}else s.object.add(t.object)}for(const l of t.children)ig(t,l);Lo(t)}}function zp(s,t){t&&(t.parent=s,s.children.push(t),ig(s,t))}function ry(s,t,e){if(!t||!e)return;t.parent=s;const n=s.children.indexOf(e);n!==-1?s.children.splice(n,0,t):s.children.push(t),ig(s,t,e)}function wS(s){if(typeof s.dispose=="function"){const t=()=>{try{s.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?t():ny.unstable_scheduleCallback(ny.unstable_IdlePriority,t)}}function lm(s,t,e){if(!t)return;t.parent=null;const n=s.children.indexOf(t);n!==-1&&s.children.splice(n,1),t.props.attach?Uh(s,t):ti(t.object)&&ti(s.object)&&(s.object.remove(t.object),z3(vS(t),t.object));const i=t.props.dispose!==null&&e!==!1;for(let o=t.children.length-1;o>=0;o--){const l=t.children[o];lm(t,l,i)}t.children.length=0,delete t.object.__r3f,i&&t.type!=="primitive"&&t.object.type!=="Scene"&&wS(t.object),e===void 0&&Lo(t)}function j3(s,t){for(const e of[s,s.alternate])if(e!==null)if(typeof e.ref=="function"){e.refCleanup==null||e.refCleanup();const n=e.ref(t);typeof n=="function"&&(e.refCleanup=n)}else e.ref&&(e.ref.current=t)}const Gu=[];function J3(){for(const[e]of Gu){const n=e.parent;if(n){e.props.attach?Uh(n,e):ti(e.object)&&ti(n.object)&&n.object.remove(e.object);for(const i of e.children)i.props.attach?Uh(e,i):ti(i.object)&&ti(e.object)&&e.object.remove(i.object)}e.isHidden&&CS(e),e.object.__r3f&&delete e.object.__r3f,e.type!=="primitive"&&wS(e.object)}for(const[e,n,i]of Gu){e.props=n;const o=e.parent;if(o){var s,t;const l=Ao[pf(e.type)];e.object=(s=e.props.object)!=null?s:new l(...(t=e.props.args)!=null?t:[]),e.object.__r3f=e,j3(i,e.object),ca(e.object,e.props),e.props.attach?Dh(o,e):ti(e.object)&&ti(o.object)&&o.object.add(e.object);for(const c of e.children)c.props.attach?Dh(e,c):ti(c.object)&&ti(e.object)&&e.object.add(c.object);Lo(e)}}Gu.length=0}const Fp=()=>{},oy={};let Bu=TS;const Q3=0,$3=4,cm=k3({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:Z3,removeChild:lm,appendChild:zp,appendInitialChild:zp,insertBefore:ry,appendChildToContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||zp(e,t)},removeChildFromContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||lm(e,t)},insertInContainerBefore(s,t,e){const n=s.getState().scene.__r3f;!t||!e||!n||ry(n,t,e)},getRootHostContext:()=>oy,getChildHostContext:()=>oy,commitUpdate(s,t,e,n,i){var o,l,c;AS(t,n);let h=!1;if((s.type==="primitive"&&e.object!==n.object||((o=n.args)==null?void 0:o.length)!==((l=e.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((p,m)=>{var g;return p!==((g=e.args)==null?void 0:g[m])}))&&(h=!0),h)Gu.push([s,{...n},i]);else{const p=P3(s,n);Object.keys(p).length&&(Object.assign(s.props,p),ca(s.object,p))}(i.sibling===null||(i.flags&$3)===Q3)&&J3()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:s=>s?.object,prepareForCommit:()=>null,preparePortalMount:s=>Rh(s.getState().scene,s,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:K3,unhideInstance:CS,createTextInstance:Fp,hideTextInstance:Fp,unhideTextInstance:Fp,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:de.createContext(null),setCurrentUpdatePriority(s){Bu=s},getCurrentUpdatePriority(){return Bu},resolveUpdatePriority(){var s;if(Bu!==TS)return Bu;switch(typeof window<"u"&&((s=window.event)==null?void 0:s.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return zu.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return zu.ContinuousEventPriority;default:return zu.DefaultEventPriority}},resetFormInstance(){}}),cr=new Map,oo={objects:"shallow",strict:!1};function tD(s,t){if(!t&&typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement&&s.parentElement){const{width:e,height:n,top:i,left:o}=s.parentElement.getBoundingClientRect();return{width:e,height:n,top:i,left:o}}else if(!t&&typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas)return{width:s.width,height:s.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...t}}function eD(s){const t=cr.get(s),e=t?.fiber,n=t?.store;t&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,o=n||H3(fm,cy),l=e||cm.createContainer(o,zu.ConcurrentRoot,null,!1,null,"",i,i,i,null);t||cr.set(s,{fiber:l,store:o});let c,h,f=!1,p=null;return{async configure(m={}){let g;p=new Promise(mt=>g=mt);let{gl:v,size:x,scene:b,events:S,onCreated:_,shadows:E=!1,linear:A=!1,flat:T=!1,legacy:U=!1,orthographic:D=!1,frameloop:P="always",dpr:z=[1,2],performance:w,raycaster:C,camera:I,onPointerMissed:$}=m,q=o.getState(),K=q.gl;if(!q.gl){const mt={canvas:s,powerPreference:"high-performance",antialias:!0,alpha:!0},Nt=typeof v=="function"?await v(mt):v;ay(Nt)?K=Nt:K=new dS({...mt,...v}),q.set({gl:K})}let at=q.raycaster;at||q.set({raycaster:at=new sS});const{params:F,...X}=C||{};if(Qe.equ(X,at,oo)||ca(at,{...X}),Qe.equ(F,at.params,oo)||ca(at,{params:{...at.params,...F}}),!q.camera||q.camera===h&&!Qe.equ(h,I,oo)){h=I;const mt=I?.isCamera,Nt=mt?I:D?new rc(0,0,0,0,.1,1e3):new Sn(75,0,.1,1e3);mt||(Nt.position.z=5,I&&(ca(Nt,I),Nt.manual||("aspect"in I||"left"in I||"right"in I||"bottom"in I||"top"in I)&&(Nt.manual=!0,Nt.updateProjectionMatrix())),!q.camera&&!(I!=null&&I.rotation)&&Nt.lookAt(0,0,0)),q.set({camera:Nt}),at.camera=Nt}if(!q.scene){let mt;b!=null&&b.isScene?(mt=b,Rh(mt,o,"",{})):(mt=new Rm,Rh(mt,o,"",{}),b&&ca(mt,b)),q.set({scene:mt})}S&&!q.events.handlers&&q.set({events:S(o)});const G=tD(s,x);if(Qe.equ(G,q.size,oo)||q.setSize(G.width,G.height,G.top,G.left),z&&q.viewport.dpr!==xS(z)&&q.setDpr(z),q.frameloop!==P&&q.setFrameloop(P),q.onPointerMissed||q.set({onPointerMissed:$}),w&&!Qe.equ(w,q.performance,oo)&&q.set(mt=>({performance:{...mt.performance,...w}})),!q.xr){var nt;const mt=(zt,st)=>{const Dt=o.getState();Dt.frameloop!=="never"&&cy(zt,!0,Dt,st)},Nt=()=>{const zt=o.getState();zt.gl.xr.enabled=zt.gl.xr.isPresenting,zt.gl.xr.setAnimationLoop(zt.gl.xr.isPresenting?mt:null),zt.gl.xr.isPresenting||fm(zt)},Jt={connect(){const zt=o.getState().gl;zt.xr.addEventListener("sessionstart",Nt),zt.xr.addEventListener("sessionend",Nt)},disconnect(){const zt=o.getState().gl;zt.xr.removeEventListener("sessionstart",Nt),zt.xr.removeEventListener("sessionend",Nt)}};typeof((nt=K.xr)==null?void 0:nt.addEventListener)=="function"&&Jt.connect(),q.set({xr:Jt})}if(K.shadowMap){const mt=K.shadowMap.enabled,Nt=K.shadowMap.type;if(K.shadowMap.enabled=!!E,Qe.boo(E))K.shadowMap.type=bl;else if(Qe.str(E)){var lt;const Jt={basic:py,percentage:Ph,soft:bl,variance:Xi};K.shadowMap.type=(lt=Jt[E])!=null?lt:bl}else Qe.obj(E)&&Object.assign(K.shadowMap,E);(mt!==K.shadowMap.enabled||Nt!==K.shadowMap.type)&&(K.shadowMap.needsUpdate=!0)}return Ae.enabled=!U,f||(K.outputColorSpace=A?fa:On,K.toneMapping=T?as:pm),q.legacy!==U&&q.set(()=>({legacy:U})),q.linear!==A&&q.set(()=>({linear:A})),q.flat!==T&&q.set(()=>({flat:T})),v&&!Qe.fun(v)&&!ay(v)&&!Qe.equ(v,K,oo)&&ca(K,v),c=_,f=!0,g(),this},render(m){return!f&&!p&&this.configure(),p.then(()=>{cm.updateContainer(xn.jsx(nD,{store:o,children:m,onCreated:c,rootElement:s}),l,null,()=>{})}),o},unmount(){RS(s)}}}function nD({store:s,children:t,onCreated:e,rootElement:n}){return oc(()=>{const i=s.getState();i.set(o=>({internal:{...o.internal,active:!0}})),e&&e(i),s.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),xn.jsx(bS.Provider,{value:s,children:t})}function RS(s,t){const e=cr.get(s),n=e?.fiber;if(n){const i=e?.store.getState();i&&(i.internal.active=!1),cm.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var o,l,c,h;i.events.disconnect==null||i.events.disconnect(),(o=i.gl)==null||(l=o.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(h=i.gl)!=null&&h.xr&&i.xr.disconnect(),U3(i.scene),cr.delete(s)}catch{}},500)})}}const iD=new Set,sD=new Set,aD=new Set;function Hp(s,t){if(s.size)for(const{callback:e}of s.values())e(t)}function Ll(s,t){switch(s){case"before":return Hp(iD,t);case"after":return Hp(sD,t);case"tail":return Hp(aD,t)}}let Vp,Gp;function um(s,t,e){let n=t.clock.getDelta();t.frameloop==="never"&&typeof s=="number"&&(n=s-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=s),Vp=t.internal.subscribers;for(let i=0;i<Vp.length;i++)Gp=Vp[i],Gp.ref.current(Gp.store.getState(),n,e);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),t.frameloop==="always"?1:t.internal.frames}let Nh=!1,hm=!1,kp,ly,lo;function DS(s){ly=requestAnimationFrame(DS),Nh=!0,kp=0,Ll("before",s),hm=!0;for(const e of cr.values()){var t;lo=e.store.getState(),lo.internal.active&&(lo.frameloop==="always"||lo.internal.frames>0)&&!((t=lo.gl.xr)!=null&&t.isPresenting)&&(kp+=um(s,lo))}if(hm=!1,Ll("after",s),kp===0)return Ll("tail",s),Nh=!1,cancelAnimationFrame(ly)}function fm(s,t=1){var e;if(!s)return cr.forEach(n=>fm(n.store.getState(),t));(e=s.gl.xr)!=null&&e.isPresenting||!s.internal.active||s.frameloop==="never"||(t>1?s.internal.frames=Math.min(60,s.internal.frames+t):hm?s.internal.frames=2:s.internal.frames=1,Nh||(Nh=!0,requestAnimationFrame(DS)))}function cy(s,t=!0,e,n){if(t&&Ll("before",s),e)um(s,e,n);else for(const i of cr.values())um(s,i.store.getState());t&&Ll("after",s)}const Wp={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function rD(s){const{handlePointer:t}=F3(s);return{priority:1,enabled:!0,compute(e,n,i){n.pointer.set(e.offsetX/n.size.width*2-1,-(e.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Wp).reduce((e,n)=>({...e,[n]:t(n)}),{}),update:()=>{var e;const{events:n,internal:i}=s.getState();(e=i.lastEvent)!=null&&e.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:e=>{const{set:n,events:i}=s.getState();if(i.disconnect==null||i.disconnect(),n(o=>({events:{...o.events,connected:e}})),i.handlers)for(const o in i.handlers){const l=i.handlers[o],[c,h]=Wp[o];e.addEventListener(c,l,{passive:h})}},disconnect:()=>{const{set:e,events:n}=s.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const o=n.handlers[i],[l]=Wp[i];n.connected.removeEventListener(l,o)}e(i=>({events:{...i.events,connected:void 0}}))}}}}function uy(s,t){let e;return(...n)=>{window.clearTimeout(e),e=window.setTimeout(()=>s(...n),t)}}function oD({debounce:s,scroll:t,polyfill:e,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=e||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[o,l]=de.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=de.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:o,orientationHandler:null}),h=s?typeof s=="number"?s:s.scroll:null,f=s?typeof s=="number"?s:s.resize:null,p=de.useRef(!1);de.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,v]=de.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:E,top:A,width:T,height:U,bottom:D,right:P,x:z,y:w}=c.current.element.getBoundingClientRect(),C={left:E,top:A,width:T,height:U,bottom:D,right:P,x:z,y:w};c.current.element instanceof HTMLElement&&n&&(C.height=c.current.element.offsetHeight,C.width=c.current.element.offsetWidth),Object.freeze(C),p.current&&!hD(c.current.lastBounds,C)&&l(c.current.lastBounds=C)};return[_,f?uy(_,f):_,h?uy(_,h):_]},[l,n,h,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function b(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),t&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=_=>{!_||_===c.current.element||(x(),c.current.element=_,c.current.scrollContainers=US(_),b())};return cD(v,!!t),lD(g),de.useEffect(()=>{x(),b()},[t,v,g]),de.useEffect(()=>x,[]),[S,o,m]}function lD(s){de.useEffect(()=>{const t=s;return window.addEventListener("resize",t),()=>void window.removeEventListener("resize",t)},[s])}function cD(s,t){de.useEffect(()=>{if(t){const e=s;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",e,!0)}},[s,t])}function US(s){const t=[];if(!s||s===document.body)return t;const{overflow:e,overflowX:n,overflowY:i}=window.getComputedStyle(s);return[e,n,i].some(o=>o==="auto"||o==="scroll")&&t.push(s),[...t,...US(s.parentElement)]}const uD=["x","y","top","bottom","left","right","width","height"],hD=(s,t)=>uD.every(e=>s[e]===t[e]);function fD({ref:s,children:t,fallback:e,resize:n,style:i,gl:o,events:l=rD,eventSource:c,eventPrefix:h,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:_,camera:E,scene:A,onPointerMissed:T,onCreated:U,...D}){de.useMemo(()=>Y3(n3),[]);const P=w3(),[z,w]=oD({scroll:!0,debounce:{scroll:50,resize:0},...n}),C=de.useRef(null),I=de.useRef(null);de.useImperativeHandle(s,()=>C.current);const $=yS(T),[q,K]=de.useState(!1),[at,F]=de.useState(!1);if(q)throw q;if(at)throw at;const X=de.useRef(null);oc(()=>{const nt=C.current;if(w.width>0&&w.height>0&&nt){X.current||(X.current=eD(nt));async function lt(){await X.current.configure({gl:o,scene:A,events:l,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:_,camera:E,size:w,onPointerMissed:(...mt)=>$.current==null?void 0:$.current(...mt),onCreated:mt=>{mt.events.connect==null||mt.events.connect(c?A3(c)?c.current:c:I.current),h&&mt.setEvents({compute:(Nt,Jt)=>{const zt=Nt[h+"X"],st=Nt[h+"Y"];Jt.pointer.set(zt/Jt.size.width*2-1,-(st/Jt.size.height)*2+1),Jt.raycaster.setFromCamera(Jt.pointer,Jt.camera)}}),U?.(mt)}}),X.current.render(xn.jsx(P,{children:xn.jsx(D3,{set:F,children:xn.jsx(de.Suspense,{fallback:xn.jsx(R3,{set:K}),children:t??null})})}))}lt()}}),de.useEffect(()=>{const nt=C.current;if(nt)return()=>RS(nt)},[]);const G=c?"none":"auto";return xn.jsx("div",{ref:I,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:G,...i},...D,children:xn.jsx("div",{ref:z,style:{width:"100%",height:"100%"},children:xn.jsx("canvas",{ref:C,style:{display:"block"},children:e})})})}function dD(s){return xn.jsx(mS,{children:xn.jsx(fD,{...s})})}const pD=s=>(s=s.replace("#",""),[parseInt(s.slice(0,2),16)/255,parseInt(s.slice(2,4),16)/255,parseInt(s.slice(4,6),16)/255]),mD=`
varying vec2 vUv;
varying vec3 vPosition;

void main() {
  vPosition = position;
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,gD=`
varying vec2 vUv;
varying vec3 vPosition;

uniform float uTime;
uniform vec3  uColor;
uniform float uSpeed;
uniform float uScale;
uniform float uRotation;
uniform float uNoiseIntensity;

const float e = 2.71828182845904523536;

float noise(vec2 texCoord) {
  float G = e;
  vec2  r = (G * sin(G * texCoord));
  return fract(r.x * r.y * (1.0 + texCoord.x));
}

vec2 rotateUvs(vec2 uv, float angle) {
  float c = cos(angle);
  float s = sin(angle);
  mat2  rot = mat2(c, -s, s, c);
  return rot * uv;
}

void main() {
  float rnd        = noise(gl_FragCoord.xy);
  vec2  uv         = rotateUvs(vUv * uScale, uRotation);
  vec2  tex        = uv * uScale;
  float tOffset    = uSpeed * uTime;

  tex.y += 0.03 * sin(8.0 * tex.x - tOffset);

  float pattern = 0.6 +
                  0.4 * sin(5.0 * (tex.x + tex.y +
                                   cos(3.0 * tex.x + 5.0 * tex.y) +
                                   0.02 * tOffset) +
                           sin(20.0 * (tex.x + tex.y - 0.1 * tOffset)));

  vec4 col = vec4(uColor, 1.0) * vec4(pattern) - rnd / 15.0 * uNoiseIntensity;
  col.a = 1.0;
  gl_FragColor = col;
}
`,NS=de.forwardRef(function({uniforms:t},e){const{viewport:n}=V3();return de.useLayoutEffect(()=>{e.current&&e.current.scale.set(n.width,n.height,1)},[e,n]),G3((i,o)=>{e.current.material.uniforms.uTime.value+=.1*o}),xn.jsxs("mesh",{ref:e,children:[xn.jsx("planeGeometry",{args:[1,1,1,1]}),xn.jsx("shaderMaterial",{uniforms:t,vertexShader:mD,fragmentShader:gD})]})});NS.displayName="SilkPlane";const yD=({speed:s=5,scale:t=1,color:e="#1f2937",noiseIntensity:n=1.5,rotation:i=0})=>{const o=de.useRef(),l=de.useMemo(()=>({uSpeed:{value:15},uScale:{value:1},uNoiseIntensity:{value:0},uColor:{value:new Bt(...pD("#12101c"))},uRotation:{value:i},uTime:{value:0}}),[s,t,n,e,i]);return xn.jsx(dD,{className:"mb-0",dpr:[1,2],frameloop:"always",style:{position:"fixed",top:0,left:0,width:"100%",height:"100%",zIndex:-1},children:xn.jsx(NS,{ref:o,uniforms:l})})};export{yD as default};
